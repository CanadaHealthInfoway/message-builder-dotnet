/**
 * Copyright 2015 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_4.Iehr.Repc_mt120002ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Business Name: Common Observation Query Parameters</summary>
     * 
     * <p>Root class for query definition</p> <p>Defines the set of 
     * parameters that may be used to filter the query 
     * response.</p>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"REPC_MT120002CA.ParameterList"})]
    public class CommonObservationQueryParameters : MessagePartBean {

        private BL includeNotesIndicatorValue;
        private IVL<TS, Interval<PlatformDate>> measurementEffectivePeriodValue;
        private IList<CD> measurementTypeValue;
        private TS patientBirthDateValue;
        private CV patientGenderValue;
        private II patientIDValue;
        private PN patientNameValue;

        public CommonObservationQueryParameters() {
            this.includeNotesIndicatorValue = new BLImpl();
            this.measurementEffectivePeriodValue = new IVLImpl<TS, Interval<PlatformDate>>();
            this.measurementTypeValue = new List<CD>();
            this.patientBirthDateValue = new TSImpl();
            this.patientGenderValue = new CVImpl();
            this.patientIDValue = new IIImpl();
            this.patientNameValue = new PNImpl();
        }
        /**
         * <summary>Business Name: Include Notes Indicator</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT120002CA.IncludeNotesIndicator.value 
         * Conformance/Cardinality: MANDATORY (1) <p>Allows for the 
         * flexibility of omitting/including notes in the retrieval of 
         * information for common observation data.</p><p>Because the 
         * attribute is boolean, it must explicitly indicate a 'TRUE' 
         * or 'FALSE', and thus it is mandatory.</p> <p>Indicates 
         * whether or not common observation record are to be returned 
         * along with notes that have been recorded against the 
         * measurement record.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"includeNotesIndicator/value"})]
        public bool? IncludeNotesIndicatorValue {
            get { return this.includeNotesIndicatorValue.Value; }
            set { this.includeNotesIndicatorValue.Value = value; }
        }

        /**
         * <summary>Business Name: G:Measurement Effective Period</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT120002CA.MeasurementEffectivePeriod.value 
         * Conformance/Cardinality: MANDATORY (1) <p>Allows the 
         * requester to specify the measurement period of interest for 
         * the retrieval. Useful for constraining run-away queries.</p> 
         * <p>Indicates the measurement period for which the 
         * request/query applies.</p><p>Filter the result set to 
         * include only those patient measurement that were taken 
         * within the specified period.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"measurementEffectivePeriod/value"})]
        public Interval<PlatformDate> MeasurementEffectivePeriodValue {
            get { return this.measurementEffectivePeriodValue.Value; }
            set { this.measurementEffectivePeriodValue.Value = value; }
        }

        /**
         * <summary>Business Name: F:Measurement Types</summary>
         * 
         * <remarks>Relationship: REPC_MT120002CA.MeasurementType.value 
         * Conformance/Cardinality: MANDATORY (1) <p>Allows for the 
         * retrieval of patient measurements based on a specific type 
         * of measurement or set of measurements.</p> <p>Indicates that 
         * only patient measurements of a specific type are to be 
         * included in the result set. If not specified, all 
         * measurement types will be included.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"measurementType/value"})]
        public IList<CommonClinicalObservationType> MeasurementTypeValue {
            get { return new RawListWrapper<CD, CommonClinicalObservationType>(measurementTypeValue, typeof(CDImpl)); }
        }

        /**
         * <summary>Business Name: E:Patient Birth Date</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT120002CA.PatientBirthDate.value 
         * Conformance/Cardinality: MANDATORY (1) <p>Used to confirm 
         * the identity of the patient for the query and is therefore 
         * mandatory.</p> <p>Indicates the gender of the patient.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"patientBirthDate/value"})]
        public PlatformDate PatientBirthDateValue {
            get { return this.patientBirthDateValue.Value; }
            set { this.patientBirthDateValue.Value = value; }
        }

        /**
         * <summary>Business Name: D:Patient Gender</summary>
         * 
         * <remarks>Relationship: REPC_MT120002CA.PatientGender.value 
         * Conformance/Cardinality: MANDATORY (1) <p>Used to confirm 
         * the of the patient for the query and is therefore 
         * mandatory.</p> <p>Indicates the gender (sex) of the 
         * patient.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"patientGender/value"})]
        public AdministrativeGender PatientGenderValue {
            get { return (AdministrativeGender) this.patientGenderValue.Value; }
            set { this.patientGenderValue.Value = value; }
        }

        /**
         * <summary>Business Name: B:Patient ID</summary>
         * 
         * <remarks>Relationship: REPC_MT120002CA.PatientID.value 
         * Conformance/Cardinality: MANDATORY (1) <p>Allows filtering 
         * of result set by patient Id. This is a mandatory field 
         * because a patient must be specified for the query to be 
         * valid</p> <p>Identifier of the patient who is the subject of 
         * the patient measurement query. Filter the result set to 
         * include only those records pertaining to the patient with 
         * this Id.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"patientID/value"})]
        public Identifier PatientIDValue {
            get { return this.patientIDValue.Value; }
            set { this.patientIDValue.Value = value; }
        }

        /**
         * <summary>Business Name: C:Patient Name</summary>
         * 
         * <remarks>Relationship: REPC_MT120002CA.PatientName.value 
         * Conformance/Cardinality: MANDATORY (1) <p>Allows filtering 
         * of result set by patient name. This is a mandatory field 
         * because a patient name must match the patient Id for the 
         * query to be valid.</p> <p>The name of the patient who is the 
         * subject of the patient measurement query.</p><p>Filter the 
         * result set to include only those records pertaining to the 
         * patient with this name.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"patientName/value"})]
        public PersonName PatientNameValue {
            get { return this.patientNameValue.Value; }
            set { this.patientNameValue.Value = value; }
        }

    }

}