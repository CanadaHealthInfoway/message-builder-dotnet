/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2013-03-08 11:06:36 -0500 (Fri, 08 Mar 2013) $
 * Revision:      $LastChangedRevision: 6699 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Si.Rcmr_mt010002ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt040205ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Si.Merged;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Business Name: Keyword</summary>
     * 
     * <p>Allows a patient to control access to their health 
     * information. Provides authorization for providers to view 
     * patient information.</p> <p>Information pertaining to a 
     * patient's secret password used to control access to his/her 
     * health information.</p>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"RCMR_MT010002CA.KeywordEvent"})]
    public class Keyword : MessagePartBean {

        private Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Merged.Patient subject1Patient;
        private ST authorSignatureText;
        private Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Merged.IConsenter authorConsenter;
        private IList<CV> subject2RecordTypeCode;

        public Keyword() {
            this.authorSignatureText = new STImpl();
            this.subject2RecordTypeCode = new List<CV>();
        }
        /**
         * <summary>Relationship: RCMR_MT010002CA.Subject.patient</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subject1/patient"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Merged.Patient Subject1Patient {
            get { return this.subject1Patient; }
            set { this.subject1Patient = value; }
        }

        /**
         * <summary>Business Name: Keyword</summary>
         * 
         * <remarks>Relationship: RCMR_MT010002CA.Author.signatureText 
         * Conformance/Cardinality: POPULATED (1) <p>ZKW.5</p> 
         * <p>ZZZ.9</p> <p>Allows patients to change their keyword. If 
         * explicitly set to null, removes the keyword for the 
         * identified record types. Because of this, the attribute is 
         * set to 'populated' and not mandatory.</p> <p>The 
         * create/update/remove function is done in tandem with the use 
         * of the Consent CMET. To Create - the keyword in the consent 
         * CMET contains a null value and the message pa yload will 
         * provide the new keyword value To Update - the old keyword 
         * would be submitted in the consent CMET (and must match to 
         * the existing keyword), while the message payload will 
         * contain the new keyword value To Remove - the old kwyord is 
         * submitted in the consent CMET (and must match to the 
         * existing keyword), while the message payload will contain a 
         * null value which will replace the old keyword value</p> 
         * <p>Indicate the keyword associated with a particular 
         * consent.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"author/signatureText"})]
        public String AuthorSignatureText {
            get { return this.authorSignatureText.Value; }
            set { this.authorSignatureText.Value = value; }
        }

        /**
         * <summary>Relationship: RCMR_MT010002CA.Author.consenter</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"author/consenter"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Merged.IConsenter AuthorConsenter {
            get { return this.authorConsenter; }
            set { this.authorConsenter = value; }
        }

        public Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Si.Merged.Patient AuthorConsenterAsPatient {
            get { return this.authorConsenter is Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Si.Merged.Patient ? (Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Si.Merged.Patient) this.authorConsenter : (Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Si.Merged.Patient) null; }
        }
        public bool HasAuthorConsenterAsPatient() {
            return (this.authorConsenter is Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Si.Merged.Patient);
        }

        public Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt040205ca.ResponsiblePerson AuthorConsenterAsResponsibleParty {
            get { return this.authorConsenter is Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt040205ca.ResponsiblePerson ? (Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt040205ca.ResponsiblePerson) this.authorConsenter : (Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt040205ca.ResponsiblePerson) null; }
        }
        public bool HasAuthorConsenterAsResponsibleParty() {
            return (this.authorConsenter is Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt040205ca.ResponsiblePerson);
        }

        /**
         * <summary>Business Name: B:Consent Information Types</summary>
         * 
         * <remarks>Relationship: RCMR_MT010002CA.RecordType.code 
         * Conformance/Cardinality: MANDATORY (1) <p>Different keywords 
         * may be needed to access different types of patient 
         * information (e.g. demographics, medications, allergies, lab 
         * results). Understanding the type of information the keyword 
         * applies to is critical, and therefore the attribute is 
         * mandatory.</p> <p>The type of patient information that can 
         * be accessed or modified. Examples are: demographics, 
         * medications, lab, DI, etc</p><p>The keyword revisioning 
         * process may also involve revising the list of information 
         * types covered by the keyword.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subject2/recordType/code"})]
        public IList<ActInformationAccessTypeCode> Subject2RecordTypeCode {
            get { return new RawListWrapper<CV, ActInformationAccessTypeCode>(subject2RecordTypeCode, typeof(CVImpl)); }
        }

    }

}