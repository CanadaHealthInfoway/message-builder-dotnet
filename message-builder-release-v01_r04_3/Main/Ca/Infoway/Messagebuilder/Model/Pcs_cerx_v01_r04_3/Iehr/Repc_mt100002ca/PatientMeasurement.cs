/**
 * Copyright 2015 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Iehr.Repc_mt100002ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt050203ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt090107ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt120600ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Iehr.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Merged;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Business Name: Patient Measurement</summary>
     * 
     * <p>Measurement Type with a 'nullFlavor' value must have 
     * SubObservations Measurement Type without a 'nullFlavor' 
     * value must not have SubObservations.</p> <p>Annotation is 
     * only permitted if Annotation Indicator is not present and 
     * vice versa</p> <p>Allows pertinent patient measurements to 
     * be recorded for clinical purposes.</p> <p>This comprises a 
     * single point-in-time measurement made about a patient.</p>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"REPC_MT100002CA.CommonObservationEvent"})]
    public class PatientMeasurement : MessagePartBean {

        private II id;
        private CD code;
        private TS effectiveTime;
        private CV confidentialityCode;
        private PQ value;
        private Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt050203ca.Patient subjectPatient;
        private Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt090107ca.Provider responsiblePartyAssignedPerson;
        private Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Merged.RefusedBy author;
        private Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Merged.RecordedAt location;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Iehr.Merged.ComponentMeasurements> componentSubObservationEvent;
        private BL subjectOf1AnnotationIndicator;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt120600ca.Notes> subjectOf2Annotation;

        public PatientMeasurement() {
            this.id = new IIImpl();
            this.code = new CDImpl();
            this.effectiveTime = new TSImpl();
            this.confidentialityCode = new CVImpl();
            this.value = new PQImpl();
            this.componentSubObservationEvent = new List<Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Iehr.Merged.ComponentMeasurements>();
            this.subjectOf1AnnotationIndicator = new BLImpl(false);
            this.subjectOf2Annotation = new List<Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt120600ca.Notes>();
        }
        /**
         * <summary>Business Name: E:Observation Measurement Id</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT100002CA.CommonObservationEvent.id 
         * Conformance/Cardinality: MANDATORY (1) <p>Allows observation 
         * measurement record to be directly accessed for 
         * &quot;undo's&quot;, and thus the attribute is mandatory.</p> 
         * <p>Unique identifier assigned to a record of observation 
         * measurement.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>Business Name: A:Measurement Type</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT100002CA.CommonObservationEvent.code 
         * Conformance/Cardinality: MANDATORY (1) <p>Distinguishes what 
         * kind of information is being specified. Code is mandatory to 
         * ensure that observations are distinguishable. The attribute 
         * is CD to support SNOMED.</p> <p>Identification of the type 
         * of measurement/observation that was made about the patient. 
         * Observation types include: height, weight, blood pressure, 
         * body mass, etc.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public CommonClinicalObservationType Code {
            get { return (CommonClinicalObservationType) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>Business Name: C:Observation Measurement Timestamp</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT100002CA.CommonObservationEvent.effectiveTime 
         * Conformance/Cardinality: REQUIRED (1) <p>Allows providers to 
         * evaluate currency of the information. Because the date of 
         * observation/measurement determines the relevance of the 
         * information, this attribute is defined as 'populated'. Also 
         * allows tracking of observations over time.</p> <p>The date 
         * to which the observation applies. E.g., if blood was drawn 
         * two days ago and White Blood Count (WBC) was done today, 
         * then WBC observation date should reflect the date of two 
         * days ago.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public PlatformDate EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>Business Name: D:Common Observation Masking 
         * Indicator</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT100002CA.CommonObservationEvent.confidentialityCode 
         * Conformance/Cardinality: OPTIONAL (0-1) <p>Allows the 
         * patient to have discrete control over access to their common 
         * observation data.</p><p>The attribute is optional because 
         * not all systems will support masking.</p> <p>Communicates 
         * the intent of the patient to restrict access to their common 
         * observations. Provides support for additional 
         * confidentiality constraint, giving patients a level of 
         * control over their information. Valid values are: 'NORMAL' 
         * (denotes 'Not Masked'); and 'RESTRICTED' (denotes 'Masked'). 
         * The default is 'NORMAL' signifying 'Not Masked'.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public x_VeryBasicConfidentialityKind ConfidentialityCode {
            get { return (x_VeryBasicConfidentialityKind) this.confidentialityCode.Value; }
            set { this.confidentialityCode.Value = value; }
        }

        /**
         * <summary>Business Name: B:Observation Measurement Value</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT100002CA.CommonObservationEvent.value 
         * Conformance/Cardinality: REQUIRED (0-1) <p>Provides standard 
         * representation of the measurement. May be used in 
         * calculations.</p> <p>The amount (quantity and unit) that has 
         * been recorded for the specific type of observation. E.g. 
         * height in centimeters, weight in kilograms, etc. Valid 
         * observation</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"value"})]
        public PhysicalQuantity Value {
            get { return this.value.Value; }
            set { this.value.Value = value; }
        }

        /**
         * <summary>Relationship: REPC_MT100002CA.Subject5.patient</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subject/patient"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt050203ca.Patient SubjectPatient {
            get { return this.subjectPatient; }
            set { this.subjectPatient = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT100002CA.ResponsibleParty.assignedPerson</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"responsibleParty/assignedPerson"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt090107ca.Provider ResponsiblePartyAssignedPerson {
            get { return this.responsiblePartyAssignedPerson; }
            set { this.responsiblePartyAssignedPerson = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT100002CA.CommonObservationEvent.author</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"author"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Merged.RefusedBy Author {
            get { return this.author; }
            set { this.author = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT100002CA.CommonObservationEvent.location</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"location"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Merged.RecordedAt Location {
            get { return this.location; }
            set { this.location = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT100002CA.Component.subObservationEvent</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"component/subObservationEvent"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Iehr.Merged.ComponentMeasurements> ComponentSubObservationEvent {
            get { return this.componentSubObservationEvent; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT100002CA.Subject2.annotationIndicator</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subjectOf1/annotationIndicator"})]
        public bool? SubjectOf1AnnotationIndicator {
            get { return this.subjectOf1AnnotationIndicator.Value; }
            set { this.subjectOf1AnnotationIndicator.Value = value; }
        }

        /**
         * <summary>Relationship: REPC_MT100002CA.Subject.annotation</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subjectOf2/annotation"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_cerx_v01_r04_3.Common.Coct_mt120600ca.Notes> SubjectOf2Annotation {
            get { return this.subjectOf2Annotation; }
        }

    }

}