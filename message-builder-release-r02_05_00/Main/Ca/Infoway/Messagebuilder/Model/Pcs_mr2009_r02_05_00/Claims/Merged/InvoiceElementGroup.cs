/**
 * Copyright 2015 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Ficr_mt500201ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Common.Coct_mt280001ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Common.Coct_mt680000ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Domainvalue;
    using System;
    using System.Collections.Generic;


    [Hl7PartTypeMappingAttribute(new string[] {"FICR_MT500201CA.InvoiceElementGroup","FICR_MT510201CA.InvoiceElementGroup"})]
    public class InvoiceElementGroup : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Ficr_mt510201ca.IInvoiceElementChoice, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Ficr_mt500201ca.IInvoiceElementChoice {

        private SET<II, Identifier> id;
        private CV code;
        private IVL<TS, Interval<PlatformDate>> effectiveTime;
        private MO netAmt;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.CoveredPartyAsPatient coveredPartyCoveredPartyAsPatient;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.FinancialContract inFulfillmentOfFinancialContract;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.InvoiceElementCrossReference> predecessorInvoiceElementCrossReference;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Common.Coct_mt680000ca.AdjudicatedInvoiceElementGroup> referenceAdjudicatedInvoiceElementGroup;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.PolicyOrAccount_2> coveragePolicyOrAccount;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.HealthDocumentAttachment_2> pertinentInformationHealthDocumentAttachment;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Ficr_mt500201ca.InvoiceElementComponent> component;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Common.Coct_mt280001ca.IA_BillableActChoice> reasonOfBillableActChoice;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.InvoiceElementOverride> triggerForInvoiceElementOverride;

        public InvoiceElementGroup() {
            this.id = new SETImpl<II, Identifier>(typeof(IIImpl));
            this.code = new CVImpl();
            this.effectiveTime = new IVLImpl<TS, Interval<PlatformDate>>();
            this.netAmt = new MOImpl();
            this.predecessorInvoiceElementCrossReference = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.InvoiceElementCrossReference>();
            this.referenceAdjudicatedInvoiceElementGroup = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Common.Coct_mt680000ca.AdjudicatedInvoiceElementGroup>();
            this.coveragePolicyOrAccount = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.PolicyOrAccount_2>();
            this.pertinentInformationHealthDocumentAttachment = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.HealthDocumentAttachment_2>();
            this.component = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Ficr_mt500201ca.InvoiceElementComponent>();
            this.reasonOfBillableActChoice = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Common.Coct_mt280001ca.IA_BillableActChoice>();
            this.triggerForInvoiceElementOverride = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.InvoiceElementOverride>();
        }
        /**
         * <summary>Business Name: InvoiceGroupingIdentifierS</summary>
         * 
         * <remarks>Un-merged Business Name: InvoiceGroupingIdentifierS 
         * Relationship: FICR_MT500201CA.InvoiceElementGroup.id 
         * Conformance/Cardinality: MANDATORY (1-99) Un-merged Business 
         * Name: InvoiceGroupingIdentifierS Relationship: 
         * FICR_MT510201CA.InvoiceElementGroup.id 
         * Conformance/Cardinality: MANDATORY (1-10)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public ICollection<Identifier> Id {
            get { return this.id.RawSet(); }
        }

        /**
         * <summary>Business Name: InvoiceType</summary>
         * 
         * <remarks>Un-merged Business Name: InvoiceType Relationship: 
         * FICR_MT500201CA.InvoiceElementGroup.code 
         * Conformance/Cardinality: MANDATORY (1) Un-merged Business 
         * Name: InvoiceType Relationship: 
         * FICR_MT510201CA.InvoiceElementGroup.code 
         * Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ActInvoiceGroupType Code {
            get { return (ActInvoiceGroupType) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>Business Name: TimePeriodForInvoice</summary>
         * 
         * <remarks>Un-merged Business Name: TimePeriodForInvoice 
         * Relationship: 
         * FICR_MT500201CA.InvoiceElementGroup.effectiveTime 
         * Conformance/Cardinality: REQUIRED (0-1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>Business Name: InvoiceSubTotal</summary>
         * 
         * <remarks>Un-merged Business Name: InvoiceSubTotal 
         * Relationship: FICR_MT500201CA.InvoiceElementGroup.netAmt 
         * Conformance/Cardinality: MANDATORY (1) Un-merged Business 
         * Name: InvoiceSubTotal Relationship: 
         * FICR_MT510201CA.InvoiceElementGroup.netAmt 
         * Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"netAmt"})]
        public Money NetAmt {
            get { return this.netAmt.Value; }
            set { this.netAmt.Value = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT500201CA.CoveredParty.coveredPartyAsPatient 
         * Conformance/Cardinality: MANDATORY (1) Un-merged Business 
         * Name: (no business name specified) Relationship: 
         * FICR_MT510201CA.CoveredParty.coveredPartyAsPatient 
         * Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"coveredParty/coveredPartyAsPatient"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.CoveredPartyAsPatient CoveredPartyCoveredPartyAsPatient {
            get { return this.coveredPartyCoveredPartyAsPatient; }
            set { this.coveredPartyCoveredPartyAsPatient = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT500201CA.InvoiceElementGroupInFulfillmentOf.financialContract 
         * Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"inFulfillmentOf/financialContract"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.FinancialContract InFulfillmentOfFinancialContract {
            get { return this.inFulfillmentOfFinancialContract; }
            set { this.inFulfillmentOfFinancialContract = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT500201CA.Predecessor.invoiceElementCrossReference 
         * Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"predecessor/invoiceElementCrossReference"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.InvoiceElementCrossReference> PredecessorInvoiceElementCrossReference {
            get { return this.predecessorInvoiceElementCrossReference; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT500201CA.Reference.adjudicatedInvoiceElementGroup 
         * Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"reference/adjudicatedInvoiceElementGroup"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Common.Coct_mt680000ca.AdjudicatedInvoiceElementGroup> ReferenceAdjudicatedInvoiceElementGroup {
            get { return this.referenceAdjudicatedInvoiceElementGroup; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT500201CA.InvoiceElementCoverage.policyOrAccount 
         * Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"coverage/policyOrAccount"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.PolicyOrAccount_2> CoveragePolicyOrAccount {
            get { return this.coveragePolicyOrAccount; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT500201CA.InvoiceElementGroupAttachment.healthDocumentAttachment 
         * Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation/healthDocumentAttachment"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.HealthDocumentAttachment_2> PertinentInformationHealthDocumentAttachment {
            get { return this.pertinentInformationHealthDocumentAttachment; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT500201CA.InvoiceElementGroup.component 
         * Conformance/Cardinality: MANDATORY (1-10)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"component"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Ficr_mt500201ca.InvoiceElementComponent> Component {
            get { return this.component; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT500201CA.InvoiceElementReason.billableActChoice 
         * Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"reasonOf/billableActChoice"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Common.Coct_mt280001ca.IA_BillableActChoice> ReasonOfBillableActChoice {
            get { return this.reasonOfBillableActChoice; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT500201CA.Suggests.invoiceElementOverride 
         * Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"triggerFor/invoiceElementOverride"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_05_00.Claims.Merged.InvoiceElementOverride> TriggerForInvoiceElementOverride {
            get { return this.triggerForInvoiceElementOverride; }
        }

    }

}