/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2013-03-01 17:48:17 -0500 (Fri, 01 Mar 2013) $
 * Revision:      $LastChangedRevision: 6663 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Terminology.Codeset.Dao {
	
	using NHibernate;
	using Spring.Objects.Factory;
    //!using Spring.Objects.Factory.Support;
    using Spring.Objects.Factory.Xml;//! Org.Springframework.Beans.Factory.Xml;
	using Spring.Core.IO; //! Org.Springframework.Core.Io;
    using Spring.Data.NHibernate;
    using System;
	using System.Collections;
	using System.Collections.Generic;
	//using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	public class DaoTestSupport {
		public sealed class Anonymous_C0 : Runnable {
			private readonly DaoTestSupport outer_DaoTestSupport;
			private readonly String f_hql;
	
			public void Run() {
				outer_DaoTestSupport.SessionFactory.GetCurrentSession().CreateQuery(f_hql)
						.ExecuteUpdate();
			}
	
			public Anonymous_C0(String hql, DaoTestSupport daoTestSupport) {
				this.outer_DaoTestSupport = daoTestSupport;
				this.f_hql = hql;
			}
		}
	
		private static XmlObjectFactory factory;
		private String springContext;
	
		public DaoTestSupport() : this("mock-hibernate-spring.xml") {
		}
	
		public DaoTestSupport(String springContext_0) {
			this.springContext = springContext_0;
		}
	
		private void SetUpTransactionManager() {
			ISession session = SessionFactory.OpenSession();
			Spring.Transaction.Support.TransactionSynchronizationManager.BindResource(SessionFactory,
					new SessionHolder(session));
		}
	
		[NUnit.Framework.SetUp]
		public void SetUp() {
			if (factory == null) {
				factory = new XmlObjectFactory(new AssemblyResource(
						this.springContext));
			}
			SetUpTransactionManager();
		}
	
		[NUnit.Framework.TearDown]
		public void TearDown() {
			SessionHolder holder = (SessionHolder) Spring.Transaction.Support.TransactionSynchronizationManager
					.GetResource(SessionFactory);
			ISession session = holder.Session;
            Spring.Transaction.Support.TransactionSynchronizationManager.UnbindResource(SessionFactory);
			session.Close();
		}
	
		
		public ISessionFactory SessionFactory {
		  get {
				return (ISessionFactory) Factory.GetObject(
						typeof(ISessionFactory).FullName);
			}
		}
		
	
		
		public IObjectFactory Factory {
		  get {
				return factory;
			}
		}
		
	
		public void RunInTransaction(Runnable runnable) {
			ITransaction transaction = SessionFactory.GetCurrentSession()
					.BeginTransaction();
			runnable.Run();
			transaction.Commit();
		}
	
		public void ExecuteHqlInTransaction(String hql) {
			RunInTransaction(new DaoTestSupport.Anonymous_C0(hql, this));
		}
	}
}
