/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:43:30 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 4341 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Terminology.Codeset.Dao {
	
	using Ca.Infoway.Messagebuilder;
	using Ca.Infoway.Messagebuilder.Terminology.Codeset.Domain;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	//using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// A Data-access-object interface for updating records in the 
	/// c tables.  In general, the methods provided by this interface should
	/// not be invoked by applications that require only c resolution.  
	/// This API exists to support things like loading the values.
	/// </summary>
	///
	public interface MutableCodeSetDao : CodeSetDao {
	
		/// <summary>
		/// Find c system.
		/// </summary>
		///
		/// <param name="oid">the oid</param>
		/// <returns>the c system</returns>
		CodeSystem FindCodeSystem(String oid);
	
		/// <summary>
		/// Gets the all c systems.
		/// </summary>
		///
		/// <returns>the all c systems</returns>
		IList<CodeSystem> AllCodeSystems {
		/// <summary>
		/// Gets the all c systems.
		/// </summary>
		///
		/// <returns>the all c systems</returns>
		  get;
		}
		
	
		/// <summary>
		/// Find c systems.
		/// </summary>
		///
		/// <param name="searchCriteria">the search criteria</param>
		/// <returns>the list</returns>
		IList<CodeSystem> FindCodeSystems(
				CodeSystemSearchCriteria searchCriteria);
	
		/// <summary>
		/// Find c systems.
		/// </summary>
		///
		/// <param name="searchCriteria">the search criteria</param>
		/// <param name="startRow">the start row</param>
		/// <param name="endRow">the end row</param>
		/// <returns>the list</returns>
		IList<CodeSystem> FindCodeSystems(
				CodeSystemSearchCriteria searchCriteria, int startRow,
				int endRow);
	
		/// <summary>
		/// Count c systems.
		/// </summary>
		///
		/// <param name="searchCriteria">the search criteria</param>
		/// <returns>the int</returns>
		int CountCodeSystems(CodeSystemSearchCriteria searchCriteria);
	
		/// <summary>
		/// Save all.
		/// </summary>
		///
		/// <param name="vocabularyDomain">the vocabulary domain</param>
		void SaveAll(ICollection<VocabularyDomain> vocabularyDomain);
	
		/// <summary>
		/// Save all cd values.
		/// </summary>
		///
		/// <param name="values">the values</param>
		void SaveAllCodedValues(ICollection<CodedValue> values);
	
		/// <summary>
		/// Find value set entry.
		/// </summary>
		///
		/// <param name="valueSetName">the value set name</param>
		/// <param name="code">the c</param>
		/// <returns>the value set entry</returns>
		ValueSetEntry FindValueSetEntry(String valueSetName, Code code);
	
		/// <summary>
		/// Find value set.
		/// </summary>
		///
		/// <param name="name">the name</param>
		/// <returns>the value set</returns>
		ValueSet FindValueSet(String name);
	
		/// <summary>
		/// Save.
		/// </summary>
		///
		/// <param name="valueSet">the value set</param>
		void Save(ValueSetEntry valueSet);
	
		/// <summary>
		/// Save value set.
		/// </summary>
		///
		/// <param name="valueSet">the value set</param>
		void SaveValueSet(ValueSet valueSet);
	}
}
