/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2013-03-01 17:48:17 -0500 (Fri, 01 Mar 2013) $
 * Revision:      $LastChangedRevision: 6663 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Terminology.Codeset.Domain {
	
	using Ca.Infoway.Messagebuilder;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	//using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// A system of cd values that describe alternatives for a particular concept.
	/// </summary>
	///
	public class CodeSystem {
	
		private Int64? id;
		private String oid;
		private String name;
		private String description;
	
		private String owningOrganization;
	
		/// <summary>
		/// Instantiates a new c system.
		/// </summary>
		///
		public CodeSystem() {
		}
	
		/// <summary>
		/// Sets the id.
		/// </summary>
		///
		/// <param name="id_0">the new id</param>
		public Int64? Id {
		/// <summary>
		/// Gets the id.
		/// </summary>
		///
		/// <returns>the id</returns>
		  get {
				return this.id;
			}
		/// <summary>
		/// Sets the id.
		/// </summary>
		///
		/// <param name="id_0">the new id</param>
		  set {
				this.id = value;
			}
		}
		
	
		/// <summary>
		/// Sets the name.
		/// </summary>
		///
		/// <param name="name_0">the new name</param>
		public String Name {
		/// <summary>
		/// Gets the name.
		/// </summary>
		///
		/// <returns>the name</returns>
		  get {
				return this.name;
			}
		/// <summary>
		/// Sets the name.
		/// </summary>
		///
		/// <param name="name_0">the new name</param>
		  set {
				this.name = value;
			}
		}
		
	
		/// <summary>
		/// Sets the oid.
		/// </summary>
		///
		/// <param name="oid_0">the new oid</param>
		public String Oid {
		/// <summary>
		/// Gets the oid.
		/// </summary>
		///
		/// <returns>the oid</returns>
		  get {
				return this.oid;
			}
		/// <summary>
		/// Sets the oid.
		/// </summary>
		///
		/// <param name="oid_0">the new oid</param>
		  set {
				this.oid = value;
			}
		}
		
	
		/// <summary>
		/// Sets the description.
		/// </summary>
		///
		/// <param name="description_0">the new description</param>
		public String Description {
		/// <summary>
		/// Gets the description.
		/// </summary>
		///
		/// <returns>the description</returns>
		  get {
				return this.description;
			}
		/// <summary>
		/// Sets the description.
		/// </summary>
		///
		/// <param name="description_0">the new description</param>
		  set {
				this.description = value;
			}
		}
		
	
		/// <summary>
		/// Compare to.
		/// </summary>
		///
		/// <param name="obj">the obj</param>
		/// <returns>the int</returns>
		public int CompareTo(Object obj) {
			CodeSystem that = (CodeSystem) obj;
			return new CompareToBuilder().Append(this.Oid, that.Oid)
					.Append(this.Name, that.Name).Append(this.Id,
							that.Id).ToComparison();
		}
	
		/// <summary>
		/// {@inheritDoc}
		/// </summary>
		///
		public override bool Equals(Object o) {
			if (o == null) {
				return false;
			} else if ((Object) o.GetType() != (Object) GetType()) {
				return false;
			} else {
				return Equals((CodeSystem) o);
			}
		}
	
		private bool Equals(CodeSystem that) {
			return new EqualsBuilder().Append(this.Oid, that.Oid).Append(
					this.Name, that.Name).Append(this.Id,
					that.Id).IsEquals();
		}
	
		/// <summary>
		/// {@inheritDoc}
		/// </summary>
		///
		public override int GetHashCode() {
			return new HashCodeBuilder().Append(this.id).Append(this.name).Append(
					this.oid).ToHashCode();
		}
	
		/// <summary>
		/// Sets the owning organization.
		/// </summary>
		///
		/// <param name="owningOrganization_0">the new owning organization</param>
		public String OwningOrganization {
		/// <summary>
		/// The name of the organization that has responsibility for the 
		/// c system.  For example, the list of Alpha-2 language cs
		/// that represent <tt>HumanLanguage</tt> is associated with c system
		/// <tt>2.16.840.1.113883.6.84</tt> is controlled by IETF.  Thus, the
		/// owning organization name is "IETF".
		/// </summary>
		///
		/// <returns>the name of the owning organization.</returns>
		  get {
				return this.owningOrganization;
			}
		/// <summary>
		/// Sets the owning organization.
		/// </summary>
		///
		/// <param name="owningOrganization_0">the new owning organization</param>
		  set {
				this.owningOrganization = value;
			}
		}
		
	
	}
}
