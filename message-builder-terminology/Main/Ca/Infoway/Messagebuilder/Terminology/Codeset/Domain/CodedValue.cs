/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:43:35 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 4342 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Terminology.Codeset.Domain {
	
	using Ca.Infoway.Messagebuilder;
    using NHibernate; //!
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// A single term taken from a c system.
	/// </summary>
	///
	public class CodedValue {
	
		private Int64? id;
		private String code;
		private CodeSystem codeSystem;
		private String createUserId;
		private PlatformDate createDatetime;
		private PlatformDate lastUpdateDatetime;
		private IDictionary<String, String> descriptions;
		private IList<CodedValue> parents;
		private IList<CodedValue> children;
	
		/// <summary>
		/// Instantiates a new cd value.
		/// </summary>
		///
		public CodedValue() {
			this.descriptions = Ca.Infoway.Messagebuilder.CollUtils
					.SynchronizedMap(new Dictionary<String, String>());
			this.parents = Ca.Infoway.Messagebuilder.CollUtils
					.SynchronizedList(new List<CodedValue>());
			this.children = Ca.Infoway.Messagebuilder.CollUtils
					.SynchronizedList(new List<CodedValue>());
		}
	
		/// <summary>
		/// Sets the id.
		/// </summary>
		///
		/// <param name="id_0">the new id</param>
		public Int64? Id {
		/// <summary>
		/// Gets the id.
		/// </summary>
		///
		/// <returns>the id</returns>
		  get {
				return this.id;
			}
		/// <summary>
		/// Sets the id.
		/// </summary>
		///
		/// <param name="id_0">the new id</param>
		  set {
				this.id = value;
			}
		}
		
	
		/// <summary>
		/// Sets the c.
		/// </summary>
		///
		/// <param name="code_0">the new c</param>
		public String Code {
		/// <summary>
		/// Gets the c.
		/// </summary>
		///
		/// <returns>the c</returns>
		  get {
				return code;
			}
		/// <summary>
		/// Sets the c.
		/// </summary>
		///
		/// <param name="code_0">the new c</param>
		  set {
				this.code = value;
			}
		}
		
	
		/// <summary>
		/// Sets the c system.
		/// </summary>
		///
		/// <param name="system">the new c system</param>
		public CodeSystem CodeSystem {
		/// <summary>
		/// Gets the c system.
		/// </summary>
		///
		/// <returns>the c system</returns>
		  get {
				return codeSystem;
			}
		/// <summary>
		/// Sets the c system.
		/// </summary>
		///
		/// <param name="system">the new c system</param>
		  set {
				this.codeSystem = value;
			}
		}
		
	
		/// <summary>
		/// Compare to.
		/// </summary>
		///
		/// <param name="obj">the obj</param>
		/// <returns>the int</returns>
		public int CompareTo(Object obj) {
			CodedValue that = (CodedValue) obj;
			return new CompareToBuilder().Append(this.CodeSystem,
					that.CodeSystem).Append(this.Code, that.Code)
					.Append(this.Id, that.Id).ToComparison();
		}
	
		/// <summary>
		/// {@inheritDoc}
		/// </summary>
		///
		public override bool Equals(Object o) {
			if (o == null) {
				return false;
			} else if ((Object) o.GetType() != (Object) GetType()) {
				return false;
			} else {
				return Equals((CodedValue) o);
			}
		}
	
		private bool Equals(CodedValue that) {
			return new EqualsBuilder().Append(this.id, that.id).Append(
					this.CodeSystem, that.CodeSystem).Append(
					this.Code, that.Code).Append(this.Id,
					that.Id).IsEquals();
		}
	
		/// <summary>
		/// {@inheritDoc}
		/// </summary>
		///
		public override int GetHashCode() {
			return new HashCodeBuilder().Append(this.id).Append(this.code).Append(
					this.codeSystem).ToHashCode();
		}
	
		/// <summary>
		/// Sets the creates the datetime.
		/// </summary>
		///
		/// <param name="createDatetime_0">the new creates the datetime</param>
		public PlatformDate CreateDatetime {
		/// <summary>
		/// Gets the creates the datetime.
		/// </summary>
		///
		/// <returns>the creates the datetime</returns>
		  get {
				return createDatetime;
			}
		/// <summary>
		/// Sets the creates the datetime.
		/// </summary>
		///
		/// <param name="createDatetime_0">the new creates the datetime</param>
		  set {
				this.createDatetime = value;
			}
		}
		
	
		/// <summary>
		/// Sets the creates the user id.
		/// </summary>
		///
		/// <param name="createUserId_0">the new creates the user id</param>
		public String CreateUserId {
		/// <summary>
		/// Gets the creates the user id.
		/// </summary>
		///
		/// <returns>the creates the user id</returns>
		  get {
				return createUserId;
			}
		/// <summary>
		/// Sets the creates the user id.
		/// </summary>
		///
		/// <param name="createUserId_0">the new creates the user id</param>
		  set {
				this.createUserId = value;
			}
		}
		
	
		/// <summary>
		/// Sets the last update datetime.
		/// </summary>
		///
		/// <param name="lastUpdateDatetime_0">the new last update datetime</param>
		public PlatformDate LastUpdateDatetime {
		/// <summary>
		/// Gets the last update datetime.
		/// </summary>
		///
		/// <returns>the last update datetime</returns>
		  get {
				return lastUpdateDatetime;
			}
		/// <summary>
		/// Sets the last update datetime.
		/// </summary>
		///
		/// <param name="lastUpdateDatetime_0">the new last update datetime</param>
		  set {
				this.lastUpdateDatetime = value;
			}
		}
		
	
		/// <summary>
		/// Sets the descriptions.
		/// </summary>
		///
		/// <param name="descriptions_0">the descriptions</param>
		public IDictionary<String,String> Descriptions {
		/// <summary>
		/// Gets the descriptions.
		/// </summary>
		///
		/// <returns>the descriptions</returns>
		  get {
				return this.descriptions;
			}
		/// <summary>
		/// Sets the descriptions.
		/// </summary>
		///
		/// <param name="descriptions_0">the descriptions</param>
		  set {
				this.descriptions = value;
			}
		}
		
	
		/// <summary>
		/// Sets the parents.
		/// </summary>
		///
		/// <param name="parents_0">the new parents</param>
		public IList<CodedValue> Parents {
		/// <summary>
		/// Gets the parents.
		/// </summary>
		///
		/// <returns>the parents</returns>
		  get {
				return this.parents;
			}
		/// <summary>
		/// Sets the parents.
		/// </summary>
		///
		/// <param name="parents_0">the new parents</param>
		  set {
				this.parents = value;
			}
		}
		
	
		/// <summary>
		/// Sets the children.
		/// </summary>
		///
		/// <param name="children_0">the new children</param>
		public IList<CodedValue> Children {
		/// <summary>
		/// Gets the children.
		/// </summary>
		///
		/// <returns>the children</returns>
		  get {
				return this.children;
			}
		/// <summary>
		/// Sets the children.
		/// </summary>
		///
		/// <param name="children_0">the new children</param>
		  set {
				this.children = value;
			}
		}
		
	
	}
}
