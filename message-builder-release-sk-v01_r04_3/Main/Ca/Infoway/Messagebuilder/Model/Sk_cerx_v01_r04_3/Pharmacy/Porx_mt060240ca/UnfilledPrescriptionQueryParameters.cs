/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Pharmacy.Porx_mt060240ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Unfilled Prescription Query Parameters</summary>
     * 
     * <remarks><p>Defines the set of parameters that may be used 
     * to filter the query response.</p> <p>Root class for query 
     * definition</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"PORX_MT060240CA.ParameterList"})]
    public class UnfilledPrescriptionQueryParameters : MessagePartBean {

        private IVL<TS, Interval<PlatformDate>> administrationEffectivePeriodValue;
        private TS patientBirthDateValue;
        private CV patientGenderValue;
        private II patientIDValue;
        private PN patientNameValue;
        private IList<CV> prescriptionStatusValue;
        private CV rxDispenseIndicatorValue;

        public UnfilledPrescriptionQueryParameters() {
            this.administrationEffectivePeriodValue = new IVLImpl<TS, Interval<PlatformDate>>();
            this.patientBirthDateValue = new TSImpl();
            this.patientGenderValue = new CVImpl();
            this.patientIDValue = new IIImpl();
            this.patientNameValue = new PNImpl();
            this.prescriptionStatusValue = new List<CV>();
            this.rxDispenseIndicatorValue = new CVImpl();
        }
        /**
         * <summary>D:Administration Effective Period</summary>
         * 
         * <remarks><p>Indicates the administration period for which 
         * the request/query applies.</p><p>Filter the result set to 
         * include only those medication records (prescription order, 
         * prescription dispense and other active medication) for which 
         * the patient was deemed to be taking the drug within the 
         * specified period.</p> <p>Indicates the administration period 
         * for which the request/query applies.</p><p>Filter the result 
         * set to include only those medication records (prescription 
         * order, prescription dispense and other active medication) 
         * for which the patient was deemed to be taking the drug 
         * within the specified period.</p> <p>Allows the requester to 
         * specify the administration period of interest for the 
         * retrieval. Useful for constraining run-away queries.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"administrationEffectivePeriod/value"})]
        public Interval<PlatformDate> AdministrationEffectivePeriodValue {
            get { return this.administrationEffectivePeriodValue.Value; }
            set { this.administrationEffectivePeriodValue.Value = value; }
        }

        /**
         * <summary>Patient Birth Date</summary>
         * 
         * <remarks><p>Indicates the date on which the patient was 
         * born.</p> <p>Used to confirm the identity of the patient for 
         * the query and is therefore mandatory.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"patientBirthDate/value"})]
        public PlatformDate PatientBirthDateValue {
            get { return this.patientBirthDateValue.Value; }
            set { this.patientBirthDateValue.Value = value; }
        }

        /**
         * <summary>Patient Gender</summary>
         * 
         * <remarks><p>Indicates the gender (sex) of the patient.</p> 
         * <p>Used to confirm the identity of the patient for the query 
         * and is therefore mandatory.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"patientGender/value"})]
        public AdministrativeGender PatientGenderValue {
            get { return (AdministrativeGender) this.patientGenderValue.Value; }
            set { this.patientGenderValue.Value = value; }
        }

        /**
         * <summary>B:Patient ID</summary>
         * 
         * <remarks><p>Identifier of the patient who is the subject of 
         * the patient medication query. Filter the result set to 
         * include only those records pertaining to the patient with 
         * this Id.</p> <p>Allows filtering of result set by patient 
         * Id. This is a mandatory field because a patient must be 
         * specified for the query to be valid</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"patientID/value"})]
        public Identifier PatientIDValue {
            get { return this.patientIDValue.Value; }
            set { this.patientIDValue.Value = value; }
        }

        /**
         * <summary>C:Patient Name</summary>
         * 
         * <remarks><p>The name of the patient who is the subject of 
         * the patient medication query.</p><p>Filter the result set to 
         * include only those records pertaining to the patient with 
         * this name.</p> <p>The name of the patient who is the subject 
         * of the patient medication query.</p><p>Filter the result set 
         * to include only those records pertaining to the patient with 
         * this name.</p> <p>Allows filtering of result set by patient 
         * name. This is a mandatory field because a patient name must 
         * match the patient Id for the query to be valid.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"patientName/value"})]
        public PersonName PatientNameValue {
            get { return this.patientNameValue.Value; }
            set { this.patientNameValue.Value = value; }
        }

        /**
         * <summary>E:Prescription Statuses</summary>
         * 
         * <remarks><p>Indicates that prescriptions of a specific 
         * statuses are to be included in the result set. Allowable 
         * prescription status codes are: 'ABORTED, ACTIVE', 
         * 'COMPLETED', and 'SUSPENDED'.</p> <p>Allows for the 
         * retrieval of patient prescriptions and dispenses based on 
         * the lifecycle state of the prescription.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"prescriptionStatus/value"})]
        public IList<ActStatus> PrescriptionStatusValue {
            get { return new RawListWrapper<CV, ActStatus>(prescriptionStatusValue, typeof(CVImpl)); }
        }

        /**
         * <summary>Rx Dispense Indicator</summary>
         * 
         * <remarks><p>A coded value indicating the dispensing (fill) 
         * status of the prescription to be included in the result set. 
         * The only allowable Rx Dispense Indicators is ND (Never 
         * Dispensed).</p> <p>Allows for finer sub-set of prescriptions 
         * to be retrieved based on the fill status of the 
         * prescription.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"rxDispenseIndicator/value"})]
        public PrescriptionDispenseFilterCode RxDispenseIndicatorValue {
            get { return (PrescriptionDispenseFilterCode) this.rxDispenseIndicatorValue.Value; }
            set { this.rxDispenseIndicatorValue.Value = value; }
        }

    }

}