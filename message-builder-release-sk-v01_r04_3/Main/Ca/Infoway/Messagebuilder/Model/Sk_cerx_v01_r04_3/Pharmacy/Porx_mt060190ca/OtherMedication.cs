/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Pharmacy.Porx_mt060190ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Common.Coct_mt090107ca;
    using Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Common.Coct_mt220110ca;
    using Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Common.Merged;
    using Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Merged;
    using System;


    /**
     * <summary>Other Medication</summary>
     * 
     * <remarks><p>routeCode must not be used when code is SNOMED 
     * and is mandatory otherwise</p><p>Status can only be ACTIVE 
     * or COMPLETED</p> <p>routeCode must not be used when code is 
     * SNOMED and is mandatory otherwise</p><p>Status can only be 
     * ACTIVE or COMPLETED</p> <p>A record of a medication the 
     * patient is believed to be taking, but for which an 
     * electronic order does not exist. &quot;Other 
     * medications&quot; include any drug product deemed relevant 
     * to the patient's drug profile, but which was not 
     * specifically ordered by a prescriber in a DIS-enabled 
     * jurisdiction. Examples include over-the counter medications 
     * that were not specifically ordered, herbal remedies, and 
     * recreational drugs. Prescription drugs that the patient may 
     * be taking but was not prescribed on the EHR (e.g. 
     * institutionally administered or out-of-jurisdiction 
     * prescriptions) will also be recorded here.</p> <p>Necessary 
     * component of a person's overall medication profile. Allows 
     * DUR checking against a more complete drug profile.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"PORX_MT060190CA.OtherMedication"})]
    public class OtherMedication : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Pharmacy.Merged.IMedicationRecord {

        private II id;
        private CS statusCode;
        private IVL<TS, Interval<PlatformDate>> effectiveTime;
        private CV confidentialityCode;
        private CV routeCode;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Common.Merged.Patient subjectPatient;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Common.Coct_mt220110ca.DrugProduct consumableMedication;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Common.Coct_mt090107ca.Provider responsiblePartyAssignedPerson;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Merged.RefusedBy author;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Merged.RecordedAt location;
        private BL subjectOf1DetectedIssueIndicator;
        private BL subjectOf2AnnotationIndicator;

        public OtherMedication() {
            this.id = new IIImpl();
            this.statusCode = new CSImpl();
            this.effectiveTime = new IVLImpl<TS, Interval<PlatformDate>>();
            this.confidentialityCode = new CVImpl();
            this.routeCode = new CVImpl();
            this.subjectOf1DetectedIssueIndicator = new BLImpl(false);
            this.subjectOf2AnnotationIndicator = new BLImpl(false);
        }
        /**
         * <summary>A:Other Medication Record Number</summary>
         * 
         * <remarks><p>This is an identifier assigned to a unique 
         * instance of an other medication record.</p> <p>Allows for 
         * the unique referencing of a specific other medication 
         * record. Thus the mandatory requirement. .</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>B:Other Medication Status</summary>
         * 
         * <remarks><p>Indicates the status of the other medication 
         * record created on the EHR/DIS. Valid statuses for other 
         * medication records are: ACTIVE, COMPLETE only.</p> <p>Used 
         * to determine whether the medication should be considered in 
         * performing DUR checking and therefore mandatory.</p><p>Note 
         * ------ The provider might know that the patient is not 
         * taking the medication but not necessarily when the patient 
         * stopped it. Thus the status of the medication could be set 
         * to 'COMPLETED' by the provider without necessarily setting 
         * an End Date on the medication record.</p> <p>Used to 
         * determine whether the medication should be considered in 
         * performing DUR checking and therefore mandatory.</p><p>Note 
         * ------ The provider might know that the patient is not 
         * taking the medication but not necessarily when the patient 
         * stopped it. Thus the status of the medication could be set 
         * to 'COMPLETED' by the provider without necessarily setting 
         * an End Date on the medication record.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public ActStatus StatusCode {
            get { return (ActStatus) this.statusCode.Value; }
            set { this.statusCode.Value = value; }
        }

        /**
         * <summary>C:Drug Active Period</summary>
         * 
         * <remarks><p>Indicates the time-period in which the patient 
         * has been taking or is expected to be taking the active 
         * medication.</p> 
         * <p>ZDP.13.2.2</p><p>ZDP.13.3</p><p>ZDP.13.4</p><p>ZDP.13.5</p> 
         * <p>ZDP.13.2.2</p><p>ZDP.13.3</p><p>ZDP.13.4</p><p>ZDP.13.5</p> 
         * <p>ZDP.13.2.2</p><p>ZDP.13.3</p><p>ZDP.13.4</p><p>ZDP.13.5</p> 
         * <p>ZDP.13.2.2</p><p>ZDP.13.3</p><p>ZDP.13.4</p><p>ZDP.13.5</p> 
         * <p>Used to indicate help determine whether the medication is 
         * currently active. Because this information won't always be 
         * available, the attribute is marked as 'populated'.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>D:Other Medication Masking Indicator</summary>
         * 
         * <remarks><p>Denotes access restriction place on the other 
         * medication record. Methods for accessing masked other 
         * medications will be governed by each jurisdiction (e.g. 
         * court orders, shared secret/consent, etc.).</p> <p>Provides 
         * support for additional confidentiality constraint to reflect 
         * the wishes of the patient.</p><p>The attribute is optional 
         * because not all systems will support masking.</p> 
         * <p>Provides support for additional confidentiality 
         * constraint to reflect the wishes of the patient.</p><p>The 
         * attribute is optional because not all systems will support 
         * masking.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public x_VeryBasicConfidentialityKind ConfidentialityCode {
            get { return (x_VeryBasicConfidentialityKind) this.confidentialityCode.Value; }
            set { this.confidentialityCode.Value = value; }
        }

        /**
         * <summary>E:Route of Administration</summary>
         * 
         * <remarks><p>Ensures consistency in description of routes. 
         * Provides potential for cross-checking dosage form and route. 
         * Because this information is pre-coordinated into 'code' for 
         * SNOMED, it is marked as optional.</p> <p>Ensures consistency 
         * in description of routes. Provides potential for 
         * cross-checking dosage form and route.</p><p>Because this 
         * information can be pre-coordinated with code by SNOMED, the 
         * attribute is optional.</p> <p>Ensures consistency in 
         * description of routes. Provides potential for cross-checking 
         * dosage form and route.</p><p>Because this information can be 
         * pre-coordinated with code by SNOMED, the attribute is 
         * optional.</p> <p><strong>Because PIN does not support 
         * SNOMED, this element is mandatory.</strong></p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"routeCode"})]
        public RouteOfAdministration RouteCode {
            get { return (RouteOfAdministration) this.routeCode.Value; }
            set { this.routeCode.Value = value; }
        }

        /**
         * <summary>Administered To</summary>
         * 
         * <remarks><div>product.</div></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subject/patient"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Common.Merged.Patient SubjectPatient {
            get { return this.subjectPatient; }
            set { this.subjectPatient = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"consumable/medication"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Common.Coct_mt220110ca.DrugProduct ConsumableMedication {
            get { return this.consumableMedication; }
            set { this.consumableMedication = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"responsibleParty/assignedPerson"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Common.Coct_mt090107ca.Provider ResponsiblePartyAssignedPerson {
            get { return this.responsiblePartyAssignedPerson; }
            set { this.responsiblePartyAssignedPerson = value; }
        }

        /**
         * <summary><p>the other medication information.&nbsp;</p></summary>
         */
        [Hl7XmlMappingAttribute(new string[] {"author"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Merged.RefusedBy Author {
            get { return this.author; }
            set { this.author = value; }
        }

        /**
         * <summary><p>medication was recorded.&nbsp;</p></summary>
         */
        [Hl7XmlMappingAttribute(new string[] {"location"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_3.Merged.RecordedAt Location {
            get { return this.location; }
            set { this.location = value; }
        }

        /**
         * <summary>Issue Indicator</summary>
         * 
         * <remarks><p>associated with this record.&nbsp;</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subjectOf1/detectedIssueIndicator"})]
        public bool? SubjectOf1DetectedIssueIndicator {
            get { return this.subjectOf1DetectedIssueIndicator.Value; }
            set { this.subjectOf1DetectedIssueIndicator.Value = value; }
        }

        /**
         * <summary>Note Indicator</summary>
         * 
         * <remarks><div>associated with the record.</div></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subjectOf2/annotationIndicator"})]
        public bool? SubjectOf2AnnotationIndicator {
            get { return this.subjectOf2AnnotationIndicator.Value; }
            set { this.subjectOf2AnnotationIndicator.Value = value; }
        }

    }

}