/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Merged {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Coct_mt470000ca;
    using Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Merged;
    using Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Si.Rcmr_mt010001ca;
    using System;


    /**
     * <summary>Business Name: Consent</summary>
     * 
     * <remarks>COCT_MT470000CA.ConsentEvent: Consent <p>One and 
     * only one of author2 (Consenter) and author1 (Provider) must 
     * be specified.</p><p>If author1 (provider) is specified, 
     * reason code must be specified.</p> <p>One and only one of 
     * author2 (Consenter) and author1 (Provider) must be 
     * specified.</p><p>If author1 (provider) is specified, reason 
     * code must be specified.</p> <p>Information pertaining to a 
     * patient's agreement/acceptance to have his/her clinical 
     * information electronically stored and shared.</p> 
     * <p>Provides authorization to record and/or view patient 
     * information.</p><p>Indicates the consent or keyword used to 
     * authorize access or update, including a reason for access; 
     * May also be used to override access restriction to the 
     * information ('break the glass') on a message by message 
     * basis. May be required on a Prescription Request to indicate 
     * a keyword for DUR processing.</p> <p>Provides authorization 
     * to record and/or view patient information.</p><p>Indicates 
     * the consent or keyword used to authorize access or update, 
     * including a reason for access; May also be used to override 
     * access restriction to the information ('break the glass') on 
     * a message by message basis. May be required on a 
     * Prescription Request to indicate a keyword for DUR 
     * processing.</p> <p>The keywords will not be passed from 
     * prescriber to dispenser by the DIS.</p> 
     * RCMR_MT010001CA.ConsentEvent: Consent <p>If code is INFA, 
     * then InformDefinition must be present, otherwise it must be 
     * absent</p><p>One and only one of author1 (Consenter) and 
     * author2 (Provider) must be specified</p><p>If author2 
     * (provider) is specified, reasonCode must be specified</p> 
     * <p>If code is INFA, then InformDefinition must be present, 
     * otherwise it must be absent</p><p>One and only one of 
     * author1 (Consenter) and author2 (Provider) must be 
     * specified</p><p>If author2 (provider) is specified, 
     * reasonCode must be specified</p> <p>If code is INFA, then 
     * InformDefinition must be present, otherwise it must be 
     * absent</p><p>One and only one of author1 (Consenter) and 
     * author2 (Provider) must be specified</p><p>If author2 
     * (provider) is specified, reasonCode must be specified</p> 
     * <p>Information pertaining to a patient's 
     * agreement/acceptance to have his/her clinical information 
     * electronically stored and shared.</p> <p>Provides 
     * authorization to record and/or view patient information.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"COCT_MT470000CA.ConsentEvent","RCMR_MT010001CA.ConsentEvent"})]
    public class Consent : MessagePartBean {

        private II id;
        private IVL<TS, Interval<PlatformDate>> effectiveTime;
        private CV reasonCode;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Merged.Patient subjectPatient;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Merged.PrescribedBy author2;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Merged.ConsentedToBy author1;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Coct_mt470000ca.AccessType subject2InformDefinition;
        private CV code;
        private BL negationInd;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Si.Rcmr_mt010001ca.InformationAccess componentPermissionToInform;

        public Consent() {
            this.id = new IIImpl();
            this.effectiveTime = new IVLImpl<TS, Interval<PlatformDate>>();
            this.reasonCode = new CVImpl();
            this.code = new CVImpl();
            this.negationInd = new BLImpl();
        }
        /**
         * <summary>Business Name: ConsentFormNumber</summary>
         * 
         * <remarks>Un-merged Business Name: ConsentFormNumber 
         * Relationship: COCT_MT470000CA.ConsentEvent.id 
         * Conformance/Cardinality: REQUIRED (0-1) <p>A unique 
         * identifier for a specific consent for a patient.</p> 
         * <p>Authorization.formNumber</p> <p>Provides a traceable 
         * audit link between a physical consent form and its 
         * electronic record</p> Un-merged Business Name: 
         * ConsentFormNumber Relationship: 
         * RCMR_MT010001CA.ConsentEvent.id Conformance/Cardinality: 
         * REQUIRED (0-1) <p>A unique identifier for a specific consent 
         * for a patient.</p> <p>Authorization.formNumber</p> 
         * <p>Provides a traceable audit link between a physical 
         * consent form and its electronic record</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>Business Name: ConsentEffectiveAndEndTime</summary>
         * 
         * <remarks>Un-merged Business Name: ConsentEffectiveAndEndTime 
         * Relationship: COCT_MT470000CA.ConsentEvent.effectiveTime 
         * Conformance/Cardinality: REQUIRED (0-1) <p>Indicates the 
         * time that the consent will expire. 'Low' is effective time 
         * and 'High' is end time.</p> <p>Authorization.endTime 
         * (high)</p> <p>Most consents are not open-ended, to ensure 
         * the patient retains a level of control.</p> Un-merged 
         * Business Name: ConsentEffectiveAndEndTime Relationship: 
         * RCMR_MT010001CA.ConsentEvent.effectiveTime 
         * Conformance/Cardinality: MANDATORY (1) <p>Indicates the time 
         * that the consent will expire. 'Low' is effective time and 
         * 'High' is end time.</p> <p>Authorization.endTime (high)</p> 
         * <p>Most consents are not open-ended, to ensure the patient 
         * retains a level of control</p> <p><strong>CeRx defines this 
         * as 0..1 but the effective time is required in PIN so this is 
         * mandatory.</strong></p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>Business Name: ConsentOverrideReason</summary>
         * 
         * <remarks>Un-merged Business Name: ConsentOverrideReason 
         * Relationship: COCT_MT470000CA.ConsentEvent.reasonCode 
         * Conformance/Cardinality: REQUIRED (0-1) <p>Indicates a 
         * reason for overriding a patient's consent rules.</p> 
         * <p>Authorization.reason 
         * (mnemonic)</p><p>Authorization.comment (original text)</p> 
         * <p>Authorization.reason 
         * (mnemonic)</p><p>Authorization.comment (original text)</p> 
         * <p>Important for audit purposes</p> Un-merged Business Name: 
         * ConsentOverrideReason Relationship: 
         * RCMR_MT010001CA.ConsentEvent.reasonCode 
         * Conformance/Cardinality: REQUIRED (0-1) <p>Indicates a 
         * reason for overriding a patient's consent rules or accessing 
         * information without consent.</p> <p>Authorization.reason 
         * (mnemonic)</p><p>Authorization.comment (original text)</p> 
         * <p>Authorization.reason 
         * (mnemonic)</p><p>Authorization.comment (original text)</p> 
         * <p>Important for audit purposes</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"reasonCode"})]
        public ActConsentInformationAccessReason ReasonCode {
            get { return (ActConsentInformationAccessReason) this.reasonCode.Value; }
            set { this.reasonCode.Value = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: COCT_MT470000CA.Subject.patient 
         * Conformance/Cardinality: MANDATORY (1) Un-merged Business 
         * Name: (no business name specified) Relationship: 
         * RCMR_MT010001CA.Subject.patient Conformance/Cardinality: 
         * MANDATORY (1) <p>&nbsp;This uses COCT_MT050202CA &ndash; 
         * Patient Person&nbsp;Identified Confirmable.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subject/patient","subject1/patient"})]
        [Hl7MapByPartType(Name="subject", Type="RCMR_MT010001CA.Subject")]
        [Hl7MapByPartType(Name="subject/patient", Type="COCT_MT050203CA.Patient")]
        [Hl7MapByPartType(Name="subject1", Type="COCT_MT470000CA.Subject")]
        [Hl7MapByPartType(Name="subject1/patient", Type="COCT_MT050202CA.Patient")]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Merged.Patient SubjectPatient {
            get { return this.subjectPatient; }
            set { this.subjectPatient = value; }
        }

        /**
         * <summary>Business Name: OverriddenBy</summary>
         * 
         * <remarks>Un-merged Business Name: (no business name 
         * specified) Relationship: 
         * COCT_MT470000CA.ConsentEvent.author1 
         * Conformance/Cardinality: REQUIRED (0-1) Un-merged Business 
         * Name: OverriddenBy Relationship: 
         * RCMR_MT010001CA.ConsentEvent.author2 
         * Conformance/Cardinality: REQUIRED (0-1) <p>&nbsp;Indicates 
         * that information access was approved</p> <div>by a provider 
         * rather than a patient.</div> <div>Either this must be 
         * specified or author1 must be&nbsp;specified or a MISSCOND 
         * error issue will be</div> <div>returned.</div></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"author1","author2"})]
        [Hl7MapByPartType(Name="author1", Type="COCT_MT470000CA.Author2")]
        [Hl7MapByPartType(Name="author2", Type="RCMR_MT010001CA.Author2")]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Merged.PrescribedBy Author2 {
            get { return this.author2; }
            set { this.author2 = value; }
        }

        /**
         * <summary>Business Name: ConsentedToBy</summary>
         * 
         * <remarks>Un-merged Business Name: (no business name 
         * specified) Relationship: 
         * COCT_MT470000CA.ConsentEvent.author2 
         * Conformance/Cardinality: REQUIRED (0-1) Un-merged Business 
         * Name: ConsentedToBy Relationship: 
         * RCMR_MT010001CA.ConsentEvent.author1 
         * Conformance/Cardinality: REQUIRED (0-1) <p>&nbsp;Indicates 
         * that the consent was provided by the&nbsp;patient or 
         * representative.</p> <div>&nbsp;</div> <div>Either this must 
         * be specified or author2 must be&nbsp;specified or a MISSCOND 
         * error issue will be</div> <p>returned.&nbsp;</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"author1","author2"})]
        [Hl7MapByPartType(Name="author1", Type="RCMR_MT010001CA.Author")]
        [Hl7MapByPartType(Name="author2", Type="COCT_MT470000CA.Author")]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Merged.ConsentedToBy Author1 {
            get { return this.author1; }
            set { this.author1 = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * COCT_MT470000CA.Subject2.informDefinition 
         * Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subject2/informDefinition"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Coct_mt470000ca.AccessType Subject2InformDefinition {
            get { return this.subject2InformDefinition; }
            set { this.subject2InformDefinition = value; }
        }

        /**
         * <summary>Business Name: ConsentType</summary>
         * 
         * <remarks>Un-merged Business Name: ConsentType Relationship: 
         * RCMR_MT010001CA.ConsentEvent.code Conformance/Cardinality: 
         * MANDATORY (1) <p>Indicates the type of consent being given: 
         * Information access or Information maintenance.</p> 
         * <p>Distinguishes what type of consent is being dealt with 
         * and is therefore mandatory.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ActConsentType Code {
            get { return (ActConsentType) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>Business Name: ConsentRefusedIndicator</summary>
         * 
         * <remarks>Un-merged Business Name: ConsentRefusedIndicator 
         * Relationship: RCMR_MT010001CA.ConsentEvent.negationInd 
         * Conformance/Cardinality: OPTIONAL (0-1) <p>Must be either 
         * not present or non-null.</p> <p>If true, indicates that 
         * consent has explicitly *not* been given.</p> <p>Primarily 
         * applies for global &quot;participation&quot; consent, when 
         * there is a need to track whether the patient has consented, 
         * not consented, or has not recorded a decision.</p><p>Because 
         * not all jurisdictions will track &quot;participation&quot; 
         * consent, this attribute is optional. In jurisdictions where 
         * it is supported, the element must always be valued as either 
         * true or false.</p> <p>Primarily applies for global 
         * &quot;participation&quot; consent, when there is a need to 
         * track whether the patient has consented, not consented, or 
         * has not recorded a decision.</p><p>Because not all 
         * jurisdictions will track &quot;participation&quot; consent, 
         * this attribute is optional. In jurisdictions where it is 
         * supported, the element must always be valued as either true 
         * or false.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"negationInd"})]
        public bool? NegationInd {
            get { return this.negationInd.Value; }
            set { this.negationInd.Value = value; }
        }

        /**
         * <summary>Business Name: ConsentsTo</summary>
         * 
         * <remarks>Un-merged Business Name: ConsentsTo Relationship: 
         * RCMR_MT010001CA.Component.permissionToInform 
         * Conformance/Cardinality: POPULATED (1) <p>&nbsp;Describes 
         * the type of information access being</p> <div>consented 
         * to.</div></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"component/permissionToInform"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Si.Rcmr_mt010001ca.InformationAccess ComponentPermissionToInform {
            get { return this.componentPermissionToInform; }
            set { this.componentPermissionToInform = value; }
        }

    }

}