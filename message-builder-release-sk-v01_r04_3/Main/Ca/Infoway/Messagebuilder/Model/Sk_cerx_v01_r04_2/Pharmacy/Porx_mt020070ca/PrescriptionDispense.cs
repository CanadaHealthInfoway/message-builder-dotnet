/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Porx_mt020070ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Coct_mt050303ca;
    using Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Merged;
    using Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Merged;
    using Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Merged;
    using Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Porx_mt980040ca;
    using System.Collections.Generic;


    /**
     * <summary>Business Name: Prescription Dispense</summary>
     * 
     * <p>This is the detailed information about a medication 
     * dispense that has been performed on behalf a patient</p> 
     * <p>A_BillablePharmacyDispense</p> <p>Dispensing is an 
     * integral part of the overall medication process.</p>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"PORX_MT020070CA.MedicationDispense"})]
    public class PrescriptionDispense : MessagePartBean {

        private II id;
        private CV confidentialityCode;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Merged.IPatient subjectPatient1;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Merged.Patient recordTargetPatient;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Merged.PrescriptionReference inFulfillmentOfSubstanceAdministrationRequest;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Merged.Substitution component1SubstitutionMade;
        private IList<Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Porx_mt980040ca.AdministrationInstructions> component2DosageInstruction;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Porx_mt020070ca.SupplyEvent component3SupplyEvent;
        private Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Merged.Comment subjectOfAnnotation;

        public PrescriptionDispense() {
            this.id = new IIImpl();
            this.confidentialityCode = new CVImpl();
            this.component2DosageInstruction = new List<Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Porx_mt980040ca.AdministrationInstructions>();
        }
        /**
         * <summary>Business Name: A:Local Dispense Id</summary>
         * 
         * <remarks>Relationship: PORX_MT020070CA.MedicationDispense.id 
         * Conformance/Cardinality: REQUIRED (0-1) <p>Identifier 
         * assigned by the dispensing facility.</p> <p>Allows formal 
         * tracking of centrally recorded dispenses to local records 
         * for audit and related purposes.</p> <p><strong>SK PIN will 
         * record this as an external key against the event to allow 
         * for retrieval of this dispense using the given 
         * identifier.</strong></p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>Business Name: E:Prescription Masking Indicator</summary>
         * 
         * <remarks>Relationship: 
         * PORX_MT020070CA.MedicationDispense.confidentialityCode 
         * Conformance/Cardinality: REQUIRED (0-1) <p>Communicates the 
         * intent that the dispense should be masked if it is created; 
         * If the dispense is masked, this makes the complete 
         * prescription and all dispenses masked.</p> 
         * <p>DispensedItem.masked</p> <p>Can be used to set a mask for 
         * a new dispense, if present in a new dispense request.</p> 
         * <p>If a dispense is masked, it implicitly masks the 
         * prescription being dispensed. (There's no point in masking a 
         * dispense if the prescription is unmasked.)</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public x_VeryBasicConfidentialityKind ConfidentialityCode {
            get { return (x_VeryBasicConfidentialityKind) this.confidentialityCode.Value; }
            set { this.confidentialityCode.Value = value; }
        }

        /**
         * <summary>Business Name: Dispensed For</summary>
         * 
         * <remarks>Relationship: PORX_MT020070CA.Subject8.patient1 
         * Conformance/Cardinality: MANDATORY (1) <p><strong>NOTE: The 
         * CeRx model allows for this field to be an animal. PIN does 
         * not support animals and this field is constrained to only 
         * allow Patients</strong></p> <p>Indicates the patient the 
         * drug was dispensed for.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subject/patient1"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Merged.IPatient SubjectPatient1 {
            get { return this.subjectPatient1; }
            set { this.subjectPatient1 = value; }
        }

        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Merged.Patient SubjectPatient1AsPatient1 {
            get { return this.subjectPatient1 is Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Merged.Patient ? (Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Merged.Patient) this.subjectPatient1 : (Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Merged.Patient) null; }
        }
        public bool HasSubjectPatient1AsPatient1() {
            return (this.subjectPatient1 is Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Merged.Patient);
        }

        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Coct_mt050303ca.AnimalPatient SubjectPatient1AsPatient2 {
            get { return this.subjectPatient1 is Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Coct_mt050303ca.AnimalPatient ? (Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Coct_mt050303ca.AnimalPatient) this.subjectPatient1 : (Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Coct_mt050303ca.AnimalPatient) null; }
        }
        public bool HasSubjectPatient1AsPatient2() {
            return (this.subjectPatient1 is Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Coct_mt050303ca.AnimalPatient);
        }

        /**
         * <summary>Relationship: PORX_MT020070CA.RecordTarget.patient</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"recordTarget/patient"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Common.Merged.Patient RecordTargetPatient {
            get { return this.recordTargetPatient; }
            set { this.recordTargetPatient = value; }
        }

        /**
         * <summary>Relationship: 
         * PORX_MT020070CA.InFulfillmentOf1.substanceAdministrationRequest</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"inFulfillmentOf/substanceAdministrationRequest"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Merged.PrescriptionReference InFulfillmentOfSubstanceAdministrationRequest {
            get { return this.inFulfillmentOfSubstanceAdministrationRequest; }
            set { this.inFulfillmentOfSubstanceAdministrationRequest = value; }
        }

        /**
         * <summary>Business Name: Performs</summary>
         * 
         * <remarks>Relationship: 
         * PORX_MT020070CA.Component13.substitutionMade 
         * Conformance/Cardinality: POPULATED (1) <p>&nbsp;An 
         * indication of what kind of substitution was</p> <div>made, 
         * if any.</div></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"component1/substitutionMade"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Merged.Substitution Component1SubstitutionMade {
            get { return this.component1SubstitutionMade; }
            set { this.component1SubstitutionMade = value; }
        }

        /**
         * <summary>Relationship: 
         * PORX_MT020070CA.Component11.dosageInstruction</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"component2/dosageInstruction"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Porx_mt980040ca.AdministrationInstructions> Component2DosageInstruction {
            get { return this.component2DosageInstruction; }
        }

        /**
         * <summary>Relationship: PORX_MT020070CA.Component.supplyEvent</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"component3/supplyEvent"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Pharmacy.Porx_mt020070ca.SupplyEvent Component3SupplyEvent {
            get { return this.component3SupplyEvent; }
            set { this.component3SupplyEvent = value; }
        }

        /**
         * <summary>Relationship: PORX_MT020070CA.Subject7.annotation</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subjectOf/annotation"})]
        public Ca.Infoway.Messagebuilder.Model.Sk_cerx_v01_r04_2.Merged.Comment SubjectOfAnnotation {
            get { return this.subjectOfAnnotation; }
            set { this.subjectOfAnnotation = value; }
        }

    }

}