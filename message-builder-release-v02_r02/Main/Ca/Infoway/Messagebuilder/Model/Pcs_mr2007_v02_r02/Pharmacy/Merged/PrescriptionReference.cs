/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-02-16 11:13:28 -0500 (Thu, 16 Feb 2012) $
 * Revision:      $LastChangedRevision: 5551 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Common.Coct_mt120600ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Common.Coct_mt141007ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Common.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Porx_mt010110ca;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>PORX_MT010110CA.DeviceRequest: Prescription</summary>
     * 
     * <remarks><p>Information pertaining to a prescriber's 
     * authorization for a device to be dispensed to a patient, as 
     * well as the instruction on when and how the device is to be 
     * used by the patient</p> <p>This is a 'core' class of the 
     * medication model and is important for understanding what 
     * devices the patient is intended to be receiving.</p> 
     * PORX_MT020070CA.SubstanceAdministrationRequest: Prescription 
     * Reference <p>The Prescriber Name must be specified only when 
     * the Prescription Order Number is Null.</p><p>Component MUST 
     * be specified if the id is null and CAN NOT be specified if 
     * the id is not null</p> <p>The Prescriber Name must be 
     * specified only when the Prescription Order Number is 
     * Null.</p><p>Component MUST be specified if the id is null 
     * and CAN NOT be specified if the id is not null</p> 
     * <p>Information pertaining to the prescription for which a 
     * dispense is being created</p> <p>Dispenses for 
     * electronically created prescriptions must reference the 
     * prescription.</p> PORX_MT060010CA.SupplyRequest: 
     * Prescription Reference <p>A reference to the prescription 
     * order being dispensed</p> <p>Links a dispense with its 
     * parent prescription.</p> 
     * PORX_MT060090CA.SubstanceAdministrationRequest: Prescription 
     * Reference <p>A reference to the prescription order being 
     * dispensed</p> <p>Links a dispense with its parent 
     * prescription.</p> PORX_MT020060CA.DeviceRequest: 
     * Prescription Reference <p>The Prescriber Name must be 
     * specified only when the Prescription ID is Null</p> 
     * <p>Information pertaining to the prescription for which a 
     * dispense is being created</p> <p>Dispenses for 
     * electronically created prescriptions must reference the 
     * prescription.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"PORX_MT010110CA.DeviceRequest","PORX_MT020060CA.DeviceRequest","PORX_MT020070CA.SubstanceAdministrationRequest","PORX_MT060010CA.SupplyRequest","PORX_MT060090CA.SubstanceAdministrationRequest"})]
    public class PrescriptionReference : MessagePartBean {

        private II id;
        private CS statusCode;
        private SET<CV, Code> confidentialityCode;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Common.Coct_mt141007ca.DeviceProduct directTargetManufacturedProduct;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Porx_mt010110ca.PriorDeviceRequest predecessorPriorDeviceRequest;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged.PrescribedBecauseOf> reason;
        private BL preconditionVerificationEventCriterion;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged.CoverageExtensions_1> coverageCoverage;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged.ProcedureRequest component1ProcedureRequest;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged.DispenseInstructions_1 component2SupplyRequest;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Common.Coct_mt120600ca.Notes subjectOfAnnotation;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Common.Merged.HealthcareWorker responsiblePartyAssignedEntity;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Merged.RefusedBy author;
        private BL componentContextConductionInd;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged.DispenseInstructions_2 componentSupplyRequest;

        public PrescriptionReference() {
            this.id = new IIImpl();
            this.statusCode = new CSImpl();
            this.confidentialityCode = new SETImpl<CV, Code>(typeof(CVImpl));
            this.reason = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged.PrescribedBecauseOf>();
            this.preconditionVerificationEventCriterion = new BLImpl(false);
            this.coverageCoverage = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged.CoverageExtensions_1>();
            this.componentContextConductionInd = new BLImpl();
        }
        /**
         * <summary>Prescription Order Number</summary>
         * 
         * <remarks><p>This is an identifier assigned to a specific 
         * device order. The number remains constant across the 
         * lifetime of the order, regardless of the number of providers 
         * or pharmacies involved in fulfilling the order.</p> 
         * <p>Allows prescriptions to be uniquely referenced and 
         * associated with the dispense.</p><p>The ID is mandatory 
         * because the DIS will always assign a Prescription Order 
         * Number.</p> <p>Allows prescriptions to be uniquely 
         * referenced and associated with the dispense.</p><p>The ID is 
         * mandatory because the DIS will always assign a Prescription 
         * Order Number.</p> Prescription Order Number <p>This is an 
         * identifier assigned to a specific medication order. The 
         * number remains constant across the lifetime of the order, 
         * regardless of the number of providers or pharmacies involved 
         * in fulfilling the order.</p> <p>Allows prescriptions to be 
         * uniquely referenced and associated with the 
         * dispense.</p><p>The ID is mandatory because the DIS will 
         * always assign a Prescription Order Number.</p> <p>Allows 
         * prescriptions to be uniquely referenced and associated with 
         * the dispense.</p><p>The ID is mandatory because the DIS will 
         * always assign a Prescription Order Number.</p> 
         * D:Prescription Order Number <p>The identifier of the 
         * prescription for which a dispense is being created.</p> 
         * <p>Allows prescriptions to be uniquely referenced.</p><p>The 
         * ID is only 'populated' because in some cases the 
         * prescription will not yet exist electronically.</p> 
         * <p>Allows prescriptions to be uniquely referenced.</p><p>The 
         * ID is only 'populated' because in some cases the 
         * prescription will not yet exist electronically.</p> 
         * D:Prescription Order Number <p>The identifier of the 
         * prescription for which a dispense is beiing created.</p> 
         * <p>Allows prescriptions to be uniquely referenced.</p><p>The 
         * ID is only 'populated' because in some cases the 
         * prescription will not yet exist electronically.</p> 
         * <p>Allows prescriptions to be uniquely referenced.</p><p>The 
         * ID is only 'populated' because in some cases the 
         * prescription will not yet exist electronically.</p> A: 
         * Prescription Number <p>The Prescription Order Number is a 
         * globally unique number assigned to a prescription by the 
         * EHR/DIS irrespective of the source of the order</p><p>It is 
         * created by the EHR/DIS once the prescription has passed all 
         * edits and validation.</p> <p>The Prescription Order Number 
         * is a globally unique number assigned to a prescription by 
         * the EHR/DIS irrespective of the source of the order</p><p>It 
         * is created by the EHR/DIS once the prescription has passed 
         * all edits and validation.</p> <p>Allows for the situations 
         * where the order is originating from the DIS.</p><p>Allows 
         * prescriptions to be uniquely referenced.</p><p>Because this 
         * attribute is not used for prescriptions originating from a 
         * prescriber system, the element is optional.</p> <p>Allows 
         * for the situations where the order is originating from the 
         * DIS.</p><p>Allows prescriptions to be uniquely 
         * referenced.</p><p>Because this attribute is not used for 
         * prescriptions originating from a prescriber system, the 
         * element is optional.</p> <p>Allows for the situations where 
         * the order is originating from the DIS.</p><p>Allows 
         * prescriptions to be uniquely referenced.</p><p>Because this 
         * attribute is not used for prescriptions originating from a 
         * prescriber system, the element is optional.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>PrescriptionStatus</summary>
         * 
         * <remarks>C:Prescription Status <p>This denotes the state of 
         * the prescription in the lifecycle of the prescription. Valid 
         * statuses are: new, active, suspended, aborted, completed, 
         * obsolete and nullified. Use 'active' when registering a new 
         * prescription or converting a predetermination into a valid 
         * prescription.</p> <p>Indicates what actions are allowed to 
         * be performed against a prescription. This is a mandatory 
         * field because every prescription needs to be in some 
         * state.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public ActStatus StatusCode {
            get { return (ActStatus) this.statusCode.Value; }
            set { this.statusCode.Value = value; }
        }

        /**
         * <summary>PrescriptionMaskingIndicators</summary>
         * 
         * <remarks>F:Prescription Masking Indicators <p>Communicates 
         * the intent of the patient to restrict access to their 
         * prescriptions. Provides support for additional 
         * confidentiality constraint, giving patients a level of 
         * control over their information.</p><p>Valid values are: 'N' 
         * (normal - denotes 'Not Masked'); 'R' (restricted - denotes 
         * 'Masked') and 'T' (taboo - denotes 'Patient Access 
         * Restricted').</p><p>The default is 'normal' signifying 'Not 
         * Masked'.</p> <p>Communicates the intent of the patient to 
         * restrict access to their prescriptions. Provides support for 
         * additional confidentiality constraint, giving patients a 
         * level of control over their information.</p><p>Valid values 
         * are: 'N' (normal - denotes 'Not Masked'); 'R' (restricted - 
         * denotes 'Masked') and 'T' (taboo - denotes 'Patient Access 
         * Restricted').</p><p>The default is 'normal' signifying 'Not 
         * Masked'.</p> <p>Communicates the intent of the patient to 
         * restrict access to their prescriptions. Provides support for 
         * additional confidentiality constraint, giving patients a 
         * level of control over their information.</p><p>Valid values 
         * are: 'N' (normal - denotes 'Not Masked'); 'R' (restricted - 
         * denotes 'Masked') and 'T' (taboo - denotes 'Patient Access 
         * Restricted').</p><p>The default is 'normal' signifying 'Not 
         * Masked'.</p> <p>Allows the patient to have discrete control 
         * over access to their prescription data.</p><p>Taboo allows 
         * the provider to request restricted access to patient or 
         * their care giver.</p><p>Constraint: Cant have both normal 
         * and one of the other codes simultaneously.</p><p>The 
         * attribute is optional because not all systems will support 
         * masking.</p> <p>Allows the patient to have discrete control 
         * over access to their prescription data.</p><p>Taboo allows 
         * the provider to request restricted access to patient or 
         * their care giver.</p><p>Constraint: Cant have both normal 
         * and one of the other codes simultaneously.</p><p>The 
         * attribute is optional because not all systems will support 
         * masking.</p> <p>Allows the patient to have discrete control 
         * over access to their prescription data.</p><p>Taboo allows 
         * the provider to request restricted access to patient or 
         * their care giver.</p><p>Constraint: Cant have both normal 
         * and one of the other codes simultaneously.</p><p>The 
         * attribute is optional because not all systems will support 
         * masking.</p> <p>Allows the patient to have discrete control 
         * over access to their prescription data.</p><p>Taboo allows 
         * the provider to request restricted access to patient or 
         * their care giver.</p><p>Constraint: Cant have both normal 
         * and one of the other codes simultaneously.</p><p>The 
         * attribute is optional because not all systems will support 
         * masking.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public ICollection<x_NormalRestrictedTabooConfidentialityKind> ConfidentialityCode {
            get { return this.confidentialityCode.RawSet<x_NormalRestrictedTabooConfidentialityKind>(); }
        }

        [Hl7XmlMappingAttribute(new string[] {"directTarget/manufacturedProduct"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Common.Coct_mt141007ca.DeviceProduct DirectTargetManufacturedProduct {
            get { return this.directTargetManufacturedProduct; }
            set { this.directTargetManufacturedProduct = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"predecessor/priorDeviceRequest"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Porx_mt010110ca.PriorDeviceRequest PredecessorPriorDeviceRequest {
            get { return this.predecessorPriorDeviceRequest; }
            set { this.predecessorPriorDeviceRequest = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"reason"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged.PrescribedBecauseOf> Reason {
            get { return this.reason; }
        }

        [Hl7XmlMappingAttribute(new string[] {"precondition/verificationEventCriterion"})]
        public bool? PreconditionVerificationEventCriterion {
            get { return this.preconditionVerificationEventCriterion.Value; }
            set { this.preconditionVerificationEventCriterion.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"coverage/coverage"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged.CoverageExtensions_1> CoverageCoverage {
            get { return this.coverageCoverage; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component1/procedureRequest"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged.ProcedureRequest Component1ProcedureRequest {
            get { return this.component1ProcedureRequest; }
            set { this.component1ProcedureRequest = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component2/supplyRequest"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged.DispenseInstructions_1 Component2SupplyRequest {
            get { return this.component2SupplyRequest; }
            set { this.component2SupplyRequest = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf/annotation"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Common.Coct_mt120600ca.Notes SubjectOfAnnotation {
            get { return this.subjectOfAnnotation; }
            set { this.subjectOfAnnotation = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"responsibleParty/assignedEntity"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Common.Merged.HealthcareWorker ResponsiblePartyAssignedEntity {
            get { return this.responsiblePartyAssignedEntity; }
            set { this.responsiblePartyAssignedEntity = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"author"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Merged.RefusedBy Author {
            get { return this.author; }
            set { this.author = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component/contextConductionInd"})]
        public bool? ComponentContextConductionInd {
            get { return this.componentContextConductionInd.Value; }
            set { this.componentContextConductionInd.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component/supplyRequest"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Pharmacy.Merged.DispenseInstructions_2 ComponentSupplyRequest {
            get { return this.componentSupplyRequest; }
            set { this.componentSupplyRequest = value; }
        }

    }

}