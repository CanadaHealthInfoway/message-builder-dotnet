/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Coct_mt300000ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Merged;
    using System;


    /**
     * <summary>Business Name: Pharmacy Dispense</summary>
     * 
     * <p>Patient classes are not referenced in the billable acts, 
     * as they are noted in the parent model (e.g. Invoice message) 
     * as the CoveredPartyAsPatient</p>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"COCT_MT300000CA.SupplyEvent"})]
    public class PharmacyDispense : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Coct_mt280001ca.IA_BillableActChoice {

        private CS moodCode;
        private CV code;
        private TS effectiveTime;
        private PQ quantity;
        private IVL<TS, Interval<PlatformDate>> expectedUseTime;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Merged.DrugDispensedIn productContent;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Coct_mt300000ca.PharmacistRole performerPharmacistRole;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Merged.ServiceLocation originServiceDeliveryLocation;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Merged.ServiceLocation destinationServiceDeliveryLocation;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Coct_mt300000ca.DispenseInstructions pertinentInformation;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Merged.PatientEncounter componentOfPatientEncounter;

        public PharmacyDispense() {
            this.moodCode = new CSImpl();
            this.code = new CVImpl();
            this.effectiveTime = new TSImpl();
            this.quantity = new PQImpl();
            this.expectedUseTime = new IVLImpl<TS, Interval<PlatformDate>>();
        }
        /**
         * <summary>Relationship: COCT_MT300000CA.SupplyEvent.moodCode</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"moodCode"})]
        public x_ActMoodIntentEvent MoodCode {
            get { return (x_ActMoodIntentEvent) this.moodCode.Value; }
            set { this.moodCode.Value = value; }
        }

        /**
         * <summary>Business Name: Type of Dispense</summary>
         * 
         * <remarks>Relationship: COCT_MT300000CA.SupplyEvent.code 
         * Conformance/Cardinality: POPULATED (1) <p>partial 
         * fill/trial/completion of trial, etc.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ActPharmacySupplyType Code {
            get { return (ActPharmacySupplyType) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>Business Name: Dispense Time</summary>
         * 
         * <remarks>Relationship: 
         * COCT_MT300000CA.SupplyEvent.effectiveTime 
         * Conformance/Cardinality: MANDATORY (1) <p>Date and Time to 
         * support multiple dispense per day of the same product. E.g. 
         * methadone</p> <p>Must support hour/minute to handle 
         * multi-dispense/day of same product - e.g. methadone</p> 
         * <p>Dispense Time</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public PlatformDate EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>Business Name: Total Dispensed</summary>
         * 
         * <remarks>Relationship: COCT_MT300000CA.SupplyEvent.quantity 
         * Conformance/Cardinality: REQUIRED (0-1) <p>Either Total 
         * Dispensed or Dispensed Days Supply must be specified for 
         * billing.</p> <p>Generally defaults to 'quantity billed'</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"quantity"})]
        public PhysicalQuantity Quantity {
            get { return this.quantity.Value; }
            set { this.quantity.Value = value; }
        }

        /**
         * <summary>Business Name: Dispensed Days Supply</summary>
         * 
         * <remarks>Relationship: 
         * COCT_MT300000CA.SupplyEvent.expectedUseTime 
         * Conformance/Cardinality: REQUIRED (0-1) <p>Either Total 
         * Dispensed or Dispensed Days Supply must be specified for 
         * billing.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"expectedUseTime"})]
        public Interval<PlatformDate> ExpectedUseTime {
            get { return this.expectedUseTime.Value; }
            set { this.expectedUseTime.Value = value; }
        }

        /**
         * <summary>Relationship: COCT_MT300000CA.Product.content</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"product/content"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Merged.DrugDispensedIn ProductContent {
            get { return this.productContent; }
            set { this.productContent = value; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT300000CA.ResponsibleProvider.pharmacistRole</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"performer/pharmacistRole"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Coct_mt300000ca.PharmacistRole PerformerPharmacistRole {
            get { return this.performerPharmacistRole; }
            set { this.performerPharmacistRole = value; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT300000CA.Origin.serviceDeliveryLocation</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"origin/serviceDeliveryLocation"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Merged.ServiceLocation OriginServiceDeliveryLocation {
            get { return this.originServiceDeliveryLocation; }
            set { this.originServiceDeliveryLocation = value; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT300000CA.Destination.serviceDeliveryLocation</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"destination/serviceDeliveryLocation"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Merged.ServiceLocation DestinationServiceDeliveryLocation {
            get { return this.destinationServiceDeliveryLocation; }
            set { this.destinationServiceDeliveryLocation = value; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT300000CA.SupplyEvent.pertinentInformation</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Coct_mt300000ca.DispenseInstructions PertinentInformation {
            get { return this.pertinentInformation; }
            set { this.pertinentInformation = value; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT300000CA.EncounterInformation.patientEncounter</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"componentOf/patientEncounter"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Merged.PatientEncounter ComponentOfPatientEncounter {
            get { return this.componentOfPatientEncounter; }
            set { this.componentOfPatientEncounter = value; }
        }

    }

}