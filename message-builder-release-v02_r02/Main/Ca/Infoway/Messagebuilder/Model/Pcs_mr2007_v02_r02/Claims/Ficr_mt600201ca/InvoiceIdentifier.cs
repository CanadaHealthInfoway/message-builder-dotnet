/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Ficr_mt600201ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Coct_mt110101ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Coct_mt110200ca;
    using System.Collections.Generic;


    /**
     * <summary>Invoice Identifier</summary>
     * 
     * <remarks><p>Set of Identifiers that uniquely identify the 
     * Invoice. Could reference an Invoice Number with associated 
     * indentifers</p> <p>Details of the claim for which payment is 
     * being requested.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"FICR_MT600201CA.PaymentRequest"})]
    public class InvoiceIdentifier : MessagePartBean {

        private SET<II, Identifier> id;
        private MO amt;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Ficr_mt600201ca.AdministrativeContactsS primaryPerformerContactParty;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Coct_mt110200ca.PayeeAccount creditAccount;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Coct_mt110101ca.Account debitAccount;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Ficr_mt600201ca.TaxAccountOfProvider> pertinentInformationProviderBillingTaxAccount;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Ficr_mt600201ca.IInvoiceElementChoice> reasonOfInvoiceElementChoice;

        public InvoiceIdentifier() {
            this.id = new SETImpl<II, Identifier>(typeof(IIImpl));
            this.amt = new MOImpl();
            this.pertinentInformationProviderBillingTaxAccount = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Ficr_mt600201ca.TaxAccountOfProvider>();
            this.reasonOfInvoiceElementChoice = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Ficr_mt600201ca.IInvoiceElementChoice>();
        }
        /**
         * <summary>Invoice Identifier</summary>
         * 
         * <remarks><p>Set of Identifiers that uniquely identify the 
         * Invoice. Could reference an Invoice Number with associated 
         * indentifers</p> <p>Invoice Identifier: Used for management 
         * of payment request objects by adjudicators to help with 
         * traceability of messages to their applications. This does 
         * not need to be surfaced to the provider. Can also be used to 
         * detect duplicate invoices.</p><p>There are some situations 
         * where more than 1 identifier for this object can be included 
         * in a message.</p><p>For example:</p><p>1. unique invoice 
         * identifier, independent of adjudicator recipient.</p><p>2. 
         * sequential invoice identifier by 
         * adjudicator.</p><p>Obligation on adjudicator is to return 
         * and communicate about this item with all identifiers (i.e. 
         * identifier 1. and 2.). At present, there are no messages 
         * where this occurs (Jun 04)</p> <p>Invoice Identifier: Used 
         * for management of payment request objects by adjudicators to 
         * help with traceability of messages to their applications. 
         * This does not need to be surfaced to the provider. Can also 
         * be used to detect duplicate invoices.</p><p>There are some 
         * situations where more than 1 identifier for this object can 
         * be included in a message.</p><p>For example:</p><p>1. unique 
         * invoice identifier, independent of adjudicator 
         * recipient.</p><p>2. sequential invoice identifier by 
         * adjudicator.</p><p>Obligation on adjudicator is to return 
         * and communicate about this item with all identifiers (i.e. 
         * identifier 1. and 2.). At present, there are no messages 
         * where this occurs (Jun 04)</p> <p>Invoice Identifier: Used 
         * for management of payment request objects by adjudicators to 
         * help with traceability of messages to their applications. 
         * This does not need to be surfaced to the provider. Can also 
         * be used to detect duplicate invoices.</p><p>There are some 
         * situations where more than 1 identifier for this object can 
         * be included in a message.</p><p>For example:</p><p>1. unique 
         * invoice identifier, independent of adjudicator 
         * recipient.</p><p>2. sequential invoice identifier by 
         * adjudicator.</p><p>Obligation on adjudicator is to return 
         * and communicate about this item with all identifiers (i.e. 
         * identifier 1. and 2.). At present, there are no messages 
         * where this occurs (Jun 04)</p> <p>Invoice Identifier: Used 
         * for management of payment request objects by adjudicators to 
         * help with traceability of messages to their applications. 
         * This does not need to be surfaced to the provider. Can also 
         * be used to detect duplicate invoices.</p><p>There are some 
         * situations where more than 1 identifier for this object can 
         * be included in a message.</p><p>For example:</p><p>1. unique 
         * invoice identifier, independent of adjudicator 
         * recipient.</p><p>2. sequential invoice identifier by 
         * adjudicator.</p><p>Obligation on adjudicator is to return 
         * and communicate about this item with all identifiers (i.e. 
         * identifier 1. and 2.). At present, there are no messages 
         * where this occurs (Jun 04)</p> <p>Invoice Identifier: Used 
         * for management of payment request objects by adjudicators to 
         * help with traceability of messages to their applications. 
         * This does not need to be surfaced to the provider. Can also 
         * be used to detect duplicate invoices.</p><p>There are some 
         * situations where more than 1 identifier for this object can 
         * be included in a message.</p><p>For example:</p><p>1. unique 
         * invoice identifier, independent of adjudicator 
         * recipient.</p><p>2. sequential invoice identifier by 
         * adjudicator.</p><p>Obligation on adjudicator is to return 
         * and communicate about this item with all identifiers (i.e. 
         * identifier 1. and 2.). At present, there are no messages 
         * where this occurs (Jun 04)</p> <p>Invoice Identifier: Used 
         * for management of payment request objects by adjudicators to 
         * help with traceability of messages to their applications. 
         * This does not need to be surfaced to the provider. Can also 
         * be used to detect duplicate invoices.</p><p>There are some 
         * situations where more than 1 identifier for this object can 
         * be included in a message.</p><p>For example:</p><p>1. unique 
         * invoice identifier, independent of adjudicator 
         * recipient.</p><p>2. sequential invoice identifier by 
         * adjudicator.</p><p>Obligation on adjudicator is to return 
         * and communicate about this item with all identifiers (i.e. 
         * identifier 1. and 2.). At present, there are no messages 
         * where this occurs (Jun 04)</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public ICollection<Identifier> Id {
            get { return this.id.RawSet(); }
        }

        /**
         * <summary>Total Billed Amount</summary>
         * 
         * <remarks><p>OID (object identifier) + unique number 
         * generated by the pharmacy software for the complete 
         * invoice.</p><p>Must not be the same identifier as the 
         * InvoiceElementGroup.id.</p> <p>OID (object identifier) + 
         * unique number generated by the pharmacy software for the 
         * complete invoice.</p><p>Must not be the same identifier as 
         * the InvoiceElementGroup.id.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"amt"})]
        public Money Amt {
            get { return this.amt.Value; }
            set { this.amt.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"primaryPerformer/contactParty"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Ficr_mt600201ca.AdministrativeContactsS PrimaryPerformerContactParty {
            get { return this.primaryPerformerContactParty; }
            set { this.primaryPerformerContactParty = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"credit/account"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Coct_mt110200ca.PayeeAccount CreditAccount {
            get { return this.creditAccount; }
            set { this.creditAccount = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"debit/account"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Coct_mt110101ca.Account DebitAccount {
            get { return this.debitAccount; }
            set { this.debitAccount = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation/providerBillingTaxAccount"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Ficr_mt600201ca.TaxAccountOfProvider> PertinentInformationProviderBillingTaxAccount {
            get { return this.pertinentInformationProviderBillingTaxAccount; }
        }

        [Hl7XmlMappingAttribute(new string[] {"reasonOf/invoiceElementChoice"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r02.Claims.Ficr_mt600201ca.IInvoiceElementChoice> ReasonOfInvoiceElementChoice {
            get { return this.reasonOfInvoiceElementChoice; }
        }

    }

}