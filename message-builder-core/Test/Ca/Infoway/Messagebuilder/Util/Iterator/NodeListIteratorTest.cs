/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: gng $
 * Last modified: $LastChangedDate: 2015-11-19 18:20:12 -0500 (Fri, 30 Jan 2015) $
 * Revision:      $LastChangedRevision: 9755 $
 */


/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Util.Iterator {
	
	using Ca.Infoway.Messagebuilder.Util.Xml;
	using ILOG.J2CsMapping.Collections.Generics;
	using NUnit;
    using System;
    using System.Collections.Generic;
	using System.Xml;
	
	[NUnit.Framework.TestFixture]
	public class NodeListIteratorTest {
	
        
		[NUnit.Framework.Test]
		public void ShouldCollateElementsByName() {
			/*
			LinkedList<Int32?> queue = new LinkedList<Int32?>();
			ILOG.J2CsMapping.Collections.Generics.Collections.AddAll(ILOG.J2CsMapping.Collections.Generics.Arrays.AsList(2,1,3),queue);
			XmlDocument document = new DocumentFactory()
					.CreateFromString("<top><fred/><fred/><barney/><wilma/><wilma /><wilma/></top>");
	
			/* foreach * /
			foreach (IList<XmlElement> elements  in  Ca.Infoway.Messagebuilder.Util.Iterator.NodeListIterator.CollatedElements(document.DocumentElement.ChildNodes)) {
				NUnit.Framework.Assert.AreEqual((Int32?) elements.Count,(Int32?) queue
									.Poll(),"size");
			}
			*/
		}
    }
}
