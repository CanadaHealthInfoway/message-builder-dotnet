/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-17 11:48:36 -0400 (Tue, 17 May 2011) $
 * Revision:      $LastChangedRevision: 2666 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
//#if inctest 
namespace Ca.Infoway.Messagebuilder.Terminology {
	
	using NUnit;
    using System;
    using System.Collections.Generic;
	
	[NUnit.Framework.TestFixture]
	public class CompositeCodeResolverTest {
	
		[NUnit.Framework.Test]
		public void TestShouldCompositeCollections() {
			CompositeCodeResolver resolver = new CompositeCodeResolver(
					new EnumBasedCodeResolver(typeof(MockEnum)),
					new EnumBasedCodeResolver(typeof(MockStarTrek)));
	
			ICollection<MockCharacters> c = resolver.Lookup<MockCharacters>(typeof(MockCharacters));
            NUnit.Framework.Assert.AreEqual(11, c.Count, "size");
		}
	
		[NUnit.Framework.Test]
		public void TestShouldResolveCode() {
			CompositeCodeResolver resolver = new CompositeCodeResolver(
					new EnumBasedCodeResolver(typeof(MockEnum)),
					new EnumBasedCodeResolver(typeof(MockStarTrek)));
	
			MockCharacters result = resolver.Lookup<MockCharacters>(typeof(MockCharacters), "SPOCK",
					null);
			NUnit.Framework.Assert.IsNotNull(result,"result");
			NUnit.Framework.Assert.AreEqual(Ca.Infoway.Messagebuilder.Terminology.MockStarTrek.SPOCK,result,"spock");
		}
	
		[NUnit.Framework.Test]
		public void TestShouldResolveCodeAndCodeSystem() {
			CompositeCodeResolver resolver = new CompositeCodeResolver(
					new EnumBasedCodeResolver(typeof(MockEnum)),
					new EnumBasedCodeResolver(typeof(MockStarTrek)));
	
			MockCharacters result = resolver.Lookup<MockCharacters>(typeof(MockCharacters), "SPOCK",
					"to.boldly.go");
			NUnit.Framework.Assert.IsNotNull(result,"result");
			NUnit.Framework.Assert.AreEqual(Ca.Infoway.Messagebuilder.Terminology.MockStarTrek.SPOCK,result,"spock");
		}
	}
}
//#endif