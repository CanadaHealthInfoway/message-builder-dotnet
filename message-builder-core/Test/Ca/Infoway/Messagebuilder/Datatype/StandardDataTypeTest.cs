/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-17 11:48:36 -0400 (Tue, 17 May 2011) $
 * Revision:      $LastChangedRevision: 2666 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype {
	
	using NUnit;
    using System;
	
	[NUnit.Framework.TestFixture]
	public class StandardDataTypeTest {
	
		[NUnit.Framework.Test]
		public void ShouldGetHl7TypeName() {
			Hl7TypeName typeName = Ca.Infoway.Messagebuilder.Datatype.StandardDataType.AD_BASIC.TypeName;
			NUnit.Framework.Assert.AreEqual("AD.BASIC",((String) typeName.ToString()),"name");
			NUnit.Framework.Assert.AreEqual("AD",typeName.UnspecializedName,"unqualified name");
		}
	
		[NUnit.Framework.Test]
		public void ShouldGetRootName() {
			NUnit.Framework.Assert.AreEqual("AD",Ca.Infoway.Messagebuilder.Datatype.StandardDataType.AD_BASIC.TypeName.RootName,"AD");
			NUnit.Framework.Assert.AreEqual("IVL",Ca.Infoway.Messagebuilder.Datatype.StandardDataType.IVL_FULL_DATE.TypeName.RootName,"IVL");
		}
	
		[NUnit.Framework.Test]
		public void ShouldCalculateIsCoded() {
			NUnit.Framework.Assert.IsTrue(Ca.Infoway.Messagebuilder.Datatype.StandardDataType.CD.Coded,"CD");
			NUnit.Framework.Assert.IsTrue(Ca.Infoway.Messagebuilder.Datatype.StandardDataType.CD_LAB.Coded,"CD.LAB");
			NUnit.Framework.Assert.IsTrue(Ca.Infoway.Messagebuilder.Datatype.StandardDataType.CV.Coded,"CV");
			NUnit.Framework.Assert.IsFalse(Ca.Infoway.Messagebuilder.Datatype.StandardDataType.ST.Coded,"ST");
		}
	
		[NUnit.Framework.Test]
		public void ShouldResolveSimpleXmlType() {
			NUnit.Framework.Assert.AreEqual(Ca.Infoway.Messagebuilder.Datatype.StandardDataType.II,Ca.Infoway.Messagebuilder.Datatype.StandardDataType.ConvertSimpleXmlToDataType("InstanceIdentifier"),"II");
			NUnit.Framework.Assert.AreEqual(Ca.Infoway.Messagebuilder.Datatype.StandardDataType.TS_DATE,Ca.Infoway.Messagebuilder.Datatype.StandardDataType.ConvertSimpleXmlToDataType("PartialDate"),"TS.DATE");
		}
	
	}
}
