/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: gng $
 * Last modified: $LastChangedDate: 2015-11-19 18:20:12 -0500 (Fri, 30 Jan 2015) $
 * Revision:      $LastChangedRevision: 9755 $
 */


/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype.Impl {
	
	using Ca.Infoway.Messagebuilder;
	using Ca.Infoway.Messagebuilder.Datatype;
	using Ca.Infoway.Messagebuilder.Domainvalue;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// HL7 datatype CV. Backed by a Code.
	/// Coded data, specifying only a c, c system, and optionally display name and original text. Used only as the 
	/// type of properties of other	data types.
	/// CV is used when any reasonable use case will require only a single c value to be sent. Thus, it should not 
	/// be used in circumstances where multiple alternative cs for a given value are desired. This type may be used 
	/// with both the CNE (cd, non-extensible) and the CWE (cd, with extensibility) domain qualifiers.
	/// </summary>
	public class CVImpl : CEImpl, CV {
	
		private const long serialVersionUID = 6243037854254648829L;
	
		/// <summary>
		/// Constructs an empty CV.
		/// </summary>
		///
		public CVImpl() : this(null) {
		}
	
		/// <summary>
		/// Constructs a CV with the given value.
		/// </summary>
		///
		/// <param name="defaultValue">an initial value</param>
		public CVImpl(Code defaultValue) : this(defaultValue, null, Ca.Infoway.Messagebuilder.Datatype.StandardDataType.CV) {
		}
	
		/// <summary>
		/// Constructs a CV with the given null flavor.
		/// </summary>
		///
		/// <param name="nullFlavor">a null flavor</param>
		public CVImpl(NullFlavor nullFlavor) : this(null, nullFlavor, Ca.Infoway.Messagebuilder.Datatype.StandardDataType.CV) {
		}
	
		/// <summary>
		/// Constructs a CV using the supplied parameters.
		/// </summary>
		///
		/// <param name="value">an initial value</param>
		/// <param name="nullFlavor">a null flavor</param>
		/// <param name="dataType">an HL7 datatype</param>
		public CVImpl(Code value_ren, NullFlavor nullFlavor, StandardDataType dataType) : base(value_ren, nullFlavor, dataType) {
		}
	
	}
}
