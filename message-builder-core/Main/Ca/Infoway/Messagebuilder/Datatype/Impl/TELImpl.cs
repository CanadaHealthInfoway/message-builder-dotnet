/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: gng $
 * Last modified: $LastChangedDate: 2015-11-19 18:20:12 -0500 (Fri, 30 Jan 2015) $
 * Revision:      $LastChangedRevision: 9755 $
 */


/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype.Impl {
	
	using Ca.Infoway.Messagebuilder.Datatype;
	using Ca.Infoway.Messagebuilder.Datatype.Lang;
	using Ca.Infoway.Messagebuilder.Domainvalue;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// TEL Hl7 datatype implementation. This datatype is (via its superclass) backed by a TelecommunicationAddress.
	/// Represents CeRx's notion of a telecommunication address, such as a phone
	/// number, fax, email or http address.
	/// There are several parts to an tel address, but HL7 has dumped all the relevant 
	/// information into a single text field. Urp.
	/// The first part is the URL scheme. This is something like tel: or http:. CeRx limits 
	/// these based on the subclass of TEL (TEL.PHONEMAIL or TEL.URI).
	/// There are some number of uses for each address. CeRx limits this to three, which is
	/// not enforced by this class. For the TEL.URI subclass, use is not permitted at all.
	/// http://www.hl7.org/v3ballot/html/infrastructure/itsxml/datatypes-its-xml.htm#dtimpl-TEL
	/// </summary>
	///
	public class TELImpl : URLImpl, TEL {
	
		/// <summary>
		/// Constructs an empty TEL.
		/// </summary>
		///
		public TELImpl() : this((TelecommunicationAddress)null) {
		}
	
		/// <summary>
		/// Constructs a TEL based on a given TelecommunicationAddress.
		/// </summary>
		///
		/// <param name="defaultValue">the initial value</param>
		public TELImpl(TelecommunicationAddress defaultValue) : base(defaultValue, null, Ca.Infoway.Messagebuilder.Datatype.StandardDataType.TEL) {
		}
	
		/// <summary>
		/// Constructs a "null" TEL based on a given null flavor.
		/// </summary>
		///
		/// <param name="nullFlavor">the null flavor to set on this TEL</param>
		public TELImpl(NullFlavor nullFlavor) : base(null, nullFlavor, Ca.Infoway.Messagebuilder.Datatype.StandardDataType.TEL) {
		}
	
	}
}
