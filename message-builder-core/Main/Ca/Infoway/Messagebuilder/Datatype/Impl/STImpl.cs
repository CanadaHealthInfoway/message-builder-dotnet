/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: gng $
 * Last modified: $LastChangedDate: 2015-11-19 18:20:12 -0500 (Fri, 30 Jan 2015) $
 * Revision:      $LastChangedRevision: 9755 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype.Impl {
	
	using Ca.Infoway.Messagebuilder;
	using Ca.Infoway.Messagebuilder.Datatype;
	using Ca.Infoway.Messagebuilder.Domainvalue;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// HL7 datatype ST (and ST.LANG). Backed by a   String.
	/// The character string data type stands for text data, primarily intended for machine processing 
	/// (e.g., sorting, querying, indexing, etc.) Used for names, symbols, and formal expressions.
	/// ST is a restricted ED, whose ED.mediaType property is fixed to text/plain, and whose data must be 
	/// inlined and not compressed. Thus, the properties compression, reference, integrity check, algorithm, 
	/// and thumbnail are not applicable. The character string data type is used when the appearance of text 
	/// does not bear meaning, which is true for formalized text and all kinds of names.
	/// ST data type interprets the encapsulated data as character data (as opposed to bits), depending on the 
	/// charset property of the encapsulated data type. 
	/// </summary>
	///
	public class STImpl : EDImpl<String>, ST {
	
		private const long serialVersionUID = 9117867441166259585L;
	
		public static IList<String> ALLOWED_LANGUAGES = ILOG.J2CsMapping.Collections.Generics.Arrays.AsList("en-CA","fr-CA");
	
		/// <summary>
		/// Constructs an empty ST.
		/// </summary>
		///
		public STImpl() : this((String)null) {
		}
	
		/// <summary>
		/// Constructs an ST using the supplied value.
		/// </summary>
		///
		/// <param name="defaultVaString">the initial value</param>
		public STImpl(String defaultVaString) : base(typeof(String), defaultVaString, null, Ca.Infoway.Messagebuilder.Datatype.StandardDataType.ST) {
		}
	
		/// <summary>
		/// Constructs a language-based ST.
		/// </summary>
		///
		/// <param name="defaultVaString">the initial value</param>
		/// <param name="language_0">the language of the initial value</param>
		public STImpl(String defaultVaString, String language_0) : base(typeof(String), defaultVaString, null, (Ca.Infoway.Messagebuilder.StringUtils.IsBlank(language_0))?Ca.Infoway.Messagebuilder.Datatype.StandardDataType.ST:Ca.Infoway.Messagebuilder.Datatype.StandardDataType.ST_LANG) {
			Language = Ca.Infoway.Messagebuilder.StringUtils.TrimToNull(language_0);
		}
	
		/// <summary>
		/// Constructs an ST with the given null flavor.
		/// </summary>
		///
		/// <param name="nullFlavor">a null flavor</param>
		public STImpl(NullFlavor nullFlavor) : base(typeof(String), null, nullFlavor, Ca.Infoway.Messagebuilder.Datatype.StandardDataType.ST) {
		}
	
	}
}
