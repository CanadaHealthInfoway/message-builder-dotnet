/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-09-21 11:11:24 -0400 (Wed, 21 Sep 2011) $
 * Revision:      $LastChangedRevision: 3001 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype.Impl {
	
	using Ca.Infoway.Messagebuilder.Datatype;
	using Ca.Infoway.Messagebuilder.Domainvalue;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// HL7 datatype INT. Backed by an Integer.
	/// Covers:
	/// INT.POS: This is used to convey an integer number that is greater than or equal to "1".
	/// INT.NONNEG: This is used to convey an integer number that is greater than or equal to "0".
	/// </summary>
	///
	public class INTImpl : QTYImpl<Int32?>, INT {
	
		private const long serialVersionUID = -4882987994046782038L;
	
		/// <summary>
		/// Constructs an empty INT.
		/// </summary>
		///
		public INTImpl() : this((Int32?)null) {
		}
	
		/// <summary>
		/// Constructs an INT with the given initial value.
		/// </summary>
		///
		/// <param name="defaultValue">an initial value</param>
		public INTImpl(Int32? defaultValue) : base(typeof(Int32?), defaultValue, null, Ca.Infoway.Messagebuilder.Datatype.StandardDataType.INT) {
		}
	
		/// <summary>
		/// Constructs an INT with the given null flavor.
		/// </summary>
		///
		/// <param name="nullFlavor">a null flavor</param>
		public INTImpl(NullFlavor nullFlavor) : base(typeof(Int32?), null, nullFlavor, Ca.Infoway.Messagebuilder.Datatype.StandardDataType.INT) {
		}
	
	}
}
