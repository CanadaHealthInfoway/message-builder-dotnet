/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-17 11:48:36 -0400 (Tue, 17 May 2011) $
 * Revision:      $LastChangedRevision: 2666 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype.Lang {
	
	using Ca.Infoway.Messagebuilder.Domainvalue;
	using Ca.Infoway.Messagebuilder.Lang;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// Enum for Postal Address part Types.
	/// </summary>
	///
	[Serializable]
	public class PostalAddressPartType : EnumPattern, NamePartType,
			AddressPartType {
	
		private const long serialVersionUID = 6553215353191315355L;
	
		public static readonly PostalAddressPartType ADDRESS_LINE = new PostalAddressPartType(
				"ADDRESS_LINE", "AL", "addressLine");
		public static readonly PostalAddressPartType DELIMITER = new PostalAddressPartType(
				"DELIMITER", "DEL", "delimiter");
		public static readonly PostalAddressPartType COUNTRY = new PostalAddressPartType(
				"COUNTRY", "CNT", "country");
		public static readonly PostalAddressPartType STATE = new PostalAddressPartType(
				"STATE", "STA", "state");
		public static readonly PostalAddressPartType COUNTY = new PostalAddressPartType(
				"COUNTY", "CPA", "county");
		public static readonly PostalAddressPartType CITY = new PostalAddressPartType(
				"CITY", "CTY", "city");
		public static readonly PostalAddressPartType POSTAL_CODE = new PostalAddressPartType(
				"POSTAL_CODE", "ZIP", "postalCode");
		public static readonly PostalAddressPartType STREET_ADDRESS_LINE = new PostalAddressPartType(
				"STREET_ADDRESS_LINE", "SAL", "streetAddressLine");
		public static readonly PostalAddressPartType HOUSE_NUMBER = new PostalAddressPartType(
				"HOUSE_NUMBER", "BNR", "houseNumber");
		public static readonly PostalAddressPartType HOUSE_NUMBER_NUMERIC = new PostalAddressPartType(
				"HOUSE_NUMBER_NUMERIC", "BNN", "houseNumberNumeric");
		public static readonly PostalAddressPartType DIRECTION = new PostalAddressPartType(
				"DIRECTION", "DIR", "direction");
		public static readonly PostalAddressPartType STREET_NAME = new PostalAddressPartType(
				"STREET_NAME", "STR", "streetName");
		public static readonly PostalAddressPartType STREET_NAME_BASE = new PostalAddressPartType(
				"STREET_NAME_BASE", "STB", "streetNameBase");
		public static readonly PostalAddressPartType STREET_NAME_TYPE = new PostalAddressPartType(
				"STREET_NAME_TYPE", "STTYP", "streetNameType");
		public static readonly PostalAddressPartType ADDITIONAL_LOCATOR = new PostalAddressPartType(
				"ADDITIONAL_LOCATOR", "ADL", "additionalLocator");
		public static readonly PostalAddressPartType UNIT_ID = new PostalAddressPartType(
				"UNIT_ID", "UNID", "unitID");
		public static readonly PostalAddressPartType UNIT_TYPE = new PostalAddressPartType(
				"UNIT_TYPE", "UNIT", "unitType");
		public static readonly PostalAddressPartType CARE_OF = new PostalAddressPartType(
				"CARE_OF", "CAR", "careOf");
		public static readonly PostalAddressPartType CENSUS_TRACT = new PostalAddressPartType(
				"CENSUS_TRACT", "CEN", "censusTract");
		public static readonly PostalAddressPartType DELIVERY_ADDRESS_LINE = new PostalAddressPartType(
				"DELIVERY_ADDRESS_LINE", "DAL", "deliveryAddressLine");
		public static readonly PostalAddressPartType DELIVERY_INSTALLATION_TYPE = new PostalAddressPartType(
				"DELIVERY_INSTALLATION_TYPE", "DINST", "deliveryInstallationType");
		public static readonly PostalAddressPartType DELIVERY_INSTALLATION_AREA = new PostalAddressPartType(
				"DELIVERY_INSTALLATION_AREA", "DINSTA", "deliveryInstallationArea");
		public static readonly PostalAddressPartType DELIVERY_INSTALLATION_QUALIFIER = new PostalAddressPartType(
				"DELIVERY_INSTALLATION_QUALIFIER", "DINSTQ",
				"deliveryInstallationQualifier");
		public static readonly PostalAddressPartType DELIVERY_MODE = new PostalAddressPartType(
				"DELIVERY_MODE", "DMOD", "deliveryMode");
		public static readonly PostalAddressPartType DELIVERY_MODE_IDENTIFIER = new PostalAddressPartType(
				"DELIVERY_MODE_IDENTIFIER", "DMODID", "deliveryModeIdentifier");
		public static readonly PostalAddressPartType BUILDING_NUMBER_SUFFIX = new PostalAddressPartType(
				"BUILDING_NUMBER_SUFFIX", "BNS", "buildingNumberSuffix");
		public static readonly PostalAddressPartType POST_BOX = new PostalAddressPartType(
				"POST_BOX", "POB", "postBox");
		public static readonly PostalAddressPartType PRECINCT = new PostalAddressPartType(
				"PRECINCT", "PRE", "precinct");
		public static readonly PostalAddressPartType INTERSECTION = new PostalAddressPartType(
				"INTERSECTION", "INT", "intersection");
	
		private readonly String value_ren;
		private readonly String codeValue;
	
		private PostalAddressPartType(String name, String codeValue_0, String value_ren) : base(name) {
			this.codeValue = codeValue_0;
			this.value_ren = value_ren;
		}

        static PostalAddressPartType() { }
	
		/// <summary>
		/// This is the label that appears as the element name when the address is 
		/// rendered into XML.
		/// </summary>
		///
		/// <returns>the enum value</returns>
		public virtual String Value {
		/// <summary>
		/// This is the label that appears as the element name when the address is 
		/// rendered into XML.
		/// </summary>
		///
		/// <returns>the enum value</returns>
		  get {
				return this.value_ren;
			}
		}
		
	
		/// <summary>
		/// Returns the c system for the address part type enum.
		/// </summary>
		///
		/// <returns>the c system for the address part type enum</returns>
		public virtual String CodeSystem {
		/// <summary>
		/// Returns the c system for the address part type enum.
		/// </summary>
		///
		/// <returns>the c system for the address part type enum</returns>
		  get {
				return Ca.Infoway.Messagebuilder.Codesystem.CodeSystem.VOCABULARY_ADDRESS_PART_TYPE.Root;
			}
		}
		
	
		/// <summary>
		/// Returns the c value for the address part type enum.
		/// </summary>
		///
		/// <returns>the c value for the address part type enum</returns>
		public virtual String CodeValue {
		/// <summary>
		/// Returns the c value for the address part type enum.
		/// </summary>
		///
		/// <returns>the c value for the address part type enum</returns>
		  get {
				return this.codeValue;
			}
		}
		
	}
}
