/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-09-21 11:11:24 -0400 (Wed, 21 Sep 2011) $
 * Revision:      $LastChangedRevision: 3001 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype.Lang {
	
	using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Domainvalue;
	using System;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	///   datatype for AD Hl7 datatype. 
	/// http://www.hl7.org/v3ballot/html/infrastructure/itsxml/datatypes-its-xml.htm#dtimpl-AD
	/// </summary>
	///
	public class PostalAddress {
	
		public PostalAddress() {
			this.uses = new HashSet<x_BasicPostalAddressUse>();
			this.parts = Ca.Infoway.Messagebuilder.CollUtils.SynchronizedList(new List<PostalAddressPart>());
		}

        private ICollection<x_BasicPostalAddressUse> uses;
		private readonly IList<PostalAddressPart> parts;
	
		/// <summary>
		/// Replaces the postal address' set of uses.
		/// </summary>
		///
		/// <param name="uses_0">set of postal address uses</param>
        public ICollection<x_BasicPostalAddressUse> Uses
        {
		/// <summary>
		/// Obtains the postal address' set of uses.
		/// </summary>
		///
		/// <returns>set of postal address uses</returns>
		  get {
				return this.uses;
			}
		/// <summary>
		/// Replaces the postal address' set of uses.
		/// </summary>
		///
		/// <param name="uses_0">set of postal address uses</param>
		  set {
				this.uses = value;
			}
		}
		
	
		/// <summary>
		/// Adds a postal address use.
		/// </summary>
		///
		/// <param name="use">a postal address use</param>
        public void AddUse(x_BasicPostalAddressUse use) {
			ILOG.J2CsMapping.Collections.Generics.Collections.Add(this.uses,use);
		}
	
		/// <summary>
		/// Obtains the list of postal address parts for this postal address.
		/// </summary>
		///
		/// <returns>list of postal address parts</returns>
		public IList<PostalAddressPart> Parts {
		/// <summary>
		/// Obtains the list of postal address parts for this postal address.
		/// </summary>
		///
		/// <returns>list of postal address parts</returns>
		  get {
				return this.parts;
			}
		}
		
	
		/// <summary>
		/// Add a part to this postal address.
		/// </summary>
		///
		/// <param name="postalAddressPart">the part to add</param>
		public void AddPostalAddressPart(PostalAddressPart postalAddressPart) {
			ILOG.J2CsMapping.Collections.Generics.Collections.Add(this.parts,postalAddressPart);
		}
	}
}
