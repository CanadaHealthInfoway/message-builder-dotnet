/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-09-21 11:11:24 -0400 (Wed, 21 Sep 2011) $
 * Revision:      $LastChangedRevision: 3001 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype.Lang.Util {
	
	using Ca.Infoway.Messagebuilder;
	using Ca.Infoway.Messagebuilder.Datatype.Lang;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// A utility class for constructing a PersonName. Mainly used for tests, examples, and builders.
	/// </summary>
	///
	public class PersonNameUtil {
	
		/// <summary>
		/// Builds a Person name from the given first and last names, which can be null.
		/// </summary>
		///
		/// <param name="firstName">the first name as a string (can be null)</param>
		/// <param name="lastName">the last name as a string (can be null)</param>
		/// <returns>the PersonName constructed from the given first and last name</returns>
		public static PersonName CreateFirstNameLastName(String firstName,
				String lastName) {
			PersonName name = new PersonName();
			if (Ca.Infoway.Messagebuilder.StringUtils.IsNotBlank(firstName)) {
				name.AddNamePart(new EntityNamePart(firstName,
						Ca.Infoway.Messagebuilder.Datatype.Lang.PersonNamePartType.GIVEN));
			}
			if (Ca.Infoway.Messagebuilder.StringUtils.IsNotBlank(lastName)) {
				name.AddNamePart(new EntityNamePart(lastName,
						Ca.Infoway.Messagebuilder.Datatype.Lang.PersonNamePartType.FAMILY));
			}
			return name;
		}
	}
}
