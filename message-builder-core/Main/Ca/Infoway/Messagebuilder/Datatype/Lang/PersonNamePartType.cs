/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-17 11:48:36 -0400 (Tue, 17 May 2011) $
 * Revision:      $LastChangedRevision: 2666 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype.Lang {
	
	using Ca.Infoway.Messagebuilder.Lang;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// Enum for PersonName part types.
	/// </summary>
	///
	[Serializable]
	public class PersonNamePartType : EnumPattern, NamePartType {
	
		private const long serialVersionUID = 8255492551088946001L;
	
		public static readonly PersonNamePartType DELIMITER = new PersonNamePartType(
				"DELIMITER", "delimiter");
        public static readonly PersonNamePartType PREFIX = new PersonNamePartType(
				"PREFIX", "prefix");
        public static readonly PersonNamePartType SUFFIX = new PersonNamePartType(
				"SUFFIX", "suffix");
        public static readonly PersonNamePartType FAMILY = new PersonNamePartType(
				"FAMILY", "family");
        public static readonly PersonNamePartType GIVEN = new PersonNamePartType(
				"GIVEN", "given");
	
		private readonly String value_ren;
	
        private PersonNamePartType(String name, String value_ren)  : base(name)
        {
            this.value_ren = value_ren;
        }

        static PersonNamePartType() { }

	
		/// <summary>
		/// Returns the enum value.
		/// </summary>
		///
		/// <returns>the enum value</returns>
		public virtual String Value {
		/// <summary>
		/// Returns the enum value.
		/// </summary>
		///
		/// <returns>the enum value</returns>
		  get {
				return this.value_ren;
			}
		}
		
	}
}
