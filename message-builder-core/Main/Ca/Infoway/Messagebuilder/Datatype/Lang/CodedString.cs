/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: gng $
 * Last modified: $LastChangedDate: 2015-11-19 18:20:12 -0500 (Fri, 30 Jan 2015) $
 * Revision:      $LastChangedRevision: 9755 $
 */


/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype.Lang {
	
	using Ca.Infoway.Messagebuilder;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	///   datatype backing the Hl7 datatype SC (Coded String).
	/// </summary>
	///
	/// <param name="T"> the underlying c type</param>
	public class CodedString<T> where T : Code  {
	
		private readonly T code;
		private readonly String value_ren;
	
        // these would normally be on Code itself, but they are not used in the pan-Canadian standards and only apply to SC
        private readonly String displayName;
        private readonly String codeSystemName;
        private readonly String codeSystemVersion;
    
		/// <summary>
		/// Constructs a CodedString based on a value and a c. 
		/// </summary>
		///
		/// <param name="value">the value of the SC</param>
		/// <param name="code_0">the c for the SC</param>
        public CodedString(String value_ren, T code_0) : this(value_ren, code_0, null, null, null)
        {
		}

        /// <summary>
        /// Constructs a CodedString based on a value and a c and code system properties. 
        /// </summary>
        ///
        /// <param name="value">the value of the SC</param>
        /// <param name="code_0">the c for the SC</param>
        /// <param name="displayName">alternate display name for the SC</param>
        /// <param name="codeSystemName">name of code system for the provided code</param>
        /// <param name="codeSystemVersion">version of code system for the provided code</param>
        public CodedString(String value_ren, T code_0, String displayName_0, String codeSystemName_0, String codeSystemVersion_0)
        {
            this.value_ren = value_ren;
            this.code = code_0;
            this.displayName = displayName_0;
            this.codeSystemName = codeSystemName_0;
            this.codeSystemVersion = codeSystemVersion_0;
        }

        /// <summary>
		/// Returns the c.
		/// </summary>
		///
		/// <returns>the c</returns>
		public T Code {
		/// <summary>
		/// Returns the c.
		/// </summary>
		///
		/// <returns>the c</returns>
		  get {
				return this.code;
			}
		}
		
	
		/// <summary>
		/// Returns the value.
		/// </summary>
		///
		/// <returns>the value</returns>
		public String Value {
		/// <summary>
		/// Returns the value.
		/// </summary>
		///
		/// <returns>the value</returns>
		  get {
				return this.value_ren;
			}
		}

        /// <summary>
        /// Returns the displayName.
        /// </summary>
        ///
        /// <returns>the displayName</returns>
        public String DisplayName
        {
            /// <summary>
            /// Returns the displayName.
            /// </summary>
            ///
            /// <returns>the displayName</returns>
            get
            {
                return this.displayName;
            }
        }

        /// <summary>
        /// Returns the codeSystemName.
        /// </summary>
        ///
        /// <returns>the codeSystemName</returns>
        public String CodeSystemName
        {
            /// <summary>
            /// Returns the codeSystemName.
            /// </summary>
            ///
            /// <returns>the codeSystemName</returns>
            get
            {
                return this.codeSystemName;
            }
        }

        /// <summary>
        /// Returns the codeSystemVersion.
        /// </summary>
        ///
        /// <returns>the codeSystemVersion</returns>
        public String CodeSystemVersion
        {
            /// <summary>
            /// Returns the codeSystemVersion.
            /// </summary>
            ///
            /// <returns>the codeSystemVersion</returns>
            get
            {
                return this.codeSystemVersion;
            }
        }

        public override int GetHashCode()
        {
            return new HashCodeBuilder()
		            .Append(this.code)
		            .Append(this.value_ren)
                    .Append(this.displayName)
                    .Append(this.codeSystemName)
                    .Append(this.codeSystemVersion)
                    .ToHashCode();
        }

        public override bool Equals(object obj)
        {
            if (obj == null) {
                return false;
            }
            else if (obj.GetType() != GetType())
            {
                return false;
            } else {
                return Equals((CodedString<T>) obj);
            }
        }
    
        private bool Equals(CodedString<T> that)
        {
            return new EqualsBuilder()
                    .Append(this.code, that.code)
                    .Append(this.value_ren, that.value_ren)
                    .Append(this.displayName, that.displayName)
                    .Append(this.codeSystemName, that.codeSystemName)
                    .Append(this.codeSystemVersion, that.codeSystemVersion)
                    .IsEquals();
        }
	
	}
}
