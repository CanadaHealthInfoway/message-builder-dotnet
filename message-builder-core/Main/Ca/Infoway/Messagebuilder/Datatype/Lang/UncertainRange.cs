/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-09-21 11:11:24 -0400 (Wed, 21 Sep 2011) $
 * Revision:      $LastChangedRevision: 3001 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype.Lang {
	
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// Uncertain Range.
	/// This   data type is used when a continuous range needs to be expressed. 
	/// For URG&lt;TS.DATE&gt; This data type is used when an occurrence is tied to a specific date, 
	/// but the actual date is not known, merely the range of dates within which the date falls. 
	/// This differs from IVL&lt;TS.DATE&gt; in that it refers to a single occurrence rather than a period 
	/// covering multiple days.
	/// For URG&lt;PQ.x&gt;: This is used to express a single quantity whose specific value is not known, but 
	/// whose upper and lower bounds are known. The URG data type already places implicit constraints on 
	/// probability. Outside the range, probability is 0, within the range, probability is unknown. PQ.x 
	/// implies any of the PQ.x data types in the specification (e.g. PQ.LAB, PQ.DISTANCE), not the PQ data type by itself.                             
	/// </summary>
	///
	/// <param name="T"> the underlying urg's   datatype (eg. Date)</param>
	public class UncertainRange<T> : Interval<T> {
	
		/// <summary>
		/// Constructs an uncertain range.
		/// </summary>
		///
		/// <param name="low">lower bound</param>
		/// <param name="high">upper bound</param>
		/// <param name="centre">middle bound</param>
		/// <param name="width">size of width</param>
		/// <param name="representation">the type of range</param>
		internal UncertainRange(T low, T high, T centre, Diff<T> width,
				Representation representation) : base(low, high, centre, width, representation) {
		}
	
		/// <summary>
		/// Constructs an uncertain range (low/high).
		/// </summary>
		///
		/// <param name="TS"> the type of the bounds</param>
		/// <param name="low">lower bound</param>
		/// <param name="high">upper bound</param>
		/// <returns>the constructed uncertain range</returns>
		public static new UncertainRange<TS> CreateLowHigh<TS>(TS low, TS high) {
			return new UncertainRange<TS>(low, high, Ca.Infoway.Messagebuilder.Datatype.Lang.GenericMath.Average(low, high),
					Ca.Infoway.Messagebuilder.Datatype.Lang.GenericMath.Diff<TS>(low, high), Ca.Infoway.Messagebuilder.Datatype.Lang.Representation.LOW_HIGH);
		}
	
		/// <summary>
		/// Constructs an uncertain range (low/width).
		/// </summary>
		///
		/// <param name="TS"> the type of the bounds</param>
		/// <param name="low">lower bound</param>
		/// <param name="width">size of width</param>
		/// <returns>the constructed uncertain range</returns>
		public static new UncertainRange<TS> CreateLowWidth<TS>(TS low, Diff<TS> width) {
			TS high = Ca.Infoway.Messagebuilder.Datatype.Lang.GenericMath.Add(low, width);
			return new UncertainRange<TS>(low, high, Ca.Infoway.Messagebuilder.Datatype.Lang.GenericMath.Average(low, high),
					width, Ca.Infoway.Messagebuilder.Datatype.Lang.Representation.LOW_WIDTH);
		}
	
		/// <summary>
		/// Constructs an uncertain range (width/high).
		/// </summary>
		///
		/// <param name="TS"> the type of the bounds</param>
		/// <param name="width">size of width</param>
		/// <param name="high">higher bound</param>
		/// <returns>the constructed uncertain range</returns>
		public static new UncertainRange<TS> CreateWidthHigh<TS>(Diff<TS> width, TS high) {
			TS low = Ca.Infoway.Messagebuilder.Datatype.Lang.GenericMath.Diff<TS>(width.Value, high).Value;
			return new UncertainRange<TS>(low, high, Ca.Infoway.Messagebuilder.Datatype.Lang.GenericMath.Average(low, high),
					width, Ca.Infoway.Messagebuilder.Datatype.Lang.Representation.WIDTH_HIGH);
		}
	
		/// <summary>
		/// Constructs an uncertain range (centre/width).
		/// </summary>
		///
		/// <param name="TS"> the type of the bounds</param>
		/// <param name="centre">centre bound</param>
		/// <param name="width">size of width</param>
		/// <returns>the constructed uncertain range</returns>
		public static new UncertainRange<TS> CreateCentreWidth<TS>(TS centre,
				Diff<TS> width) {
			TS half = Ca.Infoway.Messagebuilder.Datatype.Lang.GenericMath.Half(width.Value);
			TS low = Ca.Infoway.Messagebuilder.Datatype.Lang.GenericMath.Diff<TS>(half, centre).Value;
			TS high = Ca.Infoway.Messagebuilder.Datatype.Lang.GenericMath.Add(low, width);
			return new UncertainRange<TS>(low, high, centre, width,
					Ca.Infoway.Messagebuilder.Datatype.Lang.Representation.CENTRE_WIDTH);
		}
	
		/// <summary>
		/// Constructs an uncertain range (centre/high).
		/// </summary>
		///
		/// <param name="TS"> the type of the bounds</param>
		/// <param name="center">center bound</param>
		/// <param name="high">higher bound</param>
		/// <returns>the constructed uncertain range</returns>
		public static UncertainRange<TS> CreateCentreHigh<TS>(TS center, TS high) {
			TS half = Ca.Infoway.Messagebuilder.Datatype.Lang.GenericMath.Diff<TS>(center, high).Value;
			TS low = Ca.Infoway.Messagebuilder.Datatype.Lang.GenericMath.Diff<TS>(half, center).Value;
			return new UncertainRange<TS>(low, high, center, Ca.Infoway.Messagebuilder.Datatype.Lang.GenericMath.Diff<TS>(low,
					high), Ca.Infoway.Messagebuilder.Datatype.Lang.Representation.CENTRE_HIGH);
		}
	
		/// <summary>
		/// Constructs an uncertain range (low).
		/// </summary>
		///
		/// <param name="TS"> the type of the bounds</param>
		/// <param name="low">lower bound</param>
		/// <returns>the constructed uncertain range</returns>
        public static new UncertainRange<TS> CreateLow<TS>(TS low)
        {
			return new UncertainRange<TS>(low, default(TS), default(TS), null, Ca.Infoway.Messagebuilder.Datatype.Lang.Representation.LOW);
		}
	
		/// <summary>
		/// Constructs an uncertain range (low/centre).
		/// </summary>
		///
		/// <param name="TS"> the type of the bounds</param>
		/// <param name="low">lower bound</param>
		/// <param name="center">center bound</param>
		/// <returns>the constructed uncertain range</returns>
		public static UncertainRange<TS> CreateLowCenter<TS>(TS low, TS center) {
            return new UncertainRange<TS>(low, default(TS), center, null,
					Ca.Infoway.Messagebuilder.Datatype.Lang.Representation.LOW_CENTER);
		}
	
		/// <summary>
		/// Constructs an uncertain range (width).
		/// </summary>
		///
		/// <param name="TS"> the type of the bounds</param>
		/// <param name="diff">the width diff</param>
		/// <returns>the constructed uncertain range</returns>
        public static new UncertainRange<TS> CreateWidth<TS>(Diff<TS> diff)
        {
            return new UncertainRange<TS>(default(TS), default(TS), default(TS), diff,
					Ca.Infoway.Messagebuilder.Datatype.Lang.Representation.WIDTH);
		}
	
		/// <summary>
		/// Constructs an uncertain range (high).
		/// </summary>
		///
		/// <param name="TS"> the type of the bounds</param>
		/// <param name="high">higher bound</param>
		/// <returns>the constructed uncertain range</returns>
        public static new UncertainRange<TS> CreateHigh<TS>(TS high)
        {
            return new UncertainRange<TS>(default(TS), high, default(TS), null,
					Ca.Infoway.Messagebuilder.Datatype.Lang.Representation.HIGH);
		}
	
		/// <summary>
		/// Constructs an uncertain range (centre).
		/// </summary>
		///
		/// <param name="TS"> the type of the bounds</param>
		/// <param name="centre">centre bound</param>
		/// <returns>the constructed uncertain range</returns>
        public static new UncertainRange<TS> CreateCentre<TS>(TS centre)
        {
            return new UncertainRange<TS>(default(TS), default(TS), centre, null,
					Ca.Infoway.Messagebuilder.Datatype.Lang.Representation.CENTRE);
		}
	
	}
}
