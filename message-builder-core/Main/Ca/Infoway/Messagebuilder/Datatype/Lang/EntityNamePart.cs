/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-09-21 11:11:24 -0400 (Wed, 21 Sep 2011) $
 * Revision:      $LastChangedRevision: 3001 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype.Lang {

    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Datatype.Lang.Util;
    using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// Class to represent an entity name part, containing a name part type and a value. 
	/// </summary>
	///
	public class EntityNamePart {
	
		private readonly NamePartType type;
		private readonly String value_ren;
        private readonly EntityNamePartQualifier qualifier;
        private readonly NullFlavor nullFlavor;
	
		/// <summary>
		/// Constructs an EntityNamePart using the supplied parameters.
		/// </summary>
		///
		/// <param name="value">the name part value</param>
		/// <param name="type_0">the name part type</param>
		public EntityNamePart(String value_ren, NamePartType type_0, EntityNamePartQualifier qualifier) :
            this(value_ren, type_0, qualifier, null) {
		}

        public EntityNamePart(NamePartType type_0, NullFlavor nullFlavor) :
            this(null, type_0, null, nullFlavor) {
        }

        /// <summary>
        /// Constructs an EntityNamePart using the supplied parameters.
        /// This constructor may not make sense to have as public. May become private in a later release.
        /// </summary>
        /// <param name="value_ren"></param>
        /// <param name="type_0"></param>
        /// <param name="qualifier"></param>
        /// <param name="nullFlavor"></param>
        public EntityNamePart(String value_ren, NamePartType type_0, EntityNamePartQualifier qualifier, NullFlavor nullFlavor) {
            this.value_ren = value_ren;
            this.type = type_0;
            this.qualifier = qualifier;
            this.nullFlavor = nullFlavor;
        }

	    /// <summary>
        /// Constructs an EntityNamePart using the supplied parameters.
	    /// </summary>
        /// <param name="value_ren">the name part value</param>
        /// <param name="type_0">the name part type</param>
		public EntityNamePart(String value_ren, NamePartType type_0) : 
            this(value_ren, type_0, null) {
		}
		
		/// <summary>
		/// Constructs an EntityNamePart using only a value.
		/// </summary>
		///
		/// <param name="value">the name part value</param>
		public EntityNamePart(String value_ren) : this(value_ren, null) {
		}

        static EntityNamePart() { }
	
		/// <summary>
		/// Returns the name part type.
		/// </summary>
		///
		/// <returns>the name part type</returns>
		public NamePartType Type {
		/// <summary>
		/// Returns the name part type.
		/// </summary>
		///
		/// <returns>the name part type</returns>
		  get {
				return this.type;
			}
		}
		
	
		/// <summary>
		/// Returns the name part value.
		/// </summary>
		///
		/// <returns>the name part value</returns>
		public String Value {
		/// <summary>
		/// Returns the name part value.
		/// </summary>
		///
		/// <returns>the name part value</returns>
		  get {
				return this.value_ren;
			}
		}
		
		public EntityNamePartQualifier Qualifier {
			get {
				return this.qualifier;
			}
		}

        public NullFlavor NullFlavor {
            get {
                return this.nullFlavor;
            }
        }
		
        public override int GetHashCode()
        {
            return new HashCodeBuilder()
			        .Append(this.type)
			        .Append(this.value_ren)
			        .Append(this.qualifier)
                    .Append(this.nullFlavor)
                    .ToHashCode();
        }

        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            } else if (obj.GetType() != GetType()) {
                return false;
            } else {
                return Equals((EntityNamePart) obj);
            }
        }

        private bool Equals(EntityNamePart that)
        {
            return new EqualsBuilder()
                    .Append(this.type, that.type)
                    .Append(this.value_ren, that.value_ren)
                    .Append(this.qualifier, that.qualifier)
                    .Append(this.nullFlavor, that.nullFlavor)
                    .IsEquals();
        }

    }
}
