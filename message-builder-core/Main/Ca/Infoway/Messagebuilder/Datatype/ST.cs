/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: gng $
 * Last modified: $LastChangedDate: 2015-11-19 18:20:12 -0500 (Fri, 30 Jan 2015) $
 * Revision:      $LastChangedRevision: 9755 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype {
	
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// HL7 datatype ST (and ST.LANG). Backed by a   String.
	/// The character string data type stands for text data, primarily intended for machine processing 
	/// (e.g., sorting, querying, indexing, etc.) Used for names, symbols, and formal expressions.
	/// ST is a restricted ED, whose ED.mediaType property is fixed to text/plain, and whose data must be 
	/// inlined and not compressed. Thus, the properties compression, reference, integrity check, algorithm, 
	/// and thumbnail are not applicable. The character string data type is used when the appearance of text 
	/// does not bear meaning, which is true for formalized text and all kinds of names.
	/// ST data type interprets the encapsulated data as character data (as opposed to bits), depending on the 
	/// charset property of the encapsulated data type. 
	/// </summary>
	///
	public interface ST : ED<String> {
	
		/// <summary>
		/// Returns the language.
		/// </summary>
		///
		/// <returns>the language</returns>
        String Language
        {
            /// <summary>
            /// Returns the language.
            /// </summary>
            ///
            /// <returns>the language</returns>
            get;
            set;
        }

        Boolean IsCdata
        {
            /// <summary>
            /// Returns whether the text should be considered CDATA.
            /// </summary>
            ///
            /// <returns>whether the text should be considered CDATA</returns>
            get;
            set;
        }
		
	
	}
}
