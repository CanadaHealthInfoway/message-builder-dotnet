/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: gng $
 * Last modified: $LastChangedDate: 2015-11-19 18:20:12 -0500 (Fri, 30 Jan 2015) $
 * Revision:      $LastChangedRevision: 9755 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Datatype {
	
	using Ca.Infoway.Messagebuilder;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// HL7 datatype CD. Backed by a Code.
	/// A CD represents any kind of concept usually by giving a c defined in a
	/// c system. A CD can contain the original text or phrase that served as the
	/// basis of the coding and one or more translations into different coding
	/// systems. A CD can also contain qualifiers to describe, e.g., the concept of a
	/// "left foot" as a postcoordinated term built from the primary c "FOOT" and
	/// the qualifier "LEFT". In cases of an exceptional value, the CD need not
	/// contain a c but only the original text describing that concept.
	/// CD is mostly used in one of its restricted or "profiled" forms, CS, CE, CV.
	/// Use of the full concept descriptor data type is not common. It requires a
	/// conscious decision and documented rationale. In all other cases, one of the
	/// CD restrictions shall be used.
	/// All CD restrictions constrain certain properties. Properties may be
	/// constrained to the extent that only one value may be allowed for that
	/// property, in which case mentioning the property becomes redundant.
	/// Constraining a property to one value is referred to as suppressing that
	/// property. Although, conceptually a suppressed property is still semantically
	/// applicable, it is safe for an HL7 interface to assume the implicit default
	/// value without testing.
	/// </summary>
	///
	/// <param name="V"> the underlying c type.</param>
	public interface CD : ANY<Code> {
	
		/// <summary>
		/// Sets the display name.
		/// </summary>
		///
		/// <param name="displayName">the display name</param>
		String DisplayName {
		/// <summary>
		/// Returns the display name.
		/// </summary>
		///
		/// <returns>the display name</returns>
		  get;
		/// <summary>
		/// Sets the display name.
		/// </summary>
		///
		/// <param name="displayName">the display name</param>
		  set;
		}
		
	
		/// <summary>
		/// Returns the translations for this CD.
		/// </summary>
		///
		/// <returns>the translations for this CD</returns>
		IList<CD> Translations {
		/// <summary>
		/// Returns the translations for this CD.
		/// </summary>
		///
		/// <returns>the translations for this CD</returns>
		  get;
		}
		
	
		/// <summary>
		/// Sets the original text.
		/// </summary>
		///
		/// <param name="originalText">the original text</param>
		String OriginalText {
		/// <summary>
		/// Returns the original text.
		/// </summary>
		///
		/// <returns>the original text</returns>
		  get;
		/// <summary>
		/// Sets the original text.
		/// </summary>
		///
		/// <param name="originalText">the original text</param>
		  set;
		}
		
	
	}
}
