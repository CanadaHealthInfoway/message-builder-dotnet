/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: gng $
 * Last modified: $LastChangedDate: 2015-11-19 18:20:12 -0500 (Fri, 30 Jan 2015) $
 * Revision:      $LastChangedRevision: 9755 $
 */


/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.Version {
	
	using Ca.Infoway.Messagebuilder;
	using ILOG.J2CsMapping.IO;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	public class Configuration {
	
		public Configuration() {
			this.date = new PlatformDate();
			this.name = "Message Builder Tool";
			this.version = "1.x";
		}
	
		private static Configuration instance;
	
		private PlatformDate date;
		private String name;
		private String version;
	
		
		public static Configuration Instance {
		  get {
				if (instance == null) {
					InitializeInstance();
				}
				return instance;
			}
		}
		
	
		[MethodImpl(MethodImplOptions.Synchronized)]
		private static void InitializeInstance() {
			try {
				Configuration configuration = new Configuration();
                /*
				Manifest manifest = Ca.Infoway.Messagebuilder.J5goodies.ManifestReader.Read(typeof(Configuration));
				Attributes attributes = manifest.GetMainAttributes();
				configuration.Version = attributes.GetValue("Implementation-Version");
				configuration.Date = attributes.GetValue("Implementation-Build-Date");
                */
				instance = configuration;
			} catch (IOException e) {
			}
		}
	
		
        /*
		private String Date {
		  set {
				try {
					Date = ((Int64?)Int64.Parse(value,System.Globalization.NumberStyles.Integer)).Value;
				} catch (FormatException e) {
				}
			}
		}
		
	
		private void setDate(long time) {
			this.date.Time = time;
		}
	
		public Date getDate() {
			return this.date;
		}
        */

        private void setDate(String datestr) {
            try {
                this.date = DateUtils.ParseDate(datestr, new string[] { "yyyy-MM-dd" });
            }
            catch (FormatException e) {
            }
        }


        private void setDate(long time) {
            this.date.Time = time;
        }

        public PlatformDate Date {
            get { return this.date; }
        }

		public String Name {
            get { return this.name; }
		}
		
		public String Version {
            get { return this.version; }
            set { this.version = value; }
		}
	
		public String AsUserAgent() {
			return Name + "(" + System.Environment.OSVersion.ToString() + ") Version " + Version;
		}
	}
}
