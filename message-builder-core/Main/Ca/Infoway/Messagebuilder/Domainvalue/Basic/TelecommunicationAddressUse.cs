/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-17 11:48:36 -0400 (Tue, 17 May 2011) $
 * Revision:      $LastChangedRevision: 2666 $
 */

/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------

namespace Ca.Infoway.Messagebuilder.Domainvalue.Basic
{
	
	using Ca.Infoway.Messagebuilder;
	using Ca.Infoway.Messagebuilder.Lang;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// An enum for telecom address uses. Used mainly within tests. 
	/// </summary>
	///
	[Serializable]
	public class TelecommunicationAddressUse : EnumPattern, 
			Describable,
			Ca.Infoway.Messagebuilder.Domainvalue.TelecommunicationAddressUse {
		private const long serialVersionUID = -3649151061999838824L;
		public static readonly TelecommunicationAddressUse HOME = new TelecommunicationAddressUse(
				"HOME", "H");
		public static readonly TelecommunicationAddressUse PRIMARY_HOME = new TelecommunicationAddressUse(
				"PRIMARY_HOME", "HP");
		public static readonly TelecommunicationAddressUse VACATION_HOME = new TelecommunicationAddressUse(
				"VACATION_HOME", "HV");
		public static readonly TelecommunicationAddressUse WORKPLACE = new TelecommunicationAddressUse(
				"WORKPLACE", "WP");
		public static readonly TelecommunicationAddressUse DIRECT = new TelecommunicationAddressUse(
				"DIRECT", "DIR");
        public static readonly TelecommunicationAddressUse CONFIDENTIAL = new TelecommunicationAddressUse(
                "CONFIDENTIAL", "CONF");
        public static readonly TelecommunicationAddressUse PUBLISHED = new TelecommunicationAddressUse(
				"PUBLISHED", "PUB");
		public static readonly TelecommunicationAddressUse BAD = new TelecommunicationAddressUse(
				"BAD", "BAD");
		public static readonly TelecommunicationAddressUse TEMPORARY = new TelecommunicationAddressUse(
				"TEMPORARY", "TMP");
		public static readonly TelecommunicationAddressUse ANSWERING_MACHINE = new TelecommunicationAddressUse(
				"ANSWERING_MACHINE", "AS");
		public static readonly TelecommunicationAddressUse EMERGENCY_CONTACT = new TelecommunicationAddressUse(
				"EMERGENCY_CONTACT", "EC");
		public static readonly TelecommunicationAddressUse MOBILE = new TelecommunicationAddressUse(
				"MOBILE", "MC");
		public static readonly TelecommunicationAddressUse PAGER = new TelecommunicationAddressUse(
				"PAGER", "PG");
	
		private readonly String codeValue;
	
		private TelecommunicationAddressUse(String name, String codeValue_0) : base(name) {
			this.codeValue = codeValue_0;
		}

        static TelecommunicationAddressUse() { }
	
		/// <summary>
		/// Returns the c system for this telecom address use.
		/// </summary>
		///
		/// <returns>the c system for this telecom address use</returns>
		public virtual String CodeSystem {
		/// <summary>
		/// Returns the c system for this telecom address use.
		/// </summary>
		///
		/// <returns>the c system for this telecom address use</returns>
		  get {
				return Ca.Infoway.Messagebuilder.Codesystem.CodeSystem.VOCABULARY_TELECOMMUNICATION_ADDRESS_USE.Root;
			}
		}
		
	
		/// <summary>
		/// Returns the c for this telecome address use.
		/// </summary>
		///
		/// <returns>the c for this telecome address use.</returns>
		public virtual String CodeValue {
		/// <summary>
		/// Returns the c for this telecome address use.
		/// </summary>
		///
		/// <returns>the c for this telecome address use.</returns>
		  get {
				return this.codeValue;
			}
		}
		
	
		/// <summary>
		/// Returns a description of this telecom address use.
		/// </summary>
		///
		/// <returns>a description of this telecom address use.</returns>
		public virtual String Description {
		/// <summary>
		/// Returns a description of this telecom address use.
		/// </summary>
		///
		/// <returns>a description of this telecom address use.</returns>
		  get {
				return Ca.Infoway.Messagebuilder.Domainvalue.Util.DescribableUtil.GetDefaultDescription(Name);
			}
		}
		
	}
}
