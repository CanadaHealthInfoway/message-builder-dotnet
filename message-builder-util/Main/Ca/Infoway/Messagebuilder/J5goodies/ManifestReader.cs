/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: gng $
 * Last modified: $LastChangedDate: 2015-11-19 18:20:12 -0500 (Fri, 30 Jan 2015) $
 * Revision:      $LastChangedRevision: 9755 $
 */


/// ---------------------------------------------------------------------------------------------------
///  This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
///  Version 1.0.0                                                                                      
/// ---------------------------------------------------------------------------------------------------
 
namespace Ca.Infoway.Messagebuilder.J5goodies {
	
	using Ca.Infoway.Messagebuilder;
	using ILOG.J2CsMapping.IO;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	public class ManifestReader {
	
        /*
		public static Manifest Read(Type mainClass) {
			String path = mainClass.GetResource(ToResourceName(mainClass))
					.ToString();
			String manifestPath = ExtractRoot(path, mainClass)
					+ "/META-INF/MANIFEST.MF";
			Stream stream = ILOG.Rules.Util.Net.NetHelper.OpenStream(new Uri(manifestPath));
			try {
				return new Manifest(stream);
			} finally {
				Org.Apache.Commons.Io.IOUtils.CloseQuietly(stream);
			}
		}
	
		static internal String ExtractRoot(String path, Type mainClass) {
			if (path.Contains("!")) {
				return path.Substring(0,(path.LastIndexOf("!") + 1)-(0));
			} else if (path.Contains("/WEB-INF")) {
				return Ca.Infoway.Messagebuilder.StringUtils.SubstringBefore(path, "/WEB-INF");
			} else {
				return Ca.Infoway.Messagebuilder.StringUtils.SubstringBefore(path, mainClass.FullName.Replace('.', '/'));
			}
		}
	
		private static String ToResourceName(Type mainClass) {
			return "/" + mainClass.FullName.Replace('.', '/') + ".class";
		}
        */
	}
}
