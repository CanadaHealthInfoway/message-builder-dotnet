/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:03:20 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 3918 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt260030ca {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt220110ca;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Active Medication</summary>
     * 
     * <remarks><p>Indicates an active medication (prescription or 
     * non-prescription medication) that is recorded in the 
     * patient's record and which contributed to triggering the 
     * issue.</p> <p>Allows providers to identify the offending 
     * drugs when determining their management approach.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"COCT_MT260030CA.SubstanceAdministration"})]
    public class ActiveMedication : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.ICausalActs {

        private CS otherMedicationIndicator;
        private II activeMedicationRecordNumber;
        private CD administrationType;
        private CS activeMedicationStatus;
        private IVL<TS, Interval<PlatformDate>> activeMedicationTimeRange;
        private SET<CV, Code> activeMedicationMaskingIndicator;
        private PQ activeMedicationDoseQuantity;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt220110ca.DrugProduct consumableMedication;

        public ActiveMedication() {
            this.otherMedicationIndicator = new CSImpl();
            this.activeMedicationRecordNumber = new IIImpl();
            this.administrationType = new CDImpl();
            this.activeMedicationStatus = new CSImpl();
            this.activeMedicationTimeRange = new IVLImpl<TS, Interval<PlatformDate>>();
            this.activeMedicationMaskingIndicator = new SETImpl<CV, Code>(typeof(CVImpl));
            this.activeMedicationDoseQuantity = new PQImpl();
        }
        /**
         * <summary>Other Medication Indicator</summary>
         * 
         * <remarks><p>If the attribute is 'RQO', represents a 
         * prescription or dispense record. Otherwise if 'EVN', it 
         * represents an 'Other Medication' record.</p> <p>Knowing 
         * whether a drug is prescribed or not can influence actions 
         * taken to mitigate an issue. The element is therefore 
         * mandatory</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"moodCode"})]
        public x_ActMoodRequestEvent OtherMedicationIndicator {
            get { return (x_ActMoodRequestEvent) this.otherMedicationIndicator.Value; }
            set { this.otherMedicationIndicator.Value = value; }
        }

        /**
         * <summary>A:Active Medication Record Number</summary>
         * 
         * <remarks><p>Unique identifier of the prescription or other 
         * medication drug record that triggered the issue.</p> 
         * <p>DDI/DuplicateTherapy.InteractingPrescriptionNumber</p><p>InteractingPrescription.PrescriptionExternalKey</p><p>InteractingPrescription.PrescriptionNumber</p><p>DDI/Dosage/Duplicate 
         * Therapy.SourceNumber (All senders must uniquely identify 
         * prescriptions on request)</p> 
         * <p>DDI/DuplicateTherapy.InteractingPrescriptionNumber</p><p>InteractingPrescription.PrescriptionExternalKey</p><p>InteractingPrescription.PrescriptionNumber</p><p>DDI/Dosage/Duplicate 
         * Therapy.SourceNumber (All senders must uniquely identify 
         * prescriptions on request)</p> 
         * <p>DDI/DuplicateTherapy.InteractingPrescriptionNumber</p><p>InteractingPrescription.PrescriptionExternalKey</p><p>InteractingPrescription.PrescriptionNumber</p><p>DDI/Dosage/Duplicate 
         * Therapy.SourceNumber (All senders must uniquely identify 
         * prescriptions on request)</p> 
         * <p>DDI/DuplicateTherapy.InteractingPrescriptionNumber</p><p>InteractingPrescription.PrescriptionExternalKey</p><p>InteractingPrescription.PrescriptionNumber</p><p>DDI/Dosage/Duplicate 
         * Therapy.SourceNumber (All senders must uniquely identify 
         * prescriptions on request)</p> <p>Allows provider to 
         * drill-down and retrieve additional information about the 
         * implicated drug therapy to either modify the therapy or to 
         * learn more information in determining their management 
         * approach for the issue.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier ActiveMedicationRecordNumber {
            get { return this.activeMedicationRecordNumber.Value; }
            set { this.activeMedicationRecordNumber.Value = value; }
        }

        /**
         * <summary>Administration Type</summary>
         * 
         * <remarks><p>Identifies whether the interaction is with a 
         * drug or a vaccine. For SNOMED, may also indicate the 
         * specific drug or vaccine at issue.</p> <p>Needed to 
         * determine what to do about the issue. Because the medication 
         * can be masked, this element is only marked as 
         * 'populated'.</p><p>The element allows a full 'CD' type to 
         * support SNOMED implementations.</p> <p>Needed to determine 
         * what to do about the issue. Because the medication can be 
         * masked, this element is only marked as 
         * 'populated'.</p><p>The element allows a full 'CD' type to 
         * support SNOMED implementations.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ActSubstanceAdministrationCode AdministrationType {
            get { return (ActSubstanceAdministrationCode) this.administrationType.Value; }
            set { this.administrationType.Value = value; }
        }

        /**
         * <summary>B:Active Medication Status</summary>
         * 
         * <remarks><p>Indicates the status of the medication record at 
         * the time of the issue.</p> <p>ZPB3.8 (aborted = 
         * discontinued; nullified = reversed/system reversed; 
         * active=filled/not-filled)</p> <p>Used to determine the 
         * relevance of the issue and the need to manage it. For 
         * example, if the medication is on hold, it may be less of an 
         * issue than if it is being actively taken.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public ActStatus ActiveMedicationStatus {
            get { return (ActStatus) this.activeMedicationStatus.Value; }
            set { this.activeMedicationStatus.Value = value; }
        }

        /**
         * <summary>C:Active Medication Time-range</summary>
         * 
         * <remarks><p>The date and time during which the patient is 
         * expected to be taking the drug which triggered the 
         * issue.</p> <p>Requested Duration</p> <p>Allows the provider 
         * to evaluate 'duplicate therapy' and similar timing-based 
         * issues.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> ActiveMedicationTimeRange {
            get { return this.activeMedicationTimeRange.Value; }
            set { this.activeMedicationTimeRange.Value = value; }
        }

        /**
         * <summary>E:Active Medication Masking Indicator</summary>
         * 
         * <remarks><p>An indication of sensitivity surrounding the 
         * related drug, and thus defines the required sensitivity for 
         * the detected issue.</p> <p>Conveys the patient's wishes 
         * relating to the sensitivity of the drug 
         * information.</p><p>The attribute is optional because not all 
         * systems will support masking.</p> <p>Conveys the patient's 
         * wishes relating to the sensitivity of the drug 
         * information.</p><p>The attribute is optional because not all 
         * systems will support masking.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public ICollection<x_BasicConfidentialityKind> ActiveMedicationMaskingIndicator {
            get { return this.activeMedicationMaskingIndicator.RawSet<x_BasicConfidentialityKind>(); }
        }

        /**
         * <summary>D:Active Medication Dose Quantity</summary>
         * 
         * <remarks><p>The amount of medication administered to the 
         * patient</p> <p>Requested Dosage 
         * Level</p><p>ZPS.12</p><p>ZDU.4.4</p><p>Contraindication.dosageAmount</p> 
         * <p>Requested Dosage 
         * Level</p><p>ZPS.12</p><p>ZDU.4.4</p><p>Contraindication.dosageAmount</p> 
         * <p>Requested Dosage 
         * Level</p><p>ZPS.12</p><p>ZDU.4.4</p><p>Contraindication.dosageAmount</p> 
         * <p>Requested Dosage 
         * Level</p><p>ZPS.12</p><p>ZDU.4.4</p><p>Contraindication.dosageAmount</p> 
         * <p>Used in Low Dose/High Dose issues.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"doseQuantity"})]
        public PhysicalQuantity ActiveMedicationDoseQuantity {
            get { return this.activeMedicationDoseQuantity.Value; }
            set { this.activeMedicationDoseQuantity.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"consumable/medication"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt220110ca.DrugProduct ConsumableMedication {
            get { return this.consumableMedication; }
            set { this.consumableMedication = value; }
        }

    }

}