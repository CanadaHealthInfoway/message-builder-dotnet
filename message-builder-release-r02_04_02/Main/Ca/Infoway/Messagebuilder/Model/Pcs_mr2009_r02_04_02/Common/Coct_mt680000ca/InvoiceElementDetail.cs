/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:04:25 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 3925 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt680000ca {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged;
    using System;


    [Hl7PartTypeMappingAttribute(new string[] {"COCT_MT680000CA.AdjudicatedInvoiceElementDetail"})]
    public class InvoiceElementDetail : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt680000ca.IAdjudicatedInvoiceElementChoice {

        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.AdjudicatedResultOutcome outcomeOf;
        private CV productServiceCode;
        private PQ quantityPerUnit;
        private RTO<Money, PhysicalQuantity> pricePerUnit;
        private MO invoiceElementAmountBilled;
        private INT multiplierForTaxes;

        public InvoiceElementDetail() {
            this.productServiceCode = new CVImpl();
            this.quantityPerUnit = new PQImpl();
            this.pricePerUnit = new RTOImpl<Money, PhysicalQuantity>();
            this.invoiceElementAmountBilled = new MOImpl();
            this.multiplierForTaxes = new INTImpl();
        }
        [Hl7XmlMappingAttribute(new string[] {"outcomeOf"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.AdjudicatedResultOutcome OutcomeOf {
            get { return this.outcomeOf; }
            set { this.outcomeOf = value; }
        }

        /**
         * <summary>Product/service Code</summary>
         * 
         * <remarks><p>Domain for AdjudicatedInvoiceElementDetail.code 
         * is GenericBillableItemModifier</p> <p>Product/Service Code 
         * e.g. Office Visit ,Taxes, Markup, Dispense, including 
         * Product/Service Code Modifier e.g. northern isolation, off 
         * hours specialty, on call</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public Code ProductServiceCode {
            get { return (Code) this.productServiceCode.Value; }
            set { this.productServiceCode.Value = value; }
        }

        /**
         * <summary>Quantity per Unit</summary>
         * 
         * <remarks><p>e.g. 3 {boxes}</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"unitQuantity"})]
        public PhysicalQuantity QuantityPerUnit {
            get { return this.quantityPerUnit.Value; }
            set { this.quantityPerUnit.Value = value; }
        }

        /**
         * <summary>Price Per Unit</summary>
         * 
         * <remarks><p>e.g. $50 CAD/ 1 {box}</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"unitPriceAmt"})]
        public Ratio<Money, PhysicalQuantity> PricePerUnit {
            get { return this.pricePerUnit.Value; }
            set { this.pricePerUnit.Value = value; }
        }

        /**
         * <summary>Invoice Element Amount billed</summary>
         * 
         * <remarks><p>= unit_qty * unit_price_amt * factor_nbr * 
         * points_nbr. E.g. $150 CAD</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"netAmt"})]
        public Money InvoiceElementAmountBilled {
            get { return this.invoiceElementAmountBilled.Value; }
            set { this.invoiceElementAmountBilled.Value = value; }
        }

        /**
         * <summary>Multiplier for Taxes.</summary>
         * 
         * <remarks><p>multiplier, can be used for tax percentages such 
         * as 0.07</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"factorNumber"})]
        public int? MultiplierForTaxes {
            get { return this.multiplierForTaxes.Value; }
            set { this.multiplierForTaxes.Value = value; }
        }

    }

}