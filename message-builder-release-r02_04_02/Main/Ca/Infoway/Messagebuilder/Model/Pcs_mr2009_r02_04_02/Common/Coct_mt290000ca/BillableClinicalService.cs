/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2013-03-08 11:06:36 -0500 (Fri, 08 Mar 2013) $
 * Revision:      $LastChangedRevision: 6699 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt290000ca {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Domainvalue;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Business Name: Billable Clinical Service</summary>
     * 
     * <p>Patient classes are not referenced in the billable acts, 
     * as they are noted in the parent model (e.g. Invoice message) 
     * as the CoveredPartyAsPatient</p> <p>Service which was 
     * provided and is referenced in this encounter</p>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"COCT_MT290000CA.BillableClinicalService"})]
    public class BillableClinicalService : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca.IA_BillableActChoice {

        private II id;
        private CV code;
        private IVL<TS, Interval<PlatformDate>> effectiveTime;
        private SET<CV, Code> reasonCode;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.ManufacturedProduct> productManufacturedProduct;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareProvider secondaryPerformerHealthCareProvider;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareProvider performerHealthCareProvider;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareProvider referrerHealthCareProvider;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareProvider consultantHealthCareProvider;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.ServiceLocation locationServiceDeliveryLocation;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt290000ca.AccidentInformation> pertinentInformation1;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.PatientEncounter pertinentInformation2PatientEncounter;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.DiagnosisInformation> pertinentInformation3;

        public BillableClinicalService() {
            this.id = new IIImpl();
            this.code = new CVImpl();
            this.effectiveTime = new IVLImpl<TS, Interval<PlatformDate>>();
            this.reasonCode = new SETImpl<CV, Code>(typeof(CVImpl));
            this.productManufacturedProduct = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.ManufacturedProduct>();
            this.pertinentInformation1 = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt290000ca.AccidentInformation>();
            this.pertinentInformation3 = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.DiagnosisInformation>();
        }
        /**
         * <summary>Business Name: Service event ID</summary>
         * 
         * <remarks>Relationship: 
         * COCT_MT290000CA.BillableClinicalService.id 
         * Conformance/Cardinality: REQUIRED (0-1) <p>Can be used to 
         * uniquely identify a service event</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>Business Name: Procedure code</summary>
         * 
         * <remarks>Relationship: 
         * COCT_MT290000CA.BillableClinicalService.code 
         * Conformance/Cardinality: MANDATORY (1) <p>procedure cd, CPT 
         * cd, supply cd</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ActProcedureCode Code {
            get { return (ActProcedureCode) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>Business Name: Duration, date/time of occurrence</summary>
         * 
         * <remarks>Relationship: 
         * COCT_MT290000CA.BillableClinicalService.effectiveTime 
         * Conformance/Cardinality: MANDATORY (1) <p>Duration, 
         * date/time of occurrence</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>Business Name: Service Reason</summary>
         * 
         * <remarks>Relationship: 
         * COCT_MT290000CA.BillableClinicalService.reasonCode 
         * Conformance/Cardinality: REQUIRED (0-5) <p>(clinical reasons 
         * for service, not related or specified by a diagnosis e.g. 
         * duplicate therapy, fraudulent prescription</p> <p>clinical 
         * reasons for service, not related or specified by diagnosis. 
         * e.g. duplicate therapy, fraudulent prescription</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"reasonCode"})]
        public ICollection<ActBillableClinicalServiceReason> ReasonCode {
            get { return this.reasonCode.RawSet<ActBillableClinicalServiceReason>(); }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT290000CA.Product.manufacturedProduct</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"product/manufacturedProduct"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.ManufacturedProduct> ProductManufacturedProduct {
            get { return this.productManufacturedProduct; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT290000CA.ProviderSupervisor.healthCareProvider</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"secondaryPerformer/healthCareProvider"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareProvider SecondaryPerformerHealthCareProvider {
            get { return this.secondaryPerformerHealthCareProvider; }
            set { this.secondaryPerformerHealthCareProvider = value; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT290000CA.ResponsibleProvider.healthCareProvider</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"performer/healthCareProvider"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareProvider PerformerHealthCareProvider {
            get { return this.performerHealthCareProvider; }
            set { this.performerHealthCareProvider = value; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT290000CA.ServiceReferrer.healthCareProvider</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"referrer/healthCareProvider"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareProvider ReferrerHealthCareProvider {
            get { return this.referrerHealthCareProvider; }
            set { this.referrerHealthCareProvider = value; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT290000CA.Consultant.healthCareProvider</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"consultant/healthCareProvider"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareProvider ConsultantHealthCareProvider {
            get { return this.consultantHealthCareProvider; }
            set { this.consultantHealthCareProvider = value; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT290000CA.ServiceLocation.serviceDeliveryLocation</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"location/serviceDeliveryLocation"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.ServiceLocation LocationServiceDeliveryLocation {
            get { return this.locationServiceDeliveryLocation; }
            set { this.locationServiceDeliveryLocation = value; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT290000CA.BillableClinicalService.pertinentInformation1</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (0-5)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation1"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt290000ca.AccidentInformation> PertinentInformation1 {
            get { return this.pertinentInformation1; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT290000CA.EncounterInformation.patientEncounter</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation2/patientEncounter"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.PatientEncounter PertinentInformation2PatientEncounter {
            get { return this.pertinentInformation2PatientEncounter; }
            set { this.pertinentInformation2PatientEncounter = value; }
        }

        /**
         * <summary>Relationship: 
         * COCT_MT290000CA.BillableClinicalService.pertinentInformation3</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (0-10)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation3"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.DiagnosisInformation> PertinentInformation3 {
            get { return this.pertinentInformation3; }
        }

    }

}