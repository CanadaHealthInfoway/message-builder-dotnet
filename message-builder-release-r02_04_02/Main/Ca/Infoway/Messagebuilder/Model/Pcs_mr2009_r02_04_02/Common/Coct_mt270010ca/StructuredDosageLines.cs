/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:03:27 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 3919 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt270010ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using System;


    /**
     * <summary>Structured Dosage Lines</summary>
     * 
     * <remarks><p>Either an Ad-hoc Dosage Line or (Dosage 
     * Timing/Frequency + Dosage Range + possibly Dosage Rate) may 
     * be specified t one time }</p> <p>This information, along 
     * with the order/sequence of the dosage lines, constitutes the 
     * details of a structured dosage instruction.</p> <p>Enables 
     * SIG instructions to be discretely specified. Also, supports 
     * scaling doses and parallel dose specification.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"COCT_MT270010CA.DosageLine"})]
    public class StructuredDosageLines : MessagePartBean {

        private CS dosageUsageContext;
        private ST adHocDosageInstruction;
        private GTS dosageTimingFrequency;
        private URG<PQ, PhysicalQuantity> dosageRange;
        private URG<PQ, PhysicalQuantity> dosageRate;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt270010ca.AdministrationPrecondition triggerActEventCriterion;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt270010ca.AdditionalSIGInstruction componentSupplementalInstruction;

        public StructuredDosageLines() {
            this.dosageUsageContext = new CSImpl();
            this.adHocDosageInstruction = new STImpl();
            this.dosageTimingFrequency = new GTSImpl();
            this.dosageRange = new URGImpl<PQ, PhysicalQuantity>();
            this.dosageRate = new URGImpl<PQ, PhysicalQuantity>();
        }
        /**
         * <summary>Dosage Usage Context</summary>
         * 
         * <remarks><p>- moodCode must be DEFN for drug definitions 
         * (such as monographs) - moodCode must be RQO for orders; - 
         * moodCode must be EVN for dispenses and recording of other 
         * medications</p> <p>Indicates the context of the 
         * administration.</p><p>moodCode = RQO, for administration 
         * instruction on orders</p><p>moodCode = EVN, for 
         * administration instruction on dispenses</p><p>moodCode = 
         * DEF, for administration instruction on medication definition 
         * documents/references (typically, monographs).</p> 
         * <p>Indicates the context of the 
         * administration.</p><p>moodCode = RQO, for administration 
         * instruction on orders</p><p>moodCode = EVN, for 
         * administration instruction on dispenses</p><p>moodCode = 
         * DEF, for administration instruction on medication definition 
         * documents/references (typically, monographs).</p> 
         * <p>Indicates the context of the 
         * administration.</p><p>moodCode = RQO, for administration 
         * instruction on orders</p><p>moodCode = EVN, for 
         * administration instruction on dispenses</p><p>moodCode = 
         * DEF, for administration instruction on medication definition 
         * documents/references (typically, monographs).</p> 
         * <p>Indicates the context of the 
         * administration.</p><p>moodCode = RQO, for administration 
         * instruction on orders</p><p>moodCode = EVN, for 
         * administration instruction on dispenses</p><p>moodCode = 
         * DEF, for administration instruction on medication definition 
         * documents/references (typically, monographs).</p> <p>Puts 
         * the class in context, and is therefore mandatory.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"moodCode"})]
        public x_ActMoodDefEvnRqo DosageUsageContext {
            get { return (x_ActMoodDefEvnRqo) this.dosageUsageContext.Value; }
            set { this.dosageUsageContext.Value = value; }
        }

        /**
         * <summary>C:Ad-hoc Dosage Instruction</summary>
         * 
         * <remarks><p>A free form description of how the dispensed 
         * medication is to be administered to the patient.</p> 
         * <p>DispensedItem.instruction</p><p>Prescription.instruction</p><p>D99.02</p><p>X0201</p><p>ZPB3.16</p><p>DRU.030-02</p> 
         * <p>DispensedItem.instruction</p><p>Prescription.instruction</p><p>D99.02</p><p>X0201</p><p>ZPB3.16</p><p>DRU.030-02</p> 
         * <p>DispensedItem.instruction</p><p>Prescription.instruction</p><p>D99.02</p><p>X0201</p><p>ZPB3.16</p><p>DRU.030-02</p> 
         * <p>DispensedItem.instruction</p><p>Prescription.instruction</p><p>D99.02</p><p>X0201</p><p>ZPB3.16</p><p>DRU.030-02</p> 
         * <p>DispensedItem.instruction</p><p>Prescription.instruction</p><p>D99.02</p><p>X0201</p><p>ZPB3.16</p><p>DRU.030-02</p> 
         * <p>DispensedItem.instruction</p><p>Prescription.instruction</p><p>D99.02</p><p>X0201</p><p>ZPB3.16</p><p>DRU.030-02</p> 
         * <p>Not all dosage instructions can easily be expressed in 
         * formal terms</p><p>Allows dosage instructions to be sent 
         * across as one string of information without breaking it 
         * up.</p> <p>Not all dosage instructions can easily be 
         * expressed in formal terms</p><p>Allows dosage instructions 
         * to be sent across as one string of information without 
         * breaking it up.</p> <p>This field must not be used for 
         * components of the prescription that are coded 
         * elsewhere.(e.g. Coded Dosage Timing).</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"text"})]
        public String AdHocDosageInstruction {
            get { return this.adHocDosageInstruction.Value; }
            set { this.adHocDosageInstruction.Value = value; }
        }

        /**
         * <summary>C:Dosage Timing/Frequency</summary>
         * 
         * <remarks><p>A structure describing the frequency (how often 
         * the drug is to be administered), offset (elapse time between 
         * administrations) represented by one line of dosage 
         * administration instruction. Includes the overall time-period 
         * the dosage instruction applies.</p> 
         * <p>DosageItem.Duration(OuterInterval.Width)</p><p>DosageItem.StartDate(OuterInterval.Low)</p><p>RepeatPattern.PatternCode(PIVL 
         * - codes will need to be mapped to and from formal GTS 
         * expressions)</p><p>RepeatPattern.uncodedPattern 
         * (PIVL.originalText)</p><p>ZDP.13.2.1 
         * (PIVL.period)</p><p>DP.13.2.2 (single time or list of 
         * times)</p><p>PID.13.3 (outer 
         * IVL&lt;TS&gt;.width)</p><p>PID.13.4 (outer 
         * IVL&lt;TS&gt;.low)</p><p>PID.13.5 (outer 
         * IVL&lt;TS&gt;.high)</p><p>Frequency</p> 
         * <p>DosageItem.Duration(OuterInterval.Width)</p><p>DosageItem.StartDate(OuterInterval.Low)</p><p>RepeatPattern.PatternCode(PIVL 
         * - codes will need to be mapped to and from formal GTS 
         * expressions)</p><p>RepeatPattern.uncodedPattern 
         * (PIVL.originalText)</p><p>ZDP.13.2.1 
         * (PIVL.period)</p><p>DP.13.2.2 (single time or list of 
         * times)</p><p>PID.13.3 (outer 
         * IVL&lt;TS&gt;.width)</p><p>PID.13.4 (outer 
         * IVL&lt;TS&gt;.low)</p><p>PID.13.5 (outer 
         * IVL&lt;TS&gt;.high)</p><p>Frequency</p> 
         * <p>DosageItem.Duration(OuterInterval.Width)</p><p>DosageItem.StartDate(OuterInterval.Low)</p><p>RepeatPattern.PatternCode(PIVL 
         * - codes will need to be mapped to and from formal GTS 
         * expressions)</p><p>RepeatPattern.uncodedPattern 
         * (PIVL.originalText)</p><p>ZDP.13.2.1 
         * (PIVL.period)</p><p>DP.13.2.2 (single time or list of 
         * times)</p><p>PID.13.3 (outer 
         * IVL&lt;TS&gt;.width)</p><p>PID.13.4 (outer 
         * IVL&lt;TS&gt;.low)</p><p>PID.13.5 (outer 
         * IVL&lt;TS&gt;.high)</p><p>Frequency</p> 
         * <p>DosageItem.Duration(OuterInterval.Width)</p><p>DosageItem.StartDate(OuterInterval.Low)</p><p>RepeatPattern.PatternCode(PIVL 
         * - codes will need to be mapped to and from formal GTS 
         * expressions)</p><p>RepeatPattern.uncodedPattern 
         * (PIVL.originalText)</p><p>ZDP.13.2.1 
         * (PIVL.period)</p><p>DP.13.2.2 (single time or list of 
         * times)</p><p>PID.13.3 (outer 
         * IVL&lt;TS&gt;.width)</p><p>PID.13.4 (outer 
         * IVL&lt;TS&gt;.low)</p><p>PID.13.5 (outer 
         * IVL&lt;TS&gt;.high)</p><p>Frequency</p> 
         * <p>DosageItem.Duration(OuterInterval.Width)</p><p>DosageItem.StartDate(OuterInterval.Low)</p><p>RepeatPattern.PatternCode(PIVL 
         * - codes will need to be mapped to and from formal GTS 
         * expressions)</p><p>RepeatPattern.uncodedPattern 
         * (PIVL.originalText)</p><p>ZDP.13.2.1 
         * (PIVL.period)</p><p>DP.13.2.2 (single time or list of 
         * times)</p><p>PID.13.3 (outer 
         * IVL&lt;TS&gt;.width)</p><p>PID.13.4 (outer 
         * IVL&lt;TS&gt;.low)</p><p>PID.13.5 (outer 
         * IVL&lt;TS&gt;.high)</p><p>Frequency</p> 
         * <p>DosageItem.Duration(OuterInterval.Width)</p><p>DosageItem.StartDate(OuterInterval.Low)</p><p>RepeatPattern.PatternCode(PIVL 
         * - codes will need to be mapped to and from formal GTS 
         * expressions)</p><p>RepeatPattern.uncodedPattern 
         * (PIVL.originalText)</p><p>ZDP.13.2.1 
         * (PIVL.period)</p><p>DP.13.2.2 (single time or list of 
         * times)</p><p>PID.13.3 (outer 
         * IVL&lt;TS&gt;.width)</p><p>PID.13.4 (outer 
         * IVL&lt;TS&gt;.low)</p><p>PID.13.5 (outer 
         * IVL&lt;TS&gt;.high)</p><p>Frequency</p> 
         * <p>DosageItem.Duration(OuterInterval.Width)</p><p>DosageItem.StartDate(OuterInterval.Low)</p><p>RepeatPattern.PatternCode(PIVL 
         * - codes will need to be mapped to and from formal GTS 
         * expressions)</p><p>RepeatPattern.uncodedPattern 
         * (PIVL.originalText)</p><p>ZDP.13.2.1 
         * (PIVL.period)</p><p>DP.13.2.2 (single time or list of 
         * times)</p><p>PID.13.3 (outer 
         * IVL&lt;TS&gt;.width)</p><p>PID.13.4 (outer 
         * IVL&lt;TS&gt;.low)</p><p>PID.13.5 (outer 
         * IVL&lt;TS&gt;.high)</p><p>Frequency</p> 
         * <p>DosageItem.Duration(OuterInterval.Width)</p><p>DosageItem.StartDate(OuterInterval.Low)</p><p>RepeatPattern.PatternCode(PIVL 
         * - codes will need to be mapped to and from formal GTS 
         * expressions)</p><p>RepeatPattern.uncodedPattern 
         * (PIVL.originalText)</p><p>ZDP.13.2.1 
         * (PIVL.period)</p><p>DP.13.2.2 (single time or list of 
         * times)</p><p>PID.13.3 (outer 
         * IVL&lt;TS&gt;.width)</p><p>PID.13.4 (outer 
         * IVL&lt;TS&gt;.low)</p><p>PID.13.5 (outer 
         * IVL&lt;TS&gt;.high)</p><p>Frequency</p> 
         * <p>DosageItem.Duration(OuterInterval.Width)</p><p>DosageItem.StartDate(OuterInterval.Low)</p><p>RepeatPattern.PatternCode(PIVL 
         * - codes will need to be mapped to and from formal GTS 
         * expressions)</p><p>RepeatPattern.uncodedPattern 
         * (PIVL.originalText)</p><p>ZDP.13.2.1 
         * (PIVL.period)</p><p>DP.13.2.2 (single time or list of 
         * times)</p><p>PID.13.3 (outer 
         * IVL&lt;TS&gt;.width)</p><p>PID.13.4 (outer 
         * IVL&lt;TS&gt;.low)</p><p>PID.13.5 (outer 
         * IVL&lt;TS&gt;.high)</p><p>Frequency</p> 
         * <p>DosageItem.Duration(OuterInterval.Width)</p><p>DosageItem.StartDate(OuterInterval.Low)</p><p>RepeatPattern.PatternCode(PIVL 
         * - codes will need to be mapped to and from formal GTS 
         * expressions)</p><p>RepeatPattern.uncodedPattern 
         * (PIVL.originalText)</p><p>ZDP.13.2.1 
         * (PIVL.period)</p><p>DP.13.2.2 (single time or list of 
         * times)</p><p>PID.13.3 (outer 
         * IVL&lt;TS&gt;.width)</p><p>PID.13.4 (outer 
         * IVL&lt;TS&gt;.low)</p><p>PID.13.5 (outer 
         * IVL&lt;TS&gt;.high)</p><p>Frequency</p> <p>Together with the 
         * dose quantity, indicates the overall quantity of drug.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public GeneralTimingSpecification DosageTimingFrequency {
            get { return this.dosageTimingFrequency.Value; }
            set { this.dosageTimingFrequency.Value = value; }
        }

        /**
         * <summary>D:Dosage Range</summary>
         * 
         * <remarks><p>This specifies the minimum and maximum amount of 
         * the medication to be taken during a single 
         * administration.</p> 
         * <p>DosageItem.DosageRange</p><p>ZDP.13.1</p><p>Dosage</p> 
         * <p>DosageItem.DosageRange</p><p>ZDP.13.1</p><p>Dosage</p> 
         * <p>DosageItem.DosageRange</p><p>ZDP.13.1</p><p>Dosage</p> 
         * <p>Enables the checking of administration compliance that 
         * could results in fill-too-soon/fill-too-late 
         * contraindications. Supports circumstances where the dose can 
         * vary. (e.g. 1-2 tablets)</p> <p>Where no range is needed, a 
         * single value should be specified as the center, with a width 
         * of 0.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"doseQuantity"})]
        public UncertainRange<PhysicalQuantity> DosageRange {
            get { return this.dosageRange.Value; }
            set { this.dosageRange.Value = value; }
        }

        /**
         * <summary>E:Dosage Rate</summary>
         * 
         * <remarks><p>For intravenous and other such routes, this is 
         * the time period over which one dose is to be administered. 
         * The flow rate is determined by dividing the dose quantity by 
         * the Dosage rate.</p> <p>Required for intravenous 
         * administration</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"rateQuantity"})]
        public UncertainRange<PhysicalQuantity> DosageRate {
            get { return this.dosageRate.Value; }
            set { this.dosageRate.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"trigger/actEventCriterion"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt270010ca.AdministrationPrecondition TriggerActEventCriterion {
            get { return this.triggerActEventCriterion; }
            set { this.triggerActEventCriterion = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component/supplementalInstruction"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt270010ca.AdditionalSIGInstruction ComponentSupplementalInstruction {
            get { return this.componentSupplementalInstruction; }
            set { this.componentSupplementalInstruction = value; }
        }

    }

}