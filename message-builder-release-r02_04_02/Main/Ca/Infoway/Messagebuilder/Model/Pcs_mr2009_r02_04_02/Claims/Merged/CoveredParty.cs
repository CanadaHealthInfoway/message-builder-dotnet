/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-19 07:12:06 -0500 (Thu, 19 Jan 2012) $
 * Revision:      $LastChangedRevision: 4393 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged;
    using System;
    using System.Collections.Generic;


    [Hl7PartTypeMappingAttribute(new string[] {"FICR_MT400001CA.CoveredParty","FICR_MT400003CA.CoveredParty","FICR_MT400004CA.CoveredParty","FICR_MT490101CA.CoveredParty","FICR_MT490102CA.CoveredParty"})]
    public class CoveredParty : MessagePartBean {

        private II coveredPartyIdentifier;
        private CV relationshipToPolicyHolder;
        private SET<PN, PersonName> coveredPartyPatientNameS;
        private CV coveredPartyPatientGender;
        private TS coveredPartyPatientDateOfBirth;
        private AD coveredPartyPatientAddress;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.RelatedPerson> indirectAuthorityPersonalRelationship;

        public CoveredParty() {
            this.coveredPartyIdentifier = new IIImpl();
            this.relationshipToPolicyHolder = new CVImpl();
            this.coveredPartyPatientNameS = new SETImpl<PN, PersonName>(typeof(PNImpl));
            this.coveredPartyPatientGender = new CVImpl();
            this.coveredPartyPatientDateOfBirth = new TSImpl();
            this.coveredPartyPatientAddress = new ADImpl();
            this.indirectAuthorityPersonalRelationship = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.RelatedPerson>();
        }
        /**
         * <summary>CoveredPartyIdentifier</summary>
         * 
         * <remarks>Covered Party Identifier</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier CoveredPartyIdentifier {
            get { return this.coveredPartyIdentifier.Value; }
            set { this.coveredPartyIdentifier.Value = value; }
        }

        /**
         * <summary>RelationshipToPolicyHolder</summary>
         * 
         * <remarks>Relationship to Policy Holder</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public Code RelationshipToPolicyHolder {
            get { return (Code) this.relationshipToPolicyHolder.Value; }
            set { this.relationshipToPolicyHolder.Value = value; }
        }

        /**
         * <summary>CoveredPartyPatientNameS</summary>
         * 
         * <remarks>Covered Party (Patient) Name(s</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"coveredPartyAsPatientPerson/name"})]
        public ICollection<PersonName> CoveredPartyPatientNameS {
            get { return this.coveredPartyPatientNameS.RawSet(); }
        }

        /**
         * <summary>CoveredPartyPatientGender</summary>
         * 
         * <remarks>Covered Party (Patient) Gender</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"coveredPartyAsPatientPerson/administrativeGenderCode"})]
        public AdministrativeGender CoveredPartyPatientGender {
            get { return (AdministrativeGender) this.coveredPartyPatientGender.Value; }
            set { this.coveredPartyPatientGender.Value = value; }
        }

        /**
         * <summary>CoveredPartyPatientDateOfBirth</summary>
         * 
         * <remarks>Covered Party (Patient) Date of Birth</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"coveredPartyAsPatientPerson/birthTime"})]
        public PlatformDate CoveredPartyPatientDateOfBirth {
            get { return this.coveredPartyPatientDateOfBirth.Value; }
            set { this.coveredPartyPatientDateOfBirth.Value = value; }
        }

        /**
         * <summary>CoveredPartyPatientAddress</summary>
         * 
         * <remarks>Covered Party (Patient) Address</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"coveredPartyAsPatientPerson/addr"})]
        public PostalAddress CoveredPartyPatientAddress {
            get { return this.coveredPartyPatientAddress.Value; }
            set { this.coveredPartyPatientAddress.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"indirectAuthority/personalRelationship"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.RelatedPerson> IndirectAuthorityPersonalRelationship {
            get { return this.indirectAuthorityPersonalRelationship; }
        }

    }

}