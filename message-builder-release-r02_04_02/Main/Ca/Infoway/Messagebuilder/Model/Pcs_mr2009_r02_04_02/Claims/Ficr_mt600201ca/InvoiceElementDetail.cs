/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:00:59 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 3895 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt600201ca {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca;
    using System;
    using System.Collections.Generic;


    /**
     * <summary><p>RTO used to specify 15 pills (each) out of a 
     * bottle of 100 pills (each) to reflect billing for a portion 
     * of a package (e.g. 0.15 of a bottle)</p></summary>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"FICR_MT600201CA.InvoiceElementDetail"})]
    public class InvoiceElementDetail : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt600201ca.IInvoiceElementChoice {

        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca.IA_BillableActChoice> reasonOfBillableActChoice;
        private II submittedInvoiceLineIdentifier;
        private CV submittedProductServiceCode;
        private PQ submittedUnitQuantity;
        private RTO<Money, PhysicalQuantity> submittedUnitAmountPrice;
        private MO submittedInvoiceLineAmount;
        private IList<REAL> multiplierEG007;

        public InvoiceElementDetail() {
            this.reasonOfBillableActChoice = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca.IA_BillableActChoice>();
            this.submittedInvoiceLineIdentifier = new IIImpl();
            this.submittedProductServiceCode = new CVImpl();
            this.submittedUnitQuantity = new PQImpl();
            this.submittedUnitAmountPrice = new RTOImpl<Money, PhysicalQuantity>();
            this.submittedInvoiceLineAmount = new MOImpl();
            this.multiplierEG007 = new List<REAL>();
        }
        [Hl7XmlMappingAttribute(new string[] {"reasonOf/billableActChoice"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca.IA_BillableActChoice> ReasonOfBillableActChoice {
            get { return this.reasonOfBillableActChoice; }
        }

        /**
         * <summary>Submitted Invoice Line Identifier</summary>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier SubmittedInvoiceLineIdentifier {
            get { return this.submittedInvoiceLineIdentifier.Value; }
            set { this.submittedInvoiceLineIdentifier.Value = value; }
        }

        /**
         * <summary>Submitted Product/Service Code</summary>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public Code SubmittedProductServiceCode {
            get { return (Code) this.submittedProductServiceCode.Value; }
            set { this.submittedProductServiceCode.Value = value; }
        }

        /**
         * <summary>Submitted Unit Quantity</summary>
         */
        [Hl7XmlMappingAttribute(new string[] {"unitQuantity"})]
        public PhysicalQuantity SubmittedUnitQuantity {
            get { return this.submittedUnitQuantity.Value; }
            set { this.submittedUnitQuantity.Value = value; }
        }

        /**
         * <summary>Submitted Unit Amount Price</summary>
         */
        [Hl7XmlMappingAttribute(new string[] {"unitPriceAmt"})]
        public Ratio<Money, PhysicalQuantity> SubmittedUnitAmountPrice {
            get { return this.submittedUnitAmountPrice.Value; }
            set { this.submittedUnitAmountPrice.Value = value; }
        }

        /**
         * <summary>Submitted Invoice Line Amount</summary>
         */
        [Hl7XmlMappingAttribute(new string[] {"netAmt"})]
        public Money SubmittedInvoiceLineAmount {
            get { return this.submittedInvoiceLineAmount.Value; }
            set { this.submittedInvoiceLineAmount.Value = value; }
        }

        /**
         * <summary>Multiplier, e.g. 0.07</summary>
         */
        [Hl7XmlMappingAttribute(new string[] {"factorNumber"})]
        public IList<BigDecimal> MultiplierEG007 {
            get { return new RawListWrapper<REAL, BigDecimal>(multiplierEG007, typeof(REALImpl)); }
        }

    }

}