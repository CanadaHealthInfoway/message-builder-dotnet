/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2013-03-08 11:06:36 -0500 (Fri, 08 Mar 2013) $
 * Revision:      $LastChangedRevision: 6699 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt600201ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Business Name: InvoiceType</summary>
     * 
     * <remarks>FICR_MT620000CA.InvoiceElementGroup: Invoice Type 
     * <p>Cancel reasons are noted in the control wrapper</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"FICR_MT600201CA.InvoiceElementGroup","FICR_MT610201CA.InvoiceElementGroup","FICR_MT620000CA.InvoiceElementGroup","QUCR_MT830201CA.InvoiceElementGroup"})]
    public class InvoiceType : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.IInvoiceElementChoice, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt600201ca.IInvoiceElementChoice {

        private II id;
        private CV code;
        private MO netAmt;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca.IA_BillableActChoice> reasonOfBillableActChoice;
        private IVL<TS, Interval<PlatformDate>> effectiveTime;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.FinancialContract inFulfillmentOfFinancialContract;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.InvoiceElementCrossReference> predecessorInvoiceElementCrossReference;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.AdjudicatedInvoiceElementGroup> referenceAdjudicatedInvoiceElementGroup;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.PolicyOrAccount_2> coveragePolicyOrAccount;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.HealthDocumentAttachment_2> pertinentInformationHealthDocumentAttachment;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt600201ca.InvoiceElementComponent> component;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.InvoiceElementOverride> triggerForInvoiceElementOverride;

        public InvoiceType() {
            this.id = new IIImpl();
            this.code = new CVImpl();
            this.netAmt = new MOImpl();
            this.reasonOfBillableActChoice = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca.IA_BillableActChoice>();
            this.effectiveTime = new IVLImpl<TS, Interval<PlatformDate>>();
            this.predecessorInvoiceElementCrossReference = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.InvoiceElementCrossReference>();
            this.referenceAdjudicatedInvoiceElementGroup = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.AdjudicatedInvoiceElementGroup>();
            this.coveragePolicyOrAccount = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.PolicyOrAccount_2>();
            this.pertinentInformationHealthDocumentAttachment = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.HealthDocumentAttachment_2>();
            this.component = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt600201ca.InvoiceElementComponent>();
            this.triggerForInvoiceElementOverride = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.InvoiceElementOverride>();
        }
        /**
         * <summary>Un-merged Business Name: InvoiceGroupingIdentifiers</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT620000CA.InvoiceElementGroup.id 
         * Conformance/Cardinality: MANDATORY (1) <p>There are some 
         * situations where more than 1 identifier for this object can 
         * be included in a message.</p> <p>For example:</p><p>1. 
         * unique invoice group identifier, independent of adjudicator 
         * recipient.</p><p>2. sequential invoice grouping identifier 
         * by adjudicator.</p><p>Obligation on adjudicator is to return 
         * and communicate about this item with all identifiers (i.e. 
         * identifier 1. and 2.).</p> <p></p> Un-merged Business Name: 
         * InvoiceGroupID Relationship: 
         * QUCR_MT830201CA.InvoiceElementGroup.id 
         * Conformance/Cardinality: MANDATORY (1) <p></p><p>For 
         * example:</p><p>1. unique invoice group identifier, 
         * independent of adjudicator recipient.</p><p>2. sequential 
         * invoice grouping identifier by adjudicator.</p><p>Obligation 
         * on adjudicator is to return and communicate about this item 
         * with all identifiers (i.e. identifier 1. and 2.).</p> <p>Set 
         * of identifiers that uniquely identify the Invoice 
         * Grouping.</p> Un-merged Business Name: 
         * InvoiceGroupingIdentifierS Relationship: 
         * FICR_MT600201CA.InvoiceElementGroup.id 
         * Conformance/Cardinality: MANDATORY (1) Un-merged Business 
         * Name: InvoiceGroupingIdentifier Relationship: 
         * FICR_MT610201CA.InvoiceElementGroup.id 
         * Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>Business Name: InvoiceType</summary>
         * 
         * <remarks>Un-merged Business Name: InvoiceType Relationship: 
         * FICR_MT620000CA.InvoiceElementGroup.code 
         * Conformance/Cardinality: MANDATORY (1) <p>Each Invoice Type 
         * is used to specify 1. vocabulary, 2. structure of the 
         * Invoice Element Choice and 3. which Billable Act(s) can be 
         * included for the specified Invoice Type.</p><p>Information 
         * on constraints for the Invoice Type will be found in the 
         * NeCST Message Specifications. Each Benefit Group will 
         * indicate which Invoice Types will be supported by that 
         * Benefit Group.</p><p>Invoice Types will not generate unique 
         * and distinct XML schemas that can tested independent of each 
         * other. They must be tested together within an Message 
         * Type.</p> <p>Invoice Type e.g. Healthcare Services, Rx 
         * Dispense, Rx Compound, Healthcare Goods, Preferred 
         * Accomodation</p> Un-merged Business Name: InvoiceType 
         * Relationship: FICR_MT600201CA.InvoiceElementGroup.code 
         * Conformance/Cardinality: MANDATORY (1) Un-merged Business 
         * Name: InvoiceType Relationship: 
         * FICR_MT610201CA.InvoiceElementGroup.code 
         * Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ActInvoiceGroupType Code {
            get { return (ActInvoiceGroupType) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>Business Name: InvoiceSubTotal</summary>
         * 
         * <remarks>Un-merged Business Name: InvoiceSubTotal 
         * Relationship: FICR_MT620000CA.InvoiceElementGroup.netAmt 
         * Conformance/Cardinality: MANDATORY (1) <p>For Cancel 
         * Request: This would serve as a cross-check for the 
         * Adjudicator for the Invoice Grouping that is being 
         * cancelled.</p><p>Attribute cannot be mandatory as it may not 
         * be present for a Coverage Extension Request.</p> <p>Invoice 
         * sub-total - This is the sum of the Submitted Invoice Line 
         * amounts; Identifies the total monetary amount billed for the 
         * invoice element.</p> Un-merged Business Name: 
         * InvoiceSubTotal Relationship: 
         * FICR_MT600201CA.InvoiceElementGroup.netAmt 
         * Conformance/Cardinality: MANDATORY (1) Un-merged Business 
         * Name: InvoiceSubTotal Relationship: 
         * FICR_MT610201CA.InvoiceElementGroup.netAmt 
         * Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"netAmt"})]
        public Money NetAmt {
            get { return this.netAmt.Value; }
            set { this.netAmt.Value = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.InvoiceElementReason.billableActChoice 
         * Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"reasonOf/billableActChoice"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca.IA_BillableActChoice> ReasonOfBillableActChoice {
            get { return this.reasonOfBillableActChoice; }
        }

        /**
         * <summary>Business Name: TimePeriodForInvoice</summary>
         * 
         * <remarks>Un-merged Business Name: TimePeriodForInvoice 
         * Relationship: 
         * FICR_MT600201CA.InvoiceElementGroup.effectiveTime 
         * Conformance/Cardinality: REQUIRED (0-1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.InvoiceElementGroupInFulfillmentOf.financialContract 
         * Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"inFulfillmentOf/financialContract"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.FinancialContract InFulfillmentOfFinancialContract {
            get { return this.inFulfillmentOfFinancialContract; }
            set { this.inFulfillmentOfFinancialContract = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.Predecessor.invoiceElementCrossReference 
         * Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"predecessor/invoiceElementCrossReference"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.InvoiceElementCrossReference> PredecessorInvoiceElementCrossReference {
            get { return this.predecessorInvoiceElementCrossReference; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.Reference.adjudicatedInvoiceElementGroup 
         * Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"reference/adjudicatedInvoiceElementGroup"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.AdjudicatedInvoiceElementGroup> ReferenceAdjudicatedInvoiceElementGroup {
            get { return this.referenceAdjudicatedInvoiceElementGroup; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.InvoiceElementCoverage.policyOrAccount 
         * Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"coverage/policyOrAccount"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.PolicyOrAccount_2> CoveragePolicyOrAccount {
            get { return this.coveragePolicyOrAccount; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.InvoiceElementGroupAttachment.healthDocumentAttachment 
         * Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation/healthDocumentAttachment"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.HealthDocumentAttachment_2> PertinentInformationHealthDocumentAttachment {
            get { return this.pertinentInformationHealthDocumentAttachment; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.InvoiceElementGroup.component 
         * Conformance/Cardinality: MANDATORY (1-10)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"component"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt600201ca.InvoiceElementComponent> Component {
            get { return this.component; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.Suggests.invoiceElementOverride 
         * Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"triggerFor/invoiceElementOverride"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.InvoiceElementOverride> TriggerForInvoiceElementOverride {
            get { return this.triggerForInvoiceElementOverride; }
        }

    }

}