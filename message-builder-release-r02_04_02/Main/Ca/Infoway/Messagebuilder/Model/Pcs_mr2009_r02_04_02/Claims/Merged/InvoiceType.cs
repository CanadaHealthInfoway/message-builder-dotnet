/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-19 07:11:39 -0500 (Thu, 19 Jan 2012) $
 * Revision:      $LastChangedRevision: 4385 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt600201ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>InvoiceType</summary>
     * 
     * <remarks>FICR_MT620000CA.InvoiceElementGroup: Invoice Type 
     * <p>Cancel reasons are noted in the control wrapper</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"FICR_MT600201CA.InvoiceElementGroup","FICR_MT610201CA.InvoiceElementGroup","FICR_MT620000CA.InvoiceElementGroup","QUCR_MT830201CA.InvoiceElementGroup"})]
    public class InvoiceType : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt600201ca.IInvoiceElementChoice, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.IInvoiceElementChoice {

        private II id;
        private CV code;
        private MO invoiceSubTotal;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca.IA_BillableActChoice> reasonOfBillableActChoice;
        private IVL<TS, Interval<PlatformDate>> timePeriodForInvoice;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.FinancialContract inFulfillmentOfFinancialContract;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.InvoiceElementCrossReference> predecessorInvoiceElementCrossReference;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.AdjudicatedInvoiceElementGroup> referenceAdjudicatedInvoiceElementGroup;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.PolicyOrAccount_2> coveragePolicyOrAccount;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.HealthDocumentAttachment_2> pertinentInformationHealthDocumentAttachment;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt600201ca.InvoiceElementComponent> component;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.InvoiceElementOverride> triggerForInvoiceElementOverride;

        public InvoiceType() {
            this.id = new IIImpl();
            this.code = new CVImpl();
            this.invoiceSubTotal = new MOImpl();
            this.reasonOfBillableActChoice = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca.IA_BillableActChoice>();
            this.timePeriodForInvoice = new IVLImpl<TS, Interval<PlatformDate>>();
            this.predecessorInvoiceElementCrossReference = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.InvoiceElementCrossReference>();
            this.referenceAdjudicatedInvoiceElementGroup = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.AdjudicatedInvoiceElementGroup>();
            this.coveragePolicyOrAccount = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.PolicyOrAccount_2>();
            this.pertinentInformationHealthDocumentAttachment = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.HealthDocumentAttachment_2>();
            this.component = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt600201ca.InvoiceElementComponent>();
            this.triggerForInvoiceElementOverride = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.InvoiceElementOverride>();
        }
        /**
         * <summary>Invoice Group ID</summary>
         * 
         * <remarks><p>Set of identifiers that uniquely identify the 
         * Invoice Grouping.</p> <p>For example:</p><p>1. unique 
         * invoice group identifier, independent of adjudicator 
         * recipient.</p><p>2. sequential invoice grouping identifier 
         * by adjudicator.</p><p>Obligation on adjudicator is to return 
         * and communicate about this item with all identifiers (i.e. 
         * identifier 1. and 2.).</p> <p>For example:</p><p>1. unique 
         * invoice group identifier, independent of adjudicator 
         * recipient.</p><p>2. sequential invoice grouping identifier 
         * by adjudicator.</p><p>Obligation on adjudicator is to return 
         * and communicate about this item with all identifiers (i.e. 
         * identifier 1. and 2.).</p> <p>For example:</p><p>1. unique 
         * invoice group identifier, independent of adjudicator 
         * recipient.</p><p>2. sequential invoice grouping identifier 
         * by adjudicator.</p><p>Obligation on adjudicator is to return 
         * and communicate about this item with all identifiers (i.e. 
         * identifier 1. and 2.).</p> <p>For example:</p><p>1. unique 
         * invoice group identifier, independent of adjudicator 
         * recipient.</p><p>2. sequential invoice grouping identifier 
         * by adjudicator.</p><p>Obligation on adjudicator is to return 
         * and communicate about this item with all identifiers (i.e. 
         * identifier 1. and 2.).</p> Invoice Grouping Identifier(s 
         * Invoice Grouping Identifier Invoice Grouping Identifiers 
         * <p>There are some situations where more than 1 identifier 
         * for this object can be included in a message.</p> <p>For 
         * example:</p><p>1. unique invoice group identifier, 
         * independent of adjudicator recipient.</p><p>2. sequential 
         * invoice grouping identifier by adjudicator.</p><p>Obligation 
         * on adjudicator is to return and communicate about this item 
         * with all identifiers (i.e. identifier 1. and 2.).</p> <p>For 
         * example:</p><p>1. unique invoice group identifier, 
         * independent of adjudicator recipient.</p><p>2. sequential 
         * invoice grouping identifier by adjudicator.</p><p>Obligation 
         * on adjudicator is to return and communicate about this item 
         * with all identifiers (i.e. identifier 1. and 2.).</p> <p>For 
         * example:</p><p>1. unique invoice group identifier, 
         * independent of adjudicator recipient.</p><p>2. sequential 
         * invoice grouping identifier by adjudicator.</p><p>Obligation 
         * on adjudicator is to return and communicate about this item 
         * with all identifiers (i.e. identifier 1. and 2.).</p> <p>For 
         * example:</p><p>1. unique invoice group identifier, 
         * independent of adjudicator recipient.</p><p>2. sequential 
         * invoice grouping identifier by adjudicator.</p><p>Obligation 
         * on adjudicator is to return and communicate about this item 
         * with all identifiers (i.e. identifier 1. and 2.).</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>InvoiceType</summary>
         * 
         * <remarks>Invoice Type <p>Invoice Type e.g. Healthcare 
         * Services, Rx Dispense, Rx Compound, Healthcare Goods, 
         * Preferred Accomodation</p> <p>Each Invoice Type is used to 
         * specify 1. vocabulary, 2. structure of the Invoice Element 
         * Choice and 3. which Billable Act(s) can be included for the 
         * specified Invoice Type.</p><p>Information on constraints for 
         * the Invoice Type will be found in the NeCST Message 
         * Specifications. Each Benefit Group will indicate which 
         * Invoice Types will be supported by that Benefit 
         * Group.</p><p>Invoice Types will not generate unique and 
         * distinct XML schemas that can tested independent of each 
         * other. They must be tested together within an Message 
         * Type.</p> <p>Each Invoice Type is used to specify 1. 
         * vocabulary, 2. structure of the Invoice Element Choice and 
         * 3. which Billable Act(s) can be included for the specified 
         * Invoice Type.</p><p>Information on constraints for the 
         * Invoice Type will be found in the NeCST Message 
         * Specifications. Each Benefit Group will indicate which 
         * Invoice Types will be supported by that Benefit 
         * Group.</p><p>Invoice Types will not generate unique and 
         * distinct XML schemas that can tested independent of each 
         * other. They must be tested together within an Message 
         * Type.</p> <p>Each Invoice Type is used to specify 1. 
         * vocabulary, 2. structure of the Invoice Element Choice and 
         * 3. which Billable Act(s) can be included for the specified 
         * Invoice Type.</p><p>Information on constraints for the 
         * Invoice Type will be found in the NeCST Message 
         * Specifications. Each Benefit Group will indicate which 
         * Invoice Types will be supported by that Benefit 
         * Group.</p><p>Invoice Types will not generate unique and 
         * distinct XML schemas that can tested independent of each 
         * other. They must be tested together within an Message 
         * Type.</p> Invoice Type</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public Code Code {
            get { return (Code) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>InvoiceSubTotal</summary>
         * 
         * <remarks>Invoice Sub-total Invoice sub-total <p>Invoice 
         * sub-total - This is the sum of the Submitted Invoice Line 
         * amounts; Identifies the total monetary amount billed for the 
         * invoice element.</p> <p>For Cancel Request: This would serve 
         * as a cross-check for the Adjudicator for the Invoice 
         * Grouping that is being cancelled.</p><p>Attribute cannot be 
         * mandatory as it may not be present for a Coverage Extension 
         * Request.</p> <p>For Cancel Request: This would serve as a 
         * cross-check for the Adjudicator for the Invoice Grouping 
         * that is being cancelled.</p><p>Attribute cannot be mandatory 
         * as it may not be present for a Coverage Extension 
         * Request.</p> Invoice SubTotal</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"netAmt"})]
        public Money InvoiceSubTotal {
            get { return this.invoiceSubTotal.Value; }
            set { this.invoiceSubTotal.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"reasonOf/billableActChoice"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt280001ca.IA_BillableActChoice> ReasonOfBillableActChoice {
            get { return this.reasonOfBillableActChoice; }
        }

        /**
         * <summary>TimePeriodForInvoice</summary>
         * 
         * <remarks>Time period for invoice</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> TimePeriodForInvoice {
            get { return this.timePeriodForInvoice.Value; }
            set { this.timePeriodForInvoice.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"inFulfillmentOf/financialContract"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.FinancialContract InFulfillmentOfFinancialContract {
            get { return this.inFulfillmentOfFinancialContract; }
            set { this.inFulfillmentOfFinancialContract = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"predecessor/invoiceElementCrossReference"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.InvoiceElementCrossReference> PredecessorInvoiceElementCrossReference {
            get { return this.predecessorInvoiceElementCrossReference; }
        }

        [Hl7XmlMappingAttribute(new string[] {"reference/adjudicatedInvoiceElementGroup"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.AdjudicatedInvoiceElementGroup> ReferenceAdjudicatedInvoiceElementGroup {
            get { return this.referenceAdjudicatedInvoiceElementGroup; }
        }

        [Hl7XmlMappingAttribute(new string[] {"coverage/policyOrAccount"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.PolicyOrAccount_2> CoveragePolicyOrAccount {
            get { return this.coveragePolicyOrAccount; }
        }

        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation/healthDocumentAttachment"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.HealthDocumentAttachment_2> PertinentInformationHealthDocumentAttachment {
            get { return this.pertinentInformationHealthDocumentAttachment; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt600201ca.InvoiceElementComponent> Component {
            get { return this.component; }
        }

        [Hl7XmlMappingAttribute(new string[] {"triggerFor/invoiceElementOverride"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.InvoiceElementOverride> TriggerForInvoiceElementOverride {
            get { return this.triggerForInvoiceElementOverride; }
        }

    }

}