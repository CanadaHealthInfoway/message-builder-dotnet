/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:08:59 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 3980 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt001999ca {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt090508ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt130001ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged;
    using System;
    using System.Collections.Generic;


    [Hl7PartTypeMappingAttribute(new string[] {"POLB_MT001999CA.ObservationRequest"})]
    public class ObservationRequest : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt001999ca.IRequestChoice {

        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.SpecimenRole> specimenSpecimen;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.Patient_1 recordTargetPatient;
        private SET<II, Identifier> testIdentifier;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt090508ca.HealthcareOrganization performerAssignedEntity;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareWorker> callBackContactAssignedEntity;
        private CD testCode;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.IRecipientChoice> informationRecipientRecipientChoice;
        private CS testStatus;
        private LIST<GTS, GeneralTimingSpecification> testRequestTimeSpecification;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareWorker> verifierAssignedEntity;
        private TS testRequestAvailabilityTime;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ParentTest occurrenceOfActParentPointer;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.Outbreak pertinentInformation1OutbreakEvent;
        private CV testPriorityCode;
        private SET<CV, Code> testMaskingIndicator;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.SupportingClinicalInformation> pertinentInformation2SupportingClinicalObservationEvent;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ReferralRedirectIndicator component1ReferralRedirectIndicator;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.OrderSortKey component2RequestSortKey;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.LabInitiatedOrderIndicator component3LabInitiatedOrderIndicator;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt001999ca.IRequestChoice> component4RequestChoice;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt001999ca.IResultChoice> fulfillmentResultChoice1;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.Includes> subjectOf1;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt130001ca.VersionInformation subjectOf2ControlActEvent;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.PriorTestRequest componentOfPriorActRequest;

        public ObservationRequest() {
            this.specimenSpecimen = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.SpecimenRole>();
            this.testIdentifier = new SETImpl<II, Identifier>(typeof(IIImpl));
            this.callBackContactAssignedEntity = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareWorker>();
            this.testCode = new CDImpl();
            this.informationRecipientRecipientChoice = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.IRecipientChoice>();
            this.testStatus = new CSImpl();
            this.testRequestTimeSpecification = new LISTImpl<GTS, GeneralTimingSpecification>(typeof(GTSImpl));
            this.verifierAssignedEntity = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareWorker>();
            this.testRequestAvailabilityTime = new TSImpl();
            this.testPriorityCode = new CVImpl();
            this.testMaskingIndicator = new SETImpl<CV, Code>(typeof(CVImpl));
            this.pertinentInformation2SupportingClinicalObservationEvent = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.SupportingClinicalInformation>();
            this.component4RequestChoice = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt001999ca.IRequestChoice>();
            this.fulfillmentResultChoice1 = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt001999ca.IResultChoice>();
            this.subjectOf1 = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.Includes>();
        }
        [Hl7XmlMappingAttribute(new string[] {"specimen/specimen"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.SpecimenRole> SpecimenSpecimen {
            get { return this.specimenSpecimen; }
        }

        [Hl7XmlMappingAttribute(new string[] {"recordTarget/patient"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.Patient_1 RecordTargetPatient {
            get { return this.recordTargetPatient; }
            set { this.recordTargetPatient = value; }
        }

        /**
         * <summary>F:Test Identifier</summary>
         * 
         * <remarks><p>Must contain a value assigned by the 
         * order-placing organization that uniquely identifies this 
         * test request among all test requests in the receiving 
         * application.</p> <p>Used to uniquely identify this test. 
         * Necessary for order revisions and cancellations.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public ICollection<Identifier> TestIdentifier {
            get { return this.testIdentifier.RawSet(); }
        }

        [Hl7XmlMappingAttribute(new string[] {"performer/assignedEntity"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt090508ca.HealthcareOrganization PerformerAssignedEntity {
            get { return this.performerAssignedEntity; }
            set { this.performerAssignedEntity = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"callBackContact/assignedEntity"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareWorker> CallBackContactAssignedEntity {
            get { return this.callBackContactAssignedEntity; }
        }

        /**
         * <summary>G:Test Code</summary>
         * 
         * <remarks><p>LOINC code for the ordered test The value set 
         * bound to this attribute is a list of LOINC codes pulled from 
         * the pan-Canadian Laboratory Observation Code Database 
         * (pCLOCD). Only those records flagged as orderable or 
         * &quot;both&quot; in the pCLOCD can be used.</p> <p>Specifies 
         * the requested test to be performed.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ObservationOrderableLabType TestCode {
            get { return (ObservationOrderableLabType) this.testCode.Value; }
            set { this.testCode.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"informationRecipient/recipientChoice"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.IRecipientChoice> InformationRecipientRecipientChoice {
            get { return this.informationRecipientRecipientChoice; }
        }

        /**
         * <summary>I:Test Status</summary>
         * 
         * <remarks><p>The statusCode represents the &quot;state&quot; 
         * of the act e.g. active=in progress or not yet started, 
         * complete=resulted and/or result reported. It is up to the 
         * order placer to determine when, upon receipt of one or more 
         * results which fulfill this order, the order is complete.</p> 
         * <p>The statusCode represents the &quot;state&quot; of the 
         * test e.g. active=in progress or not yet started, 
         * complete=resulted and/or reported.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public ActStatus TestStatus {
            get { return (ActStatus) this.testStatus.Value; }
            set { this.testStatus.Value = value; }
        }

        /**
         * <summary>H:Test Request Time Specification</summary>
         * 
         * <remarks><p>The time specification for when this test is 
         * requested to be performed or occur or when the changes to 
         * the request took effect or are supposed to take effect. This 
         * time specification includes support for complex, repeating 
         * orders.</p> <p>Would be used to communicate that an Order is 
         * for a future date.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public IList<GeneralTimingSpecification> TestRequestTimeSpecification {
            get { return this.testRequestTimeSpecification.RawList(); }
        }

        [Hl7XmlMappingAttribute(new string[] {"verifier/assignedEntity"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareWorker> VerifierAssignedEntity {
            get { return this.verifierAssignedEntity; }
        }

        /**
         * <summary>L:Test Request Availability Time</summary>
         * 
         * <remarks><p>The date/time when this order is available.</p> 
         * <p>OLIS needs to be able to communicate the timestamp that 
         * it assigns to an ObservationRequest (test request) when the 
         * test request is created, revised, and whenever result 
         * information is added or revised. 
         * ObservationRequest.availabilityTime has been determined to 
         * be the most appropriate field.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"availabilityTime"})]
        public PlatformDate TestRequestAvailabilityTime {
            get { return this.testRequestAvailabilityTime.Value; }
            set { this.testRequestAvailabilityTime.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"occurrenceOf/actParentPointer"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ParentTest OccurrenceOfActParentPointer {
            get { return this.occurrenceOfActParentPointer; }
            set { this.occurrenceOfActParentPointer = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation1/outbreakEvent"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.Outbreak PertinentInformation1OutbreakEvent {
            get { return this.pertinentInformation1OutbreakEvent; }
            set { this.pertinentInformation1OutbreakEvent = value; }
        }

        /**
         * <summary>J:Test Priority Code</summary>
         * 
         * <remarks><p>Priority code associated with a specific 
         * test.</p> <p>Communicates requested test priority (e.g. 
         * routine, stat, etc.)</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"priorityCode"})]
        public ActPriority TestPriorityCode {
            get { return (ActPriority) this.testPriorityCode.Value; }
            set { this.testPriorityCode.Value = value; }
        }

        /**
         * <summary>K:Test Masking Indicator</summary>
         * 
         * <remarks><p>Any piece of information is potentially subject 
         * to 'masking', restricting it's availability from providers 
         * who have not been specifically authorized. Additionally, 
         * some clinical data requires the ability to mark as &quot;not 
         * for direct disclosure to patient&quot;. The values in this 
         * attribute enable the above masking to be represented and 
         * messaged.</p> <p>This code allows for privacy control by 
         * patients as well as flagged for 'not for disclosure to 
         * patient' by care providers.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public ICollection<x_BasicConfidentialityKind> TestMaskingIndicator {
            get { return this.testMaskingIndicator.RawSet<x_BasicConfidentialityKind>(); }
        }

        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation2/supportingClinicalObservationEvent"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.SupportingClinicalInformation> PertinentInformation2SupportingClinicalObservationEvent {
            get { return this.pertinentInformation2SupportingClinicalObservationEvent; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component1/referralRedirectIndicator"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ReferralRedirectIndicator Component1ReferralRedirectIndicator {
            get { return this.component1ReferralRedirectIndicator; }
            set { this.component1ReferralRedirectIndicator = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component2/requestSortKey"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.OrderSortKey Component2RequestSortKey {
            get { return this.component2RequestSortKey; }
            set { this.component2RequestSortKey = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component3/labInitiatedOrderIndicator"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.LabInitiatedOrderIndicator Component3LabInitiatedOrderIndicator {
            get { return this.component3LabInitiatedOrderIndicator; }
            set { this.component3LabInitiatedOrderIndicator = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component4/requestChoice"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt001999ca.IRequestChoice> Component4RequestChoice {
            get { return this.component4RequestChoice; }
        }

        [Hl7XmlMappingAttribute(new string[] {"fulfillment/resultChoice1"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt001999ca.IResultChoice> FulfillmentResultChoice1 {
            get { return this.fulfillmentResultChoice1; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf1"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.Includes> SubjectOf1 {
            get { return this.subjectOf1; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf2/controlActEvent"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt130001ca.VersionInformation SubjectOf2ControlActEvent {
            get { return this.subjectOf2ControlActEvent; }
            set { this.subjectOf2ControlActEvent = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"componentOf/priorActRequest"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.PriorTestRequest ComponentOfPriorActRequest {
            get { return this.componentOfPriorActRequest; }
            set { this.componentOfPriorActRequest = value; }
        }

    }

}