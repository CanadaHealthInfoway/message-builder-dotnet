/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:09:22 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 3983 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt004100ca {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt090508ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt130001ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Culture Grouper Observation</summary>
     * 
     * <remarks><p>This culture observation is the grouping 
     * observation for all information related to the culturing of 
     * the collected specimen to identify micro-organisms and the 
     * further, optional testing for antibiotic sensitivities.</p> 
     * <p>This mandatory culture observation is the grouping 
     * observation for all information related to the culturing of 
     * the collected specimen to identify micro-organisms and the 
     * further, optional testing for antibiotic sensitivities.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"POLB_MT004100CA.Culture"})]
    public class CultureGrouperObservation : MessagePartBean {

        private SET<II, Identifier> cultureIdentifier;
        private CD cultureType;
        private CS cultureStatus;
        private IVL<TS, Interval<PlatformDate>> cultureEffectiveTime;
        private SET<CV, Code> resultMaskingIndicator;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ReportSectionSpecimen specimen;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ElectronicResultReceiver> receiver;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.WasPerformedBy> performer;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt090508ca.HealthcareOrganization primaryInformationRecipientAssignedEntity;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.IFulfillmentChoice> inFulfillmentOfFulfillmentChoice;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.SupportingClinicalInformation> pertinentInformation1SupportingClinicalObservationEvent;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.Outbreak pertinentInformation2OutbreakEvent;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt004100ca.CultureObservations> component1CultureObservationEvent;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ResultSortKey component2ResultSortKey;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt004100ca.HasAComponent> component3;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ReportableHealthIndicator> component4ReportableTestIndicator;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt130001ca.VersionInformation subjectOf1ControlActEvent;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.Includes> subjectOf2;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ResultStatusProcessStep subjectOf3ResultStatusProcessStep;

        public CultureGrouperObservation() {
            this.cultureIdentifier = new SETImpl<II, Identifier>(typeof(IIImpl));
            this.cultureType = new CDImpl();
            this.cultureStatus = new CSImpl();
            this.cultureEffectiveTime = new IVLImpl<TS, Interval<PlatformDate>>();
            this.resultMaskingIndicator = new SETImpl<CV, Code>(typeof(CVImpl));
            this.receiver = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ElectronicResultReceiver>();
            this.performer = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.WasPerformedBy>();
            this.inFulfillmentOfFulfillmentChoice = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.IFulfillmentChoice>();
            this.pertinentInformation1SupportingClinicalObservationEvent = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.SupportingClinicalInformation>();
            this.component1CultureObservationEvent = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt004100ca.CultureObservations>();
            this.component3 = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt004100ca.HasAComponent>();
            this.component4ReportableTestIndicator = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ReportableHealthIndicator>();
            this.subjectOf2 = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.Includes>();
        }
        /**
         * <summary>Culture Identifier</summary>
         * 
         * <remarks><p>Unique to identify this culture test.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public ICollection<Identifier> CultureIdentifier {
            get { return this.cultureIdentifier.RawSet(); }
        }

        /**
         * <summary>Culture Type</summary>
         * 
         * <remarks><p>Describes the type of culture. LOINC codes are 
         * used for this attribute which also &quot;carry&quot; the 
         * specimen source e.g. ear, blood, etc.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public Code CultureType {
            get { return (Code) this.cultureType.Value; }
            set { this.cultureType.Value = value; }
        }

        /**
         * <summary>Culture Status</summary>
         * 
         * <remarks><p>Status of the Culture.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public ActStatus CultureStatus {
            get { return (ActStatus) this.cultureStatus.Value; }
            set { this.cultureStatus.Value = value; }
        }

        /**
         * <summary>Culture Effective Time</summary>
         * 
         * <remarks><p>Effective time associated with the Culture.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> CultureEffectiveTime {
            get { return this.cultureEffectiveTime.Value; }
            set { this.cultureEffectiveTime.Value = value; }
        }

        /**
         * <summary>Result Masking Indicator</summary>
         * 
         * <remarks><p>Any piece of information is potentially subject 
         * to 'masking', restricting it's availability from providers 
         * who have not been specifically authorized. Additionally, 
         * some clinical data requires the ability to mark as &quot;not 
         * for direct disclosure to patient&quot;. The values in this 
         * attribute enable the above masking to be represented and 
         * messaged.</p> <p>This code allows for privacy control by 
         * patients as well as flagged for 'not for disclosure to 
         * patient' by care providers.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public ICollection<x_BasicConfidentialityKind> ResultMaskingIndicator {
            get { return this.resultMaskingIndicator.RawSet<x_BasicConfidentialityKind>(); }
        }

        [Hl7XmlMappingAttribute(new string[] {"specimen"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ReportSectionSpecimen Specimen {
            get { return this.specimen; }
            set { this.specimen = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"receiver"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ElectronicResultReceiver> Receiver {
            get { return this.receiver; }
        }

        [Hl7XmlMappingAttribute(new string[] {"performer"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.WasPerformedBy> Performer {
            get { return this.performer; }
        }

        [Hl7XmlMappingAttribute(new string[] {"primaryInformationRecipient/assignedEntity"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt090508ca.HealthcareOrganization PrimaryInformationRecipientAssignedEntity {
            get { return this.primaryInformationRecipientAssignedEntity; }
            set { this.primaryInformationRecipientAssignedEntity = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"inFulfillmentOf/fulfillmentChoice"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.IFulfillmentChoice> InFulfillmentOfFulfillmentChoice {
            get { return this.inFulfillmentOfFulfillmentChoice; }
        }

        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation1/supportingClinicalObservationEvent"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.SupportingClinicalInformation> PertinentInformation1SupportingClinicalObservationEvent {
            get { return this.pertinentInformation1SupportingClinicalObservationEvent; }
        }

        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation2/outbreakEvent"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.Outbreak PertinentInformation2OutbreakEvent {
            get { return this.pertinentInformation2OutbreakEvent; }
            set { this.pertinentInformation2OutbreakEvent = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component1/cultureObservationEvent"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt004100ca.CultureObservations> Component1CultureObservationEvent {
            get { return this.component1CultureObservationEvent; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component2/resultSortKey"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ResultSortKey Component2ResultSortKey {
            get { return this.component2ResultSortKey; }
            set { this.component2ResultSortKey = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component3"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Polb_mt004100ca.HasAComponent> Component3 {
            get { return this.component3; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component4/reportableTestIndicator"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ReportableHealthIndicator> Component4ReportableTestIndicator {
            get { return this.component4ReportableTestIndicator; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf1/controlActEvent"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt130001ca.VersionInformation SubjectOf1ControlActEvent {
            get { return this.subjectOf1ControlActEvent; }
            set { this.subjectOf1ControlActEvent = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf2"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.Includes> SubjectOf2 {
            get { return this.subjectOf2; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf3/resultStatusProcessStep"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Lab.Merged.ResultStatusProcessStep SubjectOf3ResultStatusProcessStep {
            get { return this.subjectOf3ResultStatusProcessStep; }
            set { this.subjectOf3ResultStatusProcessStep = value; }
        }

    }

}