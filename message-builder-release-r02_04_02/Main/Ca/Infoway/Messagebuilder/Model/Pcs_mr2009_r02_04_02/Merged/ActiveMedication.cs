/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:00:08 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 3886 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt490102ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt220100ca;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>ActiveMedication</summary>
     * 
     * <remarks>COCT_MT260010CA.SubstanceAdministration: Active 
     * Medication <p>Indicates an active medication (prescription 
     * or non-prescription medication) that is recorded in the 
     * patients record and which contributed to triggering the 
     * issue.</p> <p>Allows providers to identify the offending 
     * drugs when determining their management approach.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"COCT_MT260010CA.SubstanceAdministration","COCT_MT260020CA.SubstanceAdministration","FICR_MT400001CA.SubstanceAdministration","FICR_MT400003CA.SubstanceAdministration","FICR_MT400004CA.SubstanceAdministration","FICR_MT490101CA.SubstanceAdministration","FICR_MT490102CA.SubstanceAdministration"})]
    public class ActiveMedication : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.ICausalActs, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Merged.ISpecialAuthorizationChoice {

        private PQ doseQuantity;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt490102ca.Medication directTargetMedication;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.Medicine directTargetMedicationAdministerableMedicine;
        private CS otherMedicationIndicator;
        private II activeMedicationRecordNumber;
        private CD administrationType;
        private CS activeMedicationStatus;
        private IVL<TS, Interval<PlatformDate>> activeMedicationTimeRange;
        private SET<CV, Code> activeMedicationMaskingIndicator;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt220100ca.DrugProduct consumableMedication;

        public ActiveMedication() {
            this.doseQuantity = new PQImpl();
            this.otherMedicationIndicator = new CSImpl();
            this.activeMedicationRecordNumber = new IIImpl();
            this.administrationType = new CDImpl();
            this.activeMedicationStatus = new CSImpl();
            this.activeMedicationTimeRange = new IVLImpl<TS, Interval<PlatformDate>>();
            this.activeMedicationMaskingIndicator = new SETImpl<CV, Code>(typeof(CVImpl));
        }
        /**
         * <summary>D:Active Medication Dose Quantity</summary>
         * 
         * <remarks><p>The amount of medication administered to the 
         * patient</p> <p>Requested Dosage 
         * Level</p><p>ZPS.12</p><p>ZDU.4.4</p><p>Contraindication.dosageAmount</p> 
         * <p>Requested Dosage 
         * Level</p><p>ZPS.12</p><p>ZDU.4.4</p><p>Contraindication.dosageAmount</p> 
         * <p>Requested Dosage 
         * Level</p><p>ZPS.12</p><p>ZDU.4.4</p><p>Contraindication.dosageAmount</p> 
         * <p>Requested Dosage 
         * Level</p><p>ZPS.12</p><p>ZDU.4.4</p><p>Contraindication.dosageAmount</p> 
         * <p>Used in Low Dose/High Dose issues.</p> Drug Dose Strength 
         * D:Active Medication Dose Quantity</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"doseQuantity"})]
        public PhysicalQuantity DoseQuantity {
            get { return this.doseQuantity.Value; }
            set { this.doseQuantity.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"directTarget/medication"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Claims.Ficr_mt490102ca.Medication DirectTargetMedication {
            get { return this.directTargetMedication; }
            set { this.directTargetMedication = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"directTarget/medication/administerableMedicine"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.Medicine DirectTargetMedicationAdministerableMedicine {
            get { return this.directTargetMedicationAdministerableMedicine; }
            set { this.directTargetMedicationAdministerableMedicine = value; }
        }

        /**
         * <summary>OtherMedicationIndicator</summary>
         * 
         * <remarks>Other Medication Indicator <p>If the attribute is 
         * 'RQO', represents a prescription or dispense record. 
         * Otherwise if 'EVN', it represents an 'Other Medication' 
         * record.</p> <p>Knowing whether a drug is prescribed or not 
         * can influence actions taken to mitigate an issue. This 
         * attribute is therefore mandatory.</p> Other Medication 
         * Indicator</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"moodCode"})]
        public x_ActMoodRequestEvent OtherMedicationIndicator {
            get { return (x_ActMoodRequestEvent) this.otherMedicationIndicator.Value; }
            set { this.otherMedicationIndicator.Value = value; }
        }

        /**
         * <summary>ActiveMedicationRecordNumber</summary>
         * 
         * <remarks>A:Active Medication Record Number A:Active 
         * Medication Record Number <p>Unique identifier of the 
         * prescription or other medication drug record that triggered 
         * the issue.</p> 
         * <p>DDI/DuplicateTherapy.InteractingPrescriptionNumber</p><p>InteractingPrescription.PrescriptionExternalKey</p><p>InteractingPrescription.PrescriptionNumber</p><p>DDI/Dosage/Duplicate 
         * Therapy.SourceNumber (All senders must uniquely identify 
         * prescriptions on request)</p> 
         * <p>DDI/DuplicateTherapy.InteractingPrescriptionNumber</p><p>InteractingPrescription.PrescriptionExternalKey</p><p>InteractingPrescription.PrescriptionNumber</p><p>DDI/Dosage/Duplicate 
         * Therapy.SourceNumber (All senders must uniquely identify 
         * prescriptions on request)</p> 
         * <p>DDI/DuplicateTherapy.InteractingPrescriptionNumber</p><p>InteractingPrescription.PrescriptionExternalKey</p><p>InteractingPrescription.PrescriptionNumber</p><p>DDI/Dosage/Duplicate 
         * Therapy.SourceNumber (All senders must uniquely identify 
         * prescriptions on request)</p> 
         * <p>DDI/DuplicateTherapy.InteractingPrescriptionNumber</p><p>InteractingPrescription.PrescriptionExternalKey</p><p>InteractingPrescription.PrescriptionNumber</p><p>DDI/Dosage/Duplicate 
         * Therapy.SourceNumber (All senders must uniquely identify 
         * prescriptions on request)</p> <p>Allows provider to 
         * drill-down and retrieve additional information about the 
         * implicated drug therapy to either modify the therapy or to 
         * learn more information in determining their management 
         * approach for the issue.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier ActiveMedicationRecordNumber {
            get { return this.activeMedicationRecordNumber.Value; }
            set { this.activeMedicationRecordNumber.Value = value; }
        }

        /**
         * <summary>AdministrationType</summary>
         * 
         * <remarks>Administration Type <p>Identifies whether the 
         * interaction is with a drug or a vaccine. For SNOMED, may 
         * also indicate the specific drug or vaccine at issue.</p> 
         * <p>Needed to determine what to do about the issue. Because 
         * the medication can be masked, this element is only marked as 
         * 'populated'.</p><p>The element allows a full 'CD' type to 
         * support SNOMED implementations.</p> <p>Needed to determine 
         * what to do about the issue. Because the medication can be 
         * masked, this element is only marked as 
         * 'populated'.</p><p>The element allows a full 'CD' type to 
         * support SNOMED implementations.</p> Administration Type</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ActSubstanceAdministrationCode AdministrationType {
            get { return (ActSubstanceAdministrationCode) this.administrationType.Value; }
            set { this.administrationType.Value = value; }
        }

        /**
         * <summary>ActiveMedicationStatus</summary>
         * 
         * <remarks>B:Active Medication Status B:Active Medication 
         * Status <p>Indicates the status of the medication record at 
         * the time of the issue.</p> <p>ZPB3.8 (aborted = 
         * discontinued; nullified = reversed/system reversed; 
         * active=filled/not-filled)</p> <p>Used to determine the 
         * relevance of the issue and the need to manage it. For 
         * example, if the medication is on hold, it may be less of an 
         * issue than if it is being actively taken.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public ActStatus ActiveMedicationStatus {
            get { return (ActStatus) this.activeMedicationStatus.Value; }
            set { this.activeMedicationStatus.Value = value; }
        }

        /**
         * <summary>ActiveMedicationTimeRange</summary>
         * 
         * <remarks>C:Active Medication Time-range C:Active Medication 
         * Time-range <p>The date and time during which the patient is 
         * expected to be taking the drug which triggered the 
         * issue.</p> <p>Requested Duration</p> <p>Allows the provider 
         * to evaluate duplicate therapy and similar timing-based 
         * issues.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> ActiveMedicationTimeRange {
            get { return this.activeMedicationTimeRange.Value; }
            set { this.activeMedicationTimeRange.Value = value; }
        }

        /**
         * <summary>ActiveMedicationMaskingIndicator</summary>
         * 
         * <remarks>E:Active Medication Masking Indicator <p>An 
         * indication of sensitivity surrounding the related drug, and 
         * thus defines the required sensitivity for the detected 
         * issue.</p> <p>Conveys the patients wishes relating to the 
         * sensitivity of the drug information.</p><p>The attribute is 
         * optional because not all systems will support masking.</p> 
         * <p>Conveys the patients wishes relating to the sensitivity 
         * of the drug information.</p><p>The attribute is optional 
         * because not all systems will support masking.</p> E:Active 
         * Medication Masking Indicator</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public ICollection<x_BasicConfidentialityKind> ActiveMedicationMaskingIndicator {
            get { return this.activeMedicationMaskingIndicator.RawSet<x_BasicConfidentialityKind>(); }
        }

        [Hl7XmlMappingAttribute(new string[] {"consumable/medication"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt220100ca.DrugProduct ConsumableMedication {
            get { return this.consumableMedication; }
            set { this.consumableMedication = value; }
        }

    }

}