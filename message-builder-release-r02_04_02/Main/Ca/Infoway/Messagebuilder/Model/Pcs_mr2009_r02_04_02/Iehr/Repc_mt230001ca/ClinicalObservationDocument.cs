/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:07:10 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 3955 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Iehr.Repc_mt230001ca {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt090508ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Iehr.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Clinical Observation Document</summary>
     * 
     * <remarks><p>Annotation is only permitted if Annotation 
     * Indicator is not present and vice versa</p> <p>Represents a 
     * particular health-related document pertaining to a single 
     * patient.</p> <p>Allows the capture of patient health data in 
     * an encapsulated, contextualized manner with capability of 
     * displaying rendered content and communication between simple 
     * systems.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"REPC_MT230001CA.Document"})]
    public class ClinicalObservationDocument : MessagePartBean {

        private CV documentCategory;
        private ST documentTitle;
        private SET<CV, Code> documentMaskingIndicators;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Iehr.Repc_mt230001ca.Author author;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.IActingPerson informantActingPerson;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Iehr.Merged.IRecipients> primaryInformationRecipientRecipients;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Iehr.Merged.OldClinicalDocumentEvent> predecessorOldClinicalDocumentEvent;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Iehr.Repc_mt230001ca.Section componentStructuredBodyComponentSection;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.Includes subjectOf;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.CareCompositions> componentOfPatientCareProvisionEvent;

        public ClinicalObservationDocument() {
            this.documentCategory = new CVImpl();
            this.documentTitle = new STImpl();
            this.documentMaskingIndicators = new SETImpl<CV, Code>(typeof(CVImpl));
            this.primaryInformationRecipientRecipients = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Iehr.Merged.IRecipients>();
            this.predecessorOldClinicalDocumentEvent = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Iehr.Merged.OldClinicalDocumentEvent>();
            this.componentOfPatientCareProvisionEvent = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.CareCompositions>();
        }
        /**
         * <summary>B: Document Category</summary>
         * 
         * <remarks></p> </p> </p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ClinicalReportDocumentType DocumentCategory {
            get { return (ClinicalReportDocumentType) this.documentCategory.Value; }
            set { this.documentCategory.Value = value; }
        }

        /**
         * <summary>J: Document Title</summary>
         * 
         * <remarks><p>A human-readable label for this particular 
         * document.</p> <p>This is a human-recognizable name intended 
         * to be displayed on the screen in list transactions and is 
         * therefore mandatory. It provides a good indication of the 
         * content of the document at a quick glance.</p> <p>Titles do 
         * not necessarily need to be unique, but should be 
         * precise-enough to give a pretty good idea of what the 
         * document contains. For example &quot;Right Knee Arthroscopy 
         * Report, Jan 3, 2006&quot; would represent a good title. 
         * &quot;Surgery Report&quot; would not.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"title"})]
        public String DocumentTitle {
            get { return this.documentTitle.Value; }
            set { this.documentTitle.Value = value; }
        }

        /**
         * <summary>E: Document Masking Indicators</summary>
         * 
         * <remarks></p> </p> </p> </p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public ICollection<x_BasicConfidentialityKind> DocumentMaskingIndicators {
            get { return this.documentMaskingIndicators.RawSet<x_BasicConfidentialityKind>(); }
        }

        [Hl7XmlMappingAttribute(new string[] {"author"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Iehr.Repc_mt230001ca.Author Author {
            get { return this.author; }
            set { this.author = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"informant/actingPerson"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.IActingPerson InformantActingPerson {
            get { return this.informantActingPerson; }
            set { this.informantActingPerson = value; }
        }

        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareWorker InformantActingPersonAsAssignedEntity1 {
            get { return this.informantActingPerson is Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareWorker ? (Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareWorker) this.informantActingPerson : (Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareWorker) null; }
        }
        public bool HasInformantActingPersonAsAssignedEntity1() {
            return (this.informantActingPerson is Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.HealthcareWorker);
        }

        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt090508ca.HealthcareOrganization InformantActingPersonAsAssignedEntity2 {
            get { return this.informantActingPerson is Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt090508ca.HealthcareOrganization ? (Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt090508ca.HealthcareOrganization) this.informantActingPerson : (Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt090508ca.HealthcareOrganization) null; }
        }
        public bool HasInformantActingPersonAsAssignedEntity2() {
            return (this.informantActingPerson is Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Coct_mt090508ca.HealthcareOrganization);
        }

        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.Patient_2 InformantActingPersonAsPatient {
            get { return this.informantActingPerson is Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.Patient_2 ? (Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.Patient_2) this.informantActingPerson : (Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.Patient_2) null; }
        }
        public bool HasInformantActingPersonAsPatient() {
            return (this.informantActingPerson is Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Common.Merged.Patient_2);
        }

        [Hl7XmlMappingAttribute(new string[] {"primaryInformationRecipient/recipients"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Iehr.Merged.IRecipients> PrimaryInformationRecipientRecipients {
            get { return this.primaryInformationRecipientRecipients; }
        }

        [Hl7XmlMappingAttribute(new string[] {"predecessor/oldClinicalDocumentEvent"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Iehr.Merged.OldClinicalDocumentEvent> PredecessorOldClinicalDocumentEvent {
            get { return this.predecessorOldClinicalDocumentEvent; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component/structuredBody/component/section"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Iehr.Repc_mt230001ca.Section ComponentStructuredBodyComponentSection {
            get { return this.componentStructuredBodyComponentSection; }
            set { this.componentStructuredBodyComponentSection = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.Includes SubjectOf {
            get { return this.subjectOf; }
            set { this.subjectOf = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"componentOf/patientCareProvisionEvent"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.CareCompositions> ComponentOfPatientCareProvisionEvent {
            get { return this.componentOfPatientCareProvisionEvent; }
        }

    }

}