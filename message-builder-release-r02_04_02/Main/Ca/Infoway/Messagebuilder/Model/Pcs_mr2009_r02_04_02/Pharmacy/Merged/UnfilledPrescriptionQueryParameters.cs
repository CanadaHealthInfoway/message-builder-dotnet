/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:10:42 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 3991 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Pharmacy.Merged {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>UnfilledPrescriptionQueryParameters</summary>
     * 
     * <remarks>PORX_MT060270CA.ParameterList: (no business name) 
     * <p>Defines the set of parameters that may be used to filter 
     * the query response.</p> <p>Root class for query 
     * definition</p> PORX_MT060240CA.ParameterList: Unfilled 
     * Prescription Query Parameters <p>Defines the set of 
     * parameters that may be used to filter the query 
     * response.</p> <p>Root class for query definition</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"PORX_MT060240CA.ParameterList","PORX_MT060270CA.ParameterList"})]
    public class UnfilledPrescriptionQueryParameters : MessagePartBean {

        private IVL<TS, Interval<PlatformDate>> administrationEffectivePeriod;
        private II prescriberProviderID;
        private IList<CV> prescriptionStatuses;
        private CV rxDispenseIndicator;

        public UnfilledPrescriptionQueryParameters() {
            this.administrationEffectivePeriod = new IVLImpl<TS, Interval<PlatformDate>>();
            this.prescriberProviderID = new IIImpl();
            this.prescriptionStatuses = new List<CV>();
            this.rxDispenseIndicator = new CVImpl();
        }
        /**
         * <summary>AdministrationEffectivePeriod</summary>
         * 
         * <remarks>D:Administration Effective Period <p>Indicates the 
         * administration period for which the request/query 
         * applies.</p><p>Filter the result set to include only those 
         * medication records (prescription order, prescription 
         * dispense and other active medication) for which the patient 
         * was deemed to be taking the drug within the specified 
         * period.</p> <p>Indicates the administration period for which 
         * the request/query applies.</p><p>Filter the result set to 
         * include only those medication records (prescription order, 
         * prescription dispense and other active medication) for which 
         * the patient was deemed to be taking the drug within the 
         * specified period.</p> <p>Allows the requester to specify the 
         * administration period of interest for the retrieval. Useful 
         * for constraining run-away queries.</p> E:Administration 
         * Effective Period <p>Indicates the administration period for 
         * which the request/query applies.</p><p>Filter the result set 
         * to include only those medication records (prescription 
         * order, prescription dispense and other active medication) 
         * for which the patient was deemed to be taking the drug 
         * within the specified period.</p> <p>Indicates the 
         * administration period for which the request/query 
         * applies.</p><p>Filter the result set to include only those 
         * medication records (prescription order, prescription 
         * dispense and other active medication) for which the patient 
         * was deemed to be taking the drug within the specified 
         * period.</p> <p>Allows the requester to specify the 
         * administration period of interest for the retrieval. Useful 
         * for constraining run-away queries.</p> <p>The determination 
         * for applicability for inclusion in the query response should 
         * be considered to be the 'Pick up date plus the days 
         * supply'</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"administrationEffectivePeriod/value"})]
        public Interval<PlatformDate> AdministrationEffectivePeriod {
            get { return this.administrationEffectivePeriod.Value; }
            set { this.administrationEffectivePeriod.Value = value; }
        }

        /**
         * <summary>PrescriberProviderID</summary>
         * 
         * <remarks>D:Prescriber Provider ID <p>Identifier of the 
         * prescriber who created and/or supervised the prescriptions 
         * being retrieved.</p><p>The result set will be filtered to 
         * only include records which were either directly created by 
         * this provider, or were created 'under the supervision' of 
         * this provider.</p> <p>Identifier of the prescriber who 
         * created and/or supervised the prescriptions being 
         * retrieved.</p><p>The result set will be filtered to only 
         * include records which were either directly created by this 
         * provider, or were created 'under the supervision' of this 
         * provider.</p> <p>Allows for the retrieval of prescriptions 
         * based on a specific prescriber.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"prescriberProviderID/value"})]
        public Identifier PrescriberProviderID {
            get { return this.prescriberProviderID.Value; }
            set { this.prescriberProviderID.Value = value; }
        }

        /**
         * <summary>PrescriptionStatuses</summary>
         * 
         * <remarks>E:Prescription Statuses <p>Indicates that 
         * prescriptions of a specific statuses are to be included in 
         * the result set. Allowable prescription status codes are: 
         * 'ABORTED, ACTIVE', 'COMPLETED', and 'SUSPENDED'.</p> 
         * <p>Allows for the retrieval of patient prescriptions and 
         * dispenses based on the lifecycle state of the 
         * prescription.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"prescriptionStatus/value"})]
        public IList<ActStatus> PrescriptionStatuses {
            get { return new RawListWrapper<CV, ActStatus>(prescriptionStatuses, typeof(CVImpl)); }
        }

        /**
         * <summary>RxDispenseIndicator</summary>
         * 
         * <remarks>Rx Dispense Indicator <p>A coded value indicating 
         * the dispensing (fill) status of the prescription to be 
         * included in the result set. The only allowable Rx Dispense 
         * Indicators is N (Never Dispensed).</p> <p>Allows for finer 
         * sub-set of prescriptions to be retrieved based on the fill 
         * status of the prescription.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"rxDispenseIndicator/value"})]
        public PrescriptionDispenseFilterCode RxDispenseIndicator {
            get { return (PrescriptionDispenseFilterCode) this.rxDispenseIndicator.Value; }
            set { this.rxDispenseIndicator.Value = value; }
        }

    }

}