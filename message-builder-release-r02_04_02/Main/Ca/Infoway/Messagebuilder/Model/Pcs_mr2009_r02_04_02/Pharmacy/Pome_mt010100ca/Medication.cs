/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:10:58 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 3994 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Pharmacy.Pome_mt010100ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Pharmacy.Merged;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Medication</summary>
     * 
     * <remarks><p>Represents a particular medicine or herbal 
     * product which might be prescribed or administered.</p> 
     * <p>Allows retrieval of summary about one or more products 
     * when searching for a medication</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"POME_MT010100CA.AdministerableMaterial"})]
    public class Medication : MessagePartBean {

        private CV drugCode;
        private SET<TN, TrivialName> drugNames;
        private ST description;
        private CV drugForm;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.Manufacturer administerableMedicineAsManufacturedProductManufacturer;
        private CS regulatoryStatusCode;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.DispensedIn administerableMedicineAsContent;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Pharmacy.Merged.GroupedWithin> administerableMedicineAsSpecializedKind;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.DrugContains> administerableMedicineIngredient;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Pharmacy.Merged.DrugCost subjectOf1PotentialCharge;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Pharmacy.Merged.AppearanceCharacteristics> subjectOf2Characteristic;

        public Medication() {
            this.drugCode = new CVImpl();
            this.drugNames = new SETImpl<TN, TrivialName>(typeof(TNImpl));
            this.description = new STImpl();
            this.drugForm = new CVImpl();
            this.regulatoryStatusCode = new CSImpl();
            this.administerableMedicineAsSpecializedKind = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Pharmacy.Merged.GroupedWithin>();
            this.administerableMedicineIngredient = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.DrugContains>();
            this.subjectOf2Characteristic = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Pharmacy.Merged.AppearanceCharacteristics>();
        }
        /**
         * <summary>A:Drug Code</summary>
         * 
         * <remarks><p>An identifier for a type of drug. Depending on 
         * where the drug is being referenced, the drug may be 
         * identified at different levels of abstraction. E.g. 
         * Manufactured drug (including vaccines), generic formulation, 
         * generic, therapeutic class, etc.</p> <p>Used to ensure clear 
         * communication by uniquely identifying a particular drug 
         * product when prescribing or dispensing. This attribute is 
         * only constrained to 'required' because some custom compounds 
         * will not have unique identifiers.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"administerableMedicine/code"})]
        public ClinicalDrug DrugCode {
            get { return (ClinicalDrug) this.drugCode.Value; }
            set { this.drugCode.Value = value; }
        }

        /**
         * <summary>B:Drug Names</summary>
         * 
         * <remarks><p>The name assigned to a drug.</p> <p>Names are 
         * used for human reference communication, to allow selection 
         * from dropdowns and for local searching. Up to two names are 
         * supported: a 'search name' which is fully formed with no 
         * abbreviations, and a 'display name' which may contain 
         * abbreviations to fit within a smaller area on the screen. 
         * Because names are the one attribute that exist for all 
         * attributes, this element is mandatory.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"administerableMedicine/name"})]
        public ICollection<TrivialName> DrugNames {
            get { return this.drugNames.RawSet(); }
        }

        /**
         * <summary>Description</summary>
         * 
         * <remarks><p>A free form textual description of a drug. This 
         * usually is only recorded for custom compounds, providing 
         * instructions on the composition and creation of the 
         * compound.</p> <p>Allows description of compound ingredients 
         * and/or recipe in free text form.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"administerableMedicine/desc"})]
        public String Description {
            get { return this.description.Value; }
            set { this.description.Value = value; }
        }

        /**
         * <summary>D:Drug Form</summary>
         * 
         * <remarks><p>Indicates the form in which the drug product 
         * must be, or has been manufactured or custom prepared.</p> 
         * <p>Provides a constrained vocabulary for describing dose 
         * forms. The form of the drug influences how it can be used by 
         * the patient.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"administerableMedicine/formCode"})]
        public OrderableDrugForm DrugForm {
            get { return (OrderableDrugForm) this.drugForm.Value; }
            set { this.drugForm.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"administerableMedicine/asManufacturedProduct/manufacturer"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.Manufacturer AdministerableMedicineAsManufacturedProductManufacturer {
            get { return this.administerableMedicineAsManufacturedProductManufacturer; }
            set { this.administerableMedicineAsManufacturedProductManufacturer = value; }
        }

        /**
         * <summary>Regulatory Status Code</summary>
         * 
         * <remarks><p>Indicates whether the drug is approved for use 
         * in Canada or not. (active = approved for use; pending or 
         * terminated = not approved for use)</p> <p>Allows providers 
         * to evaluate the validity of the medication for use in 
         * Canada.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"administerableMedicine/asRegulatedProduct/statusCode"})]
        public RoleStatusNormal RegulatoryStatusCode {
            get { return (RoleStatusNormal) this.regulatoryStatusCode.Value; }
            set { this.regulatoryStatusCode.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"administerableMedicine/asContent"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.DispensedIn AdministerableMedicineAsContent {
            get { return this.administerableMedicineAsContent; }
            set { this.administerableMedicineAsContent = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"administerableMedicine/asSpecializedKind"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Pharmacy.Merged.GroupedWithin> AdministerableMedicineAsSpecializedKind {
            get { return this.administerableMedicineAsSpecializedKind; }
        }

        [Hl7XmlMappingAttribute(new string[] {"administerableMedicine/ingredient"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.DrugContains> AdministerableMedicineIngredient {
            get { return this.administerableMedicineIngredient; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf1/potentialCharge"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Pharmacy.Merged.DrugCost SubjectOf1PotentialCharge {
            get { return this.subjectOf1PotentialCharge; }
            set { this.subjectOf1PotentialCharge = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf2/characteristic"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Pharmacy.Merged.AppearanceCharacteristics> SubjectOf2Characteristic {
            get { return this.subjectOf2Characteristic; }
        }

    }

}