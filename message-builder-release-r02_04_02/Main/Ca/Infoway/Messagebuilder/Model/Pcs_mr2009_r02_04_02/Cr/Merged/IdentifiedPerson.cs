/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:05:21 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 3932 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Cr.Merged {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>IdentifiedPerson</summary>
     * 
     * <remarks>PRPA_MT101102CA.IdentifiedEntity: Identified Person 
     * <p>The IdentifiedEntity class is the entry point to the 
     * R-MIM and contains one or more identifiers (for example an 
     * &quot;internal&quot; id used only by computer systems and an 
     * &quot;external&quot; id for display to users) for the Person 
     * in the Client Registry. The statusCode is set to 
     * &quot;active&quot;. The beginning of the effectiveTime is 
     * when the record was added to the registry.</p> <p>Provides 
     * the message entry point required to add a person to the 
     * Client Registry</p> PRPA_MT101106CA.IdentifiedEntity: 
     * Identified Person <p>The IdentifiedEntity class is the entry 
     * point to the R-MIM and contains one or more identifiers (for 
     * example an &quot;internal&quot; id used only by computer 
     * systems and an &quot;external&quot; id for display to users) 
     * for the Person in the Client Registry. The statusCode is set 
     * to &quot;active&quot;. The beginning of the effectiveTime is 
     * when the record was added to the registry.</p> <p>Provides 
     * the message entry point required to add a person to the 
     * Client Registry</p> PRPA_MT101104CA.IdentifiedEntity: 
     * Identified Person <p>The IdentifiedEntity class is the entry 
     * point to the R-MIM and contains one or more identifiers (for 
     * example an &quot;internal&quot; id used only by computer 
     * systems and an &quot;external&quot; id for display to users) 
     * for the Person in the Client Registry. The statusCode is set 
     * to &quot;active&quot;. The beginning of the effectiveTime is 
     * when the record was added to the registry.</p> <p>Provides 
     * the message entry point required to add a person to the 
     * Client Registry</p> PRPA_MT101002CA.IdentifiedEntity: 
     * Identified Person <p>The IdentifiedEntity class is the entry 
     * point to the R-MIM and contains one or more identifiers (for 
     * example an &quot;internal&quot; id used only by computer 
     * systems and an &quot;external&quot; id for display to users) 
     * for the Person in the Client Registry. The statusCode is set 
     * to &quot;active&quot;. The beginning of the effectiveTime is 
     * when the record was added to the registry.</p> <p>Provides 
     * the message entry point required to add a person to the 
     * Client Registry</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"PRPA_MT101002CA.IdentifiedEntity","PRPA_MT101102CA.IdentifiedEntity","PRPA_MT101104CA.IdentifiedEntity","PRPA_MT101106CA.IdentifiedEntity"})]
    public class IdentifiedPerson : MessagePartBean {

        private SET<II, Identifier> clientHealthcareIdentificationNumber;
        private CS clientStatusCode;
        private IVL<TS, Interval<PlatformDate>> clientEffectiveTime;
        private CV clientMaskedInformation;
        private LIST<PN, PersonName> clientName;
        private LIST<TEL, TelecommunicationAddress> clientTelecom;
        private CV clientGender;
        private TS clientDateOfBirth;
        private BL clientDeceasedIndicator;
        private TS clientDeceasedDate;
        private BL clientMultipleBirthIndicator;
        private INT clientMultipleBirthOrderNumber;
        private LIST<AD, PostalAddress> clientAddress;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Cr.Merged.OtherIDsNonHealthcareIdentifiers> identifiedPersonAsOtherIDs;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Cr.Merged.PersonalRelationship> identifiedPersonPersonalRelationship;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.LanguageCommunication> identifiedPersonLanguageCommunication;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Cr.Merged.ConfidenceValue subjectOfObservationEvent;

        public IdentifiedPerson() {
            this.clientHealthcareIdentificationNumber = new SETImpl<II, Identifier>(typeof(IIImpl));
            this.clientStatusCode = new CSImpl();
            this.clientEffectiveTime = new IVLImpl<TS, Interval<PlatformDate>>();
            this.clientMaskedInformation = new CVImpl();
            this.clientName = new LISTImpl<PN, PersonName>(typeof(PNImpl));
            this.clientTelecom = new LISTImpl<TEL, TelecommunicationAddress>(typeof(TELImpl));
            this.clientGender = new CVImpl();
            this.clientDateOfBirth = new TSImpl();
            this.clientDeceasedIndicator = new BLImpl();
            this.clientDeceasedDate = new TSImpl();
            this.clientMultipleBirthIndicator = new BLImpl();
            this.clientMultipleBirthOrderNumber = new INTImpl();
            this.clientAddress = new LISTImpl<AD, PostalAddress>(typeof(ADImpl));
            this.identifiedPersonAsOtherIDs = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Cr.Merged.OtherIDsNonHealthcareIdentifiers>();
            this.identifiedPersonPersonalRelationship = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Cr.Merged.PersonalRelationship>();
            this.identifiedPersonLanguageCommunication = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.LanguageCommunication>();
        }
        /**
         * <summary>ClientHealthcareIdentificationNumber</summary>
         * 
         * <remarks>Client Healthcare Identification Number <p>This 
         * identification attribute supports capture of a healthcare 
         * identifier specific to the client. This identifier may be 
         * assigned jurisdictionally or by care facility.</p> 
         * <p>Mandatory attribute supports unique identification of the 
         * client.</p> <p>At least 1 client identifier must be present 
         * in the message</p> Client Healthcare Identification Number 
         * <p>This identification attribute supports capture of a 
         * healthcare identifier specific to the client. This 
         * identifier may be assigned jurisdictionally or by care 
         * facility.</p> <p>Mandatory attribute supports unique 
         * identification of the client.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public ICollection<Identifier> ClientHealthcareIdentificationNumber {
            get { return this.clientHealthcareIdentificationNumber.RawSet(); }
        }

        /**
         * <summary>ClientStatusCode</summary>
         * 
         * <remarks>Client Status Code <p>Indicates the status of the 
         * Client role (e.g. Active)</p> <p>Populated attribute 
         * supports the identification of the client</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public RoleStatus ClientStatusCode {
            get { return (RoleStatus) this.clientStatusCode.Value; }
            set { this.clientStatusCode.Value = value; }
        }

        /**
         * <summary>ClientEffectiveTime</summary>
         * 
         * <remarks>Client Effective Time <p>An interval of time 
         * specifying the period during which this record in a client 
         * registry is in effect, if such time limit is applicable and 
         * known</p> <p>Required attribute supports the identification 
         * of the client</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> ClientEffectiveTime {
            get { return this.clientEffectiveTime.Value; }
            set { this.clientEffectiveTime.Value = value; }
        }

        /**
         * <summary>ClientMaskedInformation</summary>
         * 
         * <remarks>Client Masked Information <p>A code that controls 
         * the disclosure of information about this patient 
         * encounter.</p> <p>Required attribute supports the business 
         * requirement to provide restricted access where required</p> 
         * <p>Data in the EHR may at some point (and in some 
         * jurisdictions) be accessed directly by patients. Some health 
         * information may be deemed inappropriate for direct access by 
         * patients and requires interpretation by a clinician (e.g. 
         * prescription of placebos, analysis of certain psychiatric 
         * conditions, etc) Even where direct access by patient is not 
         * provided, there may need to be guidance to other providers 
         * viewing the record where care should be used in disclosing 
         * information to the patient. Non-clinical data (e.g. 
         * demographics) may need to be flagged as not for disclosure 
         * to patient and or next of kin. There may be professional 
         * policy and or legislative guidelines about when/if records 
         * may be flagged as not for direct disclosure.</p> Client 
         * Masked Information <p>A code that controls the disclosure of 
         * information about this patient encounter.</p> <p>Populated 
         * attribute supports the business requirement to provide 
         * restricted access where required</p> <p>Data in the EHR may 
         * at some point (and in some jurisdictions) be accessed 
         * directly by patients. Some health information may be deemed 
         * inappropriate for direct access by patients and requires 
         * interpretation by a clinician (e.g. prescription of 
         * placebos, analysis of certain psychiatric conditions, etc) 
         * Even where direct access by patient is not provided, there 
         * may need to be guidance to other providers viewing the 
         * record where care should be used in disclosing information 
         * to the patient. Non-clinical data (e.g. demographics) may 
         * need to be flagged as not for disclosure to patient and or 
         * next of kin. There may be professional policy and or 
         * legislative guidelines about when/if records may be flagged 
         * as not for direct disclosure.</p> Client Masked Information 
         * <p>A code that controls the disclosure of information about 
         * this patient encounter.</p> <p>Populated attribute supports 
         * the business requirement to provide restricted access where 
         * required</p> <p>Data in the EHR may at some Data in the EHR 
         * may at some point (and in some jurisdictions) be accessed 
         * directly by patients. Some health information may be deemed 
         * inappropriate for direct access by patients and requires 
         * interpretation by a clinician (e.g. prescription of 
         * placebos, analysis of certain psychiatric conditions, etc) 
         * Even where direct access by patient is not provided, there 
         * may need to be guidance to other providers viewing the 
         * record where care should be used in disclosing information 
         * to the patient. Non-clinical data (e.g. demographics) may 
         * need to be flagged as not for disclosure to patient and or 
         * next of kin. There may be professional policy and or 
         * legislative guidelines about when/if records may be flagged 
         * as not for direct disclosure.</p> Client Masked Information 
         * <p>x_NormalRestrictedTabooConfidentialityKind</p><p>A code 
         * that controls the disclosure of information about this 
         * patient encounter.</p> 
         * <p>x_NormalRestrictedTabooConfidentialityKind</p><p>A code 
         * that controls the disclosure of information about this 
         * patient encounter.</p> <p>Populated attribute supports the 
         * business requirement to provide restricted access where 
         * required</p> <p>Data in the EHR may at some point (and in 
         * some jurisdictions) be accessed directly by patients. Some 
         * health information may be deemed inappropriate for direct 
         * access by patients and requires interpretation by a 
         * clinician (e.g. prescription of placebos, analysis of 
         * certain psychiatric conditions, etc) Even where direct 
         * access by patient is not provided, there may need to be 
         * guidance to other providers viewing the record where care 
         * should be used in disclosing information to the patient. 
         * Non-clinical data (e.g. demographics) may need to be flagged 
         * as not for disclosure to patient and or next of kin. There 
         * may be professional policy and or legislative guidelines 
         * about when/if records may be flagged as not for direct 
         * disclosure.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public x_VeryBasicConfidentialityKind ClientMaskedInformation {
            get { return (x_VeryBasicConfidentialityKind) this.clientMaskedInformation.Value; }
            set { this.clientMaskedInformation.Value = value; }
        }

        /**
         * <summary>ClientName</summary>
         * 
         * <remarks>Client Name <p>Name(s) for the Client</p> 
         * <p>Populated attribute supports the identification of the 
         * client</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"identifiedPerson/name"})]
        public IList<PersonName> ClientName {
            get { return this.clientName.RawList(); }
        }

        /**
         * <summary>ClientTelecom</summary>
         * 
         * <remarks>Client Telecom <p>Provides information about 
         * telecom</p> <p>Populated attribute supports the 
         * identification of the client</p> Client Telecom <p>Provides 
         * information about telecom</p> <p>Required attribute supports 
         * the identification of the client</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"identifiedPerson/telecom"})]
        public IList<TelecommunicationAddress> ClientTelecom {
            get { return this.clientTelecom.RawList(); }
        }

        /**
         * <summary>ClientGender</summary>
         * 
         * <remarks>Client Gender <p>Gender of the Client, this is not 
         * to be confused with Clinical Gender of a client. 
         * Administrative Gender is typically restricted to Male (M), 
         * Female (F) or Undifferentiated (U)</p> <p>Populated 
         * attribute supports the identification of the client</p> 
         * Client Gender <p>Gender of the Client, this is not to be 
         * confused with Clinical Gender of a client. Administrative 
         * Gender is typically restricted to Male (M), Female (F) or 
         * Undifferentiated (UN)</p> <p>Populated attribute supports 
         * the identification of the client</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"identifiedPerson/administrativeGenderCode"})]
        public AdministrativeGender ClientGender {
            get { return (AdministrativeGender) this.clientGender.Value; }
            set { this.clientGender.Value = value; }
        }

        /**
         * <summary>ClientDateOfBirth</summary>
         * 
         * <remarks>Client Date of Birth <p>Date of birth of the 
         * Client</p> <p>Populated attribute supports the 
         * identification of the client</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"identifiedPerson/birthTime"})]
        public PlatformDate ClientDateOfBirth {
            get { return this.clientDateOfBirth.Value; }
            set { this.clientDateOfBirth.Value = value; }
        }

        /**
         * <summary>ClientDeceasedIndicator</summary>
         * 
         * <remarks>Client Deceased Indicator <p>An indication that the 
         * client is deceased. Appropriate business process/function 
         * will need to be employed to ensure that validation or 
         * verification of the death event has been established prior 
         * to populating the message.</p> <p>Required attribute 
         * supports the identification of the client</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"identifiedPerson/deceasedInd"})]
        public bool? ClientDeceasedIndicator {
            get { return this.clientDeceasedIndicator.Value; }
            set { this.clientDeceasedIndicator.Value = value; }
        }

        /**
         * <summary>ClientDeceasedDate</summary>
         * 
         * <remarks>Client Deceased Date <p>deceasedTime only present 
         * if deceasedInd is = TRUE</p> <p>The date and time that a 
         * client's death occurred.</p> <p>Required attribute supports 
         * verification of death from official source such as Vital 
         * Statistics.</p> Client Deceased Date <p>deceasedTime is only 
         * present when deceasedInd = TRUE</p> <p>The date and time 
         * that a client's death occurred.</p> <p>Required attribute 
         * supports verification of death from official source such as 
         * Vital Statistics.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"identifiedPerson/deceasedTime"})]
        public PlatformDate ClientDeceasedDate {
            get { return this.clientDeceasedDate.Value; }
            set { this.clientDeceasedDate.Value = value; }
        }

        /**
         * <summary>ClientMultipleBirthIndicator</summary>
         * 
         * <remarks>Client Multiple Birth Indicator <p>An indication as 
         * to whether the client is part of a multiple birth.</p> 
         * <p>Required attribute supports the identification of the 
         * client</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"identifiedPerson/multipleBirthInd"})]
        public bool? ClientMultipleBirthIndicator {
            get { return this.clientMultipleBirthIndicator.Value; }
            set { this.clientMultipleBirthIndicator.Value = value; }
        }

        /**
         * <summary>ClientMultipleBirthOrderNumber</summary>
         * 
         * <remarks>Client Multiple Birth Order Number <p>The order in 
         * which this client was born if part of a multiple birth.</p> 
         * <p>Required attribute supports the identification of the 
         * client</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"identifiedPerson/multipleBirthOrderNumber"})]
        public int? ClientMultipleBirthOrderNumber {
            get { return this.clientMultipleBirthOrderNumber.Value; }
            set { this.clientMultipleBirthOrderNumber.Value = value; }
        }

        /**
         * <summary>ClientAddress</summary>
         * 
         * <remarks>Client Address <p>Address(es) of the Client</p> 
         * <p>Populated attribute supports the identification of the 
         * client</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"identifiedPerson/addr"})]
        public IList<PostalAddress> ClientAddress {
            get { return this.clientAddress.RawList(); }
        }

        [Hl7XmlMappingAttribute(new string[] {"identifiedPerson/asOtherIDs"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Cr.Merged.OtherIDsNonHealthcareIdentifiers> IdentifiedPersonAsOtherIDs {
            get { return this.identifiedPersonAsOtherIDs; }
        }

        [Hl7XmlMappingAttribute(new string[] {"identifiedPerson/personalRelationship"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Cr.Merged.PersonalRelationship> IdentifiedPersonPersonalRelationship {
            get { return this.identifiedPersonPersonalRelationship; }
        }

        [Hl7XmlMappingAttribute(new string[] {"identifiedPerson/languageCommunication"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Merged.LanguageCommunication> IdentifiedPersonLanguageCommunication {
            get { return this.identifiedPersonLanguageCommunication; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf/observationEvent"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Cr.Merged.ConfidenceValue SubjectOfObservationEvent {
            get { return this.subjectOfObservationEvent; }
            set { this.subjectOfObservationEvent = value; }
        }

    }

}