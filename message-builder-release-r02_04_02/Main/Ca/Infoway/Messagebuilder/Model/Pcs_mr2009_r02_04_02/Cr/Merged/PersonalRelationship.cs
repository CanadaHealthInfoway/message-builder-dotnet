/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-01-18 21:05:21 -0500 (Wed, 18 Jan 2012) $
 * Revision:      $LastChangedRevision: 3932 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_02.Cr.Merged {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;


    /**
     * <summary>PersonalRelationship</summary>
     * 
     * <remarks>PRPA_MT101001CA.PersonalRelationship: Personal 
     * Relationship <p>Associations between persons in the Person 
     * Registry, such as spouse or parent, can be sent in a 
     * PersonalRelationship class. The exact nature of a 
     * association is described by the code attribute with a value 
     * drawn from the PersonalRelationshipRoleType domain. Most 
     * associations can be represented in either of two ways 
     * depending on who is the player and who is the scoper. For 
     * example, the association between a father and his daughter 
     * can be represented by a code of &quot;father&quot; where the 
     * parent is the player and the child is the scoper, or by a 
     * code of &quot;daughter&quot; where the child is the player 
     * and the parent is the scoper.</p> <p>Supports the business 
     * requirement to capture additional information about the 
     * Identified Client's Next of Kin</p> 
     * PRPA_MT101104CA.PersonalRelationship: Personal Relationship 
     * <p>Associations between persons in the Person Registry, such 
     * as spouse or parent, can be sent in a PersonalRelationship 
     * class. The exact nature of a association is described by the 
     * code attribute with a value drawn from the 
     * PersonalRelationshipRoleType domain. Most associations can 
     * be represented in either of two ways depending on who is the 
     * player and who is the scoper. For example, the association 
     * between a father and his daughter can be represented by a 
     * code of &quot;father&quot; where the parent is the player 
     * and the child is the scoper, or by a code of 
     * &quot;daughter&quot; where the child is the player and the 
     * parent is the scoper.</p> <p>Supports the business 
     * requirement to capture additional information about the 
     * Identified Client's Next of Kin</p> 
     * PRPA_MT101102CA.PersonalRelationship: Personal Relationship 
     * <p>Associations between persons in the Person Registry, such 
     * as spouse or parent, can be sent in a PersonalRelationship 
     * class. The exact nature of a association is described by the 
     * code attribute with a value drawn from the 
     * PersonalRelationshipRoleType domain. Most associations can 
     * be represented in either of two ways depending on who is the 
     * player and who is the scoper. For example, the association 
     * between a father and his daughter can be represented by a 
     * code of &quot;father&quot; where the parent is the player 
     * and the child is the scoper, or by a code of 
     * &quot;daughter&quot; where the child is the player and the 
     * parent is the scoper.</p> <p>Supports the business 
     * requirement to capture additional information about the 
     * Identified Client's Next of Kin</p> 
     * PRPA_MT101002CA.PersonalRelationship: Personal Relationship 
     * <p>Associations between persons in the Person Registry, such 
     * as spouse or parent, can be sent in a PersonalRelationship 
     * class. The exact nature of a association is described by the 
     * code attribute with a value drawn from the 
     * PersonalRelationshipRoleType domain. Most associations can 
     * be represented in either of two ways depending on who is the 
     * player and who is the scoper. For example, the association 
     * between a father and his daughter can be represented by a 
     * code of &quot;father&quot; where the parent is the player 
     * and the child is the scoper, or by a code of 
     * &quot;daughter&quot; where the child is the player and the 
     * parent is the scoper.</p> <p>Supports the business 
     * requirement to capture additional information about the 
     * Identified Client's Next of Kin</p> <p>Links two people in a 
     * personal relationship. The character of the relationship 
     * must be defined by a PersonalRelationshipRoleType code. The 
     * player and scoper are determined by 
     * PersonalRelationshipRoleType code as well.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"PRPA_MT101001CA.PersonalRelationship","PRPA_MT101002CA.PersonalRelationship","PRPA_MT101102CA.PersonalRelationship","PRPA_MT101104CA.PersonalRelationship"})]
    public class PersonalRelationship : MessagePartBean {

        private CV clientNextOfKin;
        private II nextOfKinIdentifier;
        private PN nextOfKinName;

        public PersonalRelationship() {
            this.clientNextOfKin = new CVImpl();
            this.nextOfKinIdentifier = new IIImpl();
            this.nextOfKinName = new PNImpl();
        }
        /**
         * <summary>ClientNextOfKin</summary>
         * 
         * <remarks>Client Next of Kin <p>A code further specifying the 
         * kind of Role such as Mother, Father, Natural Parent or Step 
         * Parent</p> <p>Mandatory attribute that supports 
         * understanding the relationship between the client and the 
         * ParentClient</p> Client Next of Kin <p>A code further 
         * specifying the kind of Role such as Mother, Father, Natural 
         * Parent or Step Parent</p> <p>Mandatory attribute that 
         * supports understanding the relationship between the client 
         * and the Next of Kin</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public PersonalRelationshipRoleType ClientNextOfKin {
            get { return (PersonalRelationshipRoleType) this.clientNextOfKin.Value; }
            set { this.clientNextOfKin.Value = value; }
        }

        /**
         * <summary>NextOfKinIdentifier</summary>
         * 
         * <remarks>Next of Kin Identifier <p>A unique identifier for 
         * the next of kin</p> <p>Populated attribute supports the 
         * identification of the next of kin and allows for the use of 
         * null flavours when the identifier is not known or 
         * available.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"relationshipHolder/id"})]
        public Identifier NextOfKinIdentifier {
            get { return this.nextOfKinIdentifier.Value; }
            set { this.nextOfKinIdentifier.Value = value; }
        }

        /**
         * <summary>NextOfKinName</summary>
         * 
         * <remarks>Next of Kin Name <p>A name for the next of kin</p> 
         * <p>Required attribute supports the identification of the 
         * next of kin</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"relationshipHolder/name"})]
        public PersonName NextOfKinName {
            get { return this.nextOfKinName.Value; }
            set { this.nextOfKinName.Value = value; }
        }

    }

}