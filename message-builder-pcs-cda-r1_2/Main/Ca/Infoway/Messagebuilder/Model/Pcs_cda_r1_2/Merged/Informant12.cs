/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: gng $
 * Last modified: $LastChangedDate: 2015-11-19 18:20:12 -0500 (Fri, 30 Jan 2015) $
 * Revision:      $LastChangedRevision: 9755 $
 */


/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_cda_r1_2.Merged {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_cda_r1_2.Basemodel;
    using Ca.Infoway.Messagebuilder.Model.Pcs_cda_r1_2.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model.Pcs_cda_r1_2.Pccdaheader;
    using System.Collections.Generic;


    [Hl7PartTypeMappingAttribute(new string[] {"BaseModel.Informant12","PcCDAHeader.Informant12"})]
    public class Informant12 : MessagePartBean {

        private II typeId;
        private LIST<II, Identifier> templateId;
        private Ca.Infoway.Messagebuilder.Model.Pcs_cda_r1_2.Basemodel.IInformant12Choice informant12Choice;
        private II assignedEntityTypeId;
        private LIST<II, Identifier> assignedEntityTemplateId;
        private LIST<II, Identifier> assignedEntityId;
        private CE assignedEntityCode;
        private LIST<AD, PostalAddress> assignedEntityAddr;
        private LIST<TEL, TelecommunicationAddress> assignedEntityTelecom;
        private Ca.Infoway.Messagebuilder.Model.Pcs_cda_r1_2.Pccdaheader.Informant12Person assignedEntityAssignedPerson;
        private Ca.Infoway.Messagebuilder.Model.Pcs_cda_r1_2.Pccdaheader.Informant12Organization assignedEntityRepresentedOrganization;
        private CS relatedEntityClassCode;
        private II relatedEntityTypeId;
        private LIST<II, Identifier> relatedEntityTemplateId;
        private CV relatedEntityCode;
        private LIST<AD, PostalAddress> relatedEntityAddr;
        private LIST<TEL, TelecommunicationAddress> relatedEntityTelecom;
        private IVLTSCDAR1 relatedEntityEffectiveTime;
        private Ca.Infoway.Messagebuilder.Model.Pcs_cda_r1_2.Pccdaheader.RelatedEntityPerson relatedEntityRelatedPerson;

        public Informant12() {
            this.typeId = new IIImpl();
            this.templateId = new LISTImpl<II, Identifier>(typeof(IIImpl));
            this.assignedEntityTypeId = new IIImpl();
            this.assignedEntityTemplateId = new LISTImpl<II, Identifier>(typeof(IIImpl));
            this.assignedEntityId = new LISTImpl<II, Identifier>(typeof(IIImpl));
            this.assignedEntityCode = new CEImpl();
            this.assignedEntityAddr = new LISTImpl<AD, PostalAddress>(typeof(ADImpl));
            this.assignedEntityTelecom = new LISTImpl<TEL, TelecommunicationAddress>(typeof(TELImpl));
            this.relatedEntityClassCode = new CSImpl();
            this.relatedEntityTypeId = new IIImpl();
            this.relatedEntityTemplateId = new LISTImpl<II, Identifier>(typeof(IIImpl));
            this.relatedEntityCode = new CVImpl();
            this.relatedEntityAddr = new LISTImpl<AD, PostalAddress>(typeof(ADImpl));
            this.relatedEntityTelecom = new LISTImpl<TEL, TelecommunicationAddress>(typeof(TELImpl));
            this.relatedEntityEffectiveTime = new IVLTSCDAR1Impl();
        }
        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: BaseModel.Informant12.typeId 
         * Conformance/Cardinality: OPTIONAL (0-1) Un-merged Business 
         * Name: (no business name specified) Relationship: 
         * PcCDAHeader.Informant12.typeId Conformance/Cardinality: 
         * OPTIONAL (0-1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"typeId"})]
        public Identifier TypeId {
            get { return this.typeId.Value; }
            set { this.typeId.Value = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: BaseModel.Informant12.templateId 
         * Conformance/Cardinality: OPTIONAL (0-*) Un-merged Business 
         * Name: (no business name specified) Relationship: 
         * PcCDAHeader.Informant12.templateId Conformance/Cardinality: 
         * OPTIONAL (0-*)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"templateId"})]
        public IList<Identifier> TemplateId {
            get { return this.templateId.RawList(); }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * BaseModel.Informant12.informant12Choice 
         * Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"informant12Choice"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_cda_r1_2.Basemodel.IInformant12Choice Informant12Choice {
            get { return this.informant12Choice; }
            set { this.informant12Choice = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * PcCDAHeader.Informant12AssignedEntity.typeId 
         * Conformance/Cardinality: OPTIONAL (0-1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"assignedEntity/typeId"})]
        public Identifier AssignedEntityTypeId {
            get { return this.assignedEntityTypeId.Value; }
            set { this.assignedEntityTypeId.Value = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * PcCDAHeader.Informant12AssignedEntity.templateId 
         * Conformance/Cardinality: OPTIONAL (0-*)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"assignedEntity/templateId"})]
        public IList<Identifier> AssignedEntityTemplateId {
            get { return this.assignedEntityTemplateId.RawList(); }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * PcCDAHeader.Informant12AssignedEntity.id 
         * Conformance/Cardinality: POPULATED (*)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"assignedEntity/id"})]
        public IList<Identifier> AssignedEntityId {
            get { return this.assignedEntityId.RawList(); }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * PcCDAHeader.Informant12AssignedEntity.code 
         * Conformance/Cardinality: OPTIONAL (0-1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"assignedEntity/code"})]
        public HealthcareProviderRoleType AssignedEntityCode {
            get { return (HealthcareProviderRoleType) this.assignedEntityCode.Value; }
            set { this.assignedEntityCode.Value = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * PcCDAHeader.Informant12AssignedEntity.addr 
         * Conformance/Cardinality: OPTIONAL (0-*)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"assignedEntity/addr"})]
        public IList<PostalAddress> AssignedEntityAddr {
            get { return this.assignedEntityAddr.RawList(); }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * PcCDAHeader.Informant12AssignedEntity.telecom 
         * Conformance/Cardinality: OPTIONAL (0-*)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"assignedEntity/telecom"})]
        public IList<TelecommunicationAddress> AssignedEntityTelecom {
            get { return this.assignedEntityTelecom.RawList(); }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * PcCDAHeader.Informant12AssignedEntity.assignedPerson 
         * Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"assignedEntity/assignedPerson"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_cda_r1_2.Pccdaheader.Informant12Person AssignedEntityAssignedPerson {
            get { return this.assignedEntityAssignedPerson; }
            set { this.assignedEntityAssignedPerson = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * PcCDAHeader.Informant12AssignedEntity.representedOrganization 
         * Conformance/Cardinality: OPTIONAL (0-1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"assignedEntity/representedOrganization"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_cda_r1_2.Pccdaheader.Informant12Organization AssignedEntityRepresentedOrganization {
            get { return this.assignedEntityRepresentedOrganization; }
            set { this.assignedEntityRepresentedOrganization = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: PcCDAHeader.RelatedEntity.classCode 
         * Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"relatedEntity/classCode"})]
        public RoleClassMutualRelationship RelatedEntityClassCode {
            get { return (RoleClassMutualRelationship) this.relatedEntityClassCode.Value; }
            set { this.relatedEntityClassCode.Value = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: PcCDAHeader.RelatedEntity.typeId 
         * Conformance/Cardinality: OPTIONAL (0-1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"relatedEntity/typeId"})]
        public Identifier RelatedEntityTypeId {
            get { return this.relatedEntityTypeId.Value; }
            set { this.relatedEntityTypeId.Value = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: PcCDAHeader.RelatedEntity.templateId 
         * Conformance/Cardinality: OPTIONAL (0-*)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"relatedEntity/templateId"})]
        public IList<Identifier> RelatedEntityTemplateId {
            get { return this.relatedEntityTemplateId.RawList(); }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: PcCDAHeader.RelatedEntity.code 
         * Conformance/Cardinality: OPTIONAL (0-1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"relatedEntity/code"})]
        public PersonalRelationshipRoleType RelatedEntityCode {
            get { return (PersonalRelationshipRoleType) this.relatedEntityCode.Value; }
            set { this.relatedEntityCode.Value = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: PcCDAHeader.RelatedEntity.addr 
         * Conformance/Cardinality: OPTIONAL (0-*)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"relatedEntity/addr"})]
        public IList<PostalAddress> RelatedEntityAddr {
            get { return this.relatedEntityAddr.RawList(); }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: PcCDAHeader.RelatedEntity.telecom 
         * Conformance/Cardinality: OPTIONAL (0-*)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"relatedEntity/telecom"})]
        public IList<TelecommunicationAddress> RelatedEntityTelecom {
            get { return this.relatedEntityTelecom.RawList(); }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * PcCDAHeader.RelatedEntity.effectiveTime 
         * Conformance/Cardinality: OPTIONAL (0-1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"relatedEntity/effectiveTime"})]
        public DateInterval RelatedEntityEffectiveTime {
            get { return this.relatedEntityEffectiveTime.Value; }
            set { this.relatedEntityEffectiveTime.Value = value; }
        }

        /**
         * <summary>Un-merged Business Name: (no business name 
         * specified)</summary>
         * 
         * <remarks>Relationship: 
         * PcCDAHeader.RelatedEntity.relatedPerson 
         * Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"relatedEntity/relatedPerson"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_cda_r1_2.Pccdaheader.RelatedEntityPerson RelatedEntityRelatedPerson {
            get { return this.relatedEntityRelatedPerson; }
            set { this.relatedEntityRelatedPerson = value; }
        }

    }

}