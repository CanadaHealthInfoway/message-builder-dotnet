/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: gng $
 * Last modified: $LastChangedDate: 2015-11-19 18:20:12 -0500 (Fri, 30 Jan 2015) $
 * Revision:      $LastChangedRevision: 9755 $
 */

/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Rcmr_mt000003ab {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Business Name: Query Definition</summary>
     * 
     * <p>Allows the user and/or the point-of-service application 
     * to constrain what EHR information they wish to retrieve.</p> 
     * <p>Identifies the various parameters that act as filters on 
     * the records to be retrieved.</p>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"RCMR_MT000003AB.ParameterList"})]
    public class QueryDefinition : MessagePartBean {

        private II auhoringProviderIdValue;
        private IList<CD> documentTypeValue;
        private IVL<TS, Interval<PlatformDate>> effectiveTimeRangeValue;

        public QueryDefinition() {
            this.auhoringProviderIdValue = new IIImpl();
            this.documentTypeValue = new List<CD>();
            this.effectiveTimeRangeValue = new IVLImpl<TS, Interval<PlatformDate>>();
        }
        /**
         * <summary>Business Name: Authoring Provider Id</summary>
         * 
         * <remarks>Relationship: 
         * RCMR_MT000003AB.AuhoringProviderId.value 
         * Conformance/Cardinality: MANDATORY (1) <p>Allows retrieving 
         * those documents in which a particular was the author.</p> 
         * <p>Filters the documents retrieved to only include those 
         * where the identified provider was the author. If 
         * unspecified, no filter is applied.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"auhoringProviderId/value"})]
        public Identifier AuhoringProviderIdValue {
            get { return this.auhoringProviderIdValue.Value; }
            set { this.auhoringProviderIdValue.Value = value; }
        }

        /**
         * <summary>Business Name: Document Types</summary>
         * 
         * <remarks>Relationship: RCMR_MT000003AB.DocumentType.value 
         * Conformance/Cardinality: MANDATORY (1) <p>Allows 
         * constraining the type of records to be retrieved. Multiple 
         * repetitions are present to allow selection of multiple types 
         * with a single query.</p><p>This element makes use of the CD 
         * datatype to allow for use of the SNOMED code system that in 
         * some circumstances requires the use of post-coordination. 
         * Post-coordination is only supported by the CD datatype.</p> 
         * <p>Filters the type(s) or category(ies) of the documents to 
         * be retrieved. The query will return both those records whose 
         * type exactly matches, as well as those whose types are 
         * subsets of the specified parameter. If no Types are 
         * specified, no restriction will be placed on the types to be 
         * returned.</p><p>Query results should include those with an 
         * match of this code, as well those matching any 
         * specializations of the coded parameter.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"documentType/value"})]
        public IList<DocumentType> DocumentTypeValue {
            get { return new RawListWrapper<CD, DocumentType>(documentTypeValue, typeof(CDImpl)); }
        }

        /**
         * <summary>Business Name: Effective Time Range</summary>
         * 
         * <remarks>Relationship: 
         * RCMR_MT000003AB.EffectiveTimeRange.value 
         * Conformance/Cardinality: MANDATORY (1) <p>Allows 
         * constraining the retrieved records to those applicable at a 
         * particular time. Useful in retrieving those records 
         * &quot;currently in effect&quot; as well as retrieving views 
         * of what information was in effect at some point in the 
         * past.</p> <p>Filters the set of records to be retrieved to 
         * those which occurred or were effective for the patient 
         * within the time boundaries specified. Either the lower bound 
         * or upper bound or both would be specified. If no value is 
         * specified, no filter will be applied. If there is any 
         * overlap between the specified time-range and the effective 
         * time of the record, the record will be returned.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTimeRange/value"})]
        public Interval<PlatformDate> EffectiveTimeRangeValue {
            get { return this.effectiveTimeRangeValue.Value; }
            set { this.effectiveTimeRangeValue.Value = value; }
        }

    }

}