/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Repc_mt500003ab {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt011001ca;
    using Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt050205ab;
    using Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab;
    using Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090310ca;
    using Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt120402ca;
    using Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt240007ab;
    using Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Merged;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Business Name: Care Composition</summary>
     * 
     * <p>Care compositions allow grouping together numerous 
     * related records which aids searching and navigation. Also, 
     * the mere knowledge that a type of care has occurred or is 
     * occurring (e.g. an in-patient hospital encounter) can be 
     * useful information when delivering subsequent care.</p> <p>A 
     * care composition is a record with two purposes. It indicates 
     * that care of a given type has occurred or is occurring. It 
     * also acts as a collector for the events that happened during 
     * care, including who is responsible for the care 
     * provided.</p><p>Care composition messages may be sent during 
     * the course of care to describe the progress of care or may 
     * be sent at the termination of care to describe all the 
     * activities that occurred during the provision of care. Note 
     * that this record merely captures the existence of care and 
     * the locations and people involved. The actual discrete 
     * events and any care summary documentation that results are 
     * captured using other messages.</p><p>Examples include: 
     * encounters, condition-related care (episodes) and 
     * longer-term care collections such as &quot;gynecological 
     * care&quot;.</p>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"REPC_MT500003AB.PatientCareProvisionEvent"})]
    public class CareComposition : MessagePartBean {

        private II id;
        private CV code;
        private CS statusCode;
        private IVL<TS, Interval<PlatformDate>> effectiveTime;
        private INT subject1PatientPatientEntityQuantifiedKindQuantity;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt050205ab.Patient subject2Patient;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Merged.ResponsiblityAssumedBy responsibleParty;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab.HealthcareWorker performerAssignedEntity;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Merged.AuthoredBy_2 author;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab.HealthcareWorker admitterAssignedEntity;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab.HealthcareWorker attenderAssignedEntity;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab.HealthcareWorker dischargerAssignedEntity;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab.HealthcareWorker referrerAssignedEntity;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab.HealthcareWorker consultantAssignedEntity;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090310ca.EHRRepository custodianAssignedDevice;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt240007ab.ServiceLocation locationServiceDeliveryLocation;
        private IList<Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Merged.DischargeDiagnosis> outcomeDiagnosisEvent;
        private IList<Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt120402ca.IIndications> reasonIndications;
        private BL subjectOfAnnotationIndicator;
        private IList<Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt011001ca.CareCompositions> componentOfPatientCareProvisionEvent;

        public CareComposition() {
            this.id = new IIImpl();
            this.code = new CVImpl();
            this.statusCode = new CSImpl();
            this.effectiveTime = new IVLImpl<TS, Interval<PlatformDate>>();
            this.subject1PatientPatientEntityQuantifiedKindQuantity = new INTImpl();
            this.outcomeDiagnosisEvent = new List<Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Merged.DischargeDiagnosis>();
            this.reasonIndications = new List<Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt120402ca.IIndications>();
            this.subjectOfAnnotationIndicator = new BLImpl(false);
            this.componentOfPatientCareProvisionEvent = new List<Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt011001ca.CareCompositions>();
        }
        /**
         * <summary>Business Name: Care Composition Id</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT500003AB.PatientCareProvisionEvent.id 
         * Conformance/Cardinality: MANDATORY (1) <p>Allows for unique 
         * identification of the Care Composition and is therefore 
         * mandatory. Supports drill-down queries, linking of this 
         * record to other records, matching of EHR records to 
         * locally-stored PoS records and is necessary when identifying 
         * records for amending (revising)/directional linking 
         * (superseding).</p> <p>A globally unique identifier assigned 
         * by the EHR to the Care Composition record.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>Business Name: Care Composition Type</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT500003AB.PatientCareProvisionEvent.code 
         * Conformance/Cardinality: MANDATORY (1) <p>Care Composition 
         * Type is used for searching and for organizing Care 
         * Composition records as well as sorting them for 
         * presentation.</p><p>This is a key attribute for 
         * understanding the type of record and is therefore 
         * mandatory.</p> <p>Identifies the type of Care Composition 
         * represented by this record.</p><p>Care Composition is the 
         * generic name given to event 'containers' such as Encounters, 
         * Health-Condition-based Collections (Episodes) and Care-based 
         * Collections. The &quot;type&quot; of care composition places 
         * constraints on what elements are 
         * supported.</p><p>Encounter-based collection: a series of 
         * health care events that occur during an interaction between 
         * one or more health care providers and one or more patients 
         * where the providers and the patient remain in the same 
         * location over a contiguous period of time; the providers and 
         * patient may be at different locations (telehealth). e.g. 
         * Inpatient encounter, Community 
         * encounter.</p><p>Condition-based collection (Episode): a 
         * series of interactions between a patient and one or more 
         * health care providers over time in one or more locations and 
         * tied together by a common diagnosis or 
         * problem.</p><p>Care-based collection: a high level grouping 
         * of health events, encounters, and/or episodes related to a 
         * particular area of healthcare. e.g. Gynecology care, 
         * Cardiology Care, etc.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ActCareEventType Code {
            get { return (ActCareEventType) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>Business Name: Care Composition Status</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT500003AB.PatientCareProvisionEvent.statusCode 
         * Conformance/Cardinality: REQUIRED (1) <p>Status is 
         * frequently used to filter query responses as well as to sort 
         * records for presentation. It also affects how the Care 
         * Composition record is interpreted.</p><p>Because the status 
         * won't always be known, the attribute is marked as 
         * 'populated' to allow the use of null flavors.</p> <p>This 
         * identifies the current state of the Care Composition record. 
         * Allowed status values are 'active' (the encounter, episode 
         * or general delivery of care ongoing) and 'completed' (the 
         * encounter, episode or general care has ended).</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public ActStatus StatusCode {
            get { return (ActStatus) this.statusCode.Value; }
            set { this.statusCode.Value = value; }
        }

        /**
         * <summary>Business Name: Care Composition Period</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT500003AB.PatientCareProvisionEvent.effectiveTime 
         * Conformance/Cardinality: REQUIRED (1) <p>Identifies the 
         * time-period of relevance to the record that is useful in 
         * filtering and organizing &quot;time-view&quot; presentations 
         * of data. Because the timing information won't always be 
         * known, this attribute is marked as 'populated'.</p> 
         * <p>Represents the start and end of the date/time interval 
         * during which the care described by the composition was/is 
         * being provided.</p><p>E.g. The admission and discharge 
         * date/time; the date on which the episode began and ended; 
         * etc.</p><p>Please note that it is possible for many episodes 
         * and care events to not have an end date; in these 
         * situations, only the start date will be specified. Even 
         * encounters will not have an end date until the encounter is 
         * completed/patient is discharged.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>Business Name: Number of Patients</summary>
         * 
         * <remarks>Relationship: 
         * REPC_MT500003AB.EntityQuantifiedKind.quantity 
         * Conformance/Cardinality: MANDATORY (1) <p>Allows a provider 
         * to ascertain the size of a group encounter without 
         * necessarily revealing the identity of the patients 
         * involved.</p><p>The patients associated with an encounter 
         * must be specified at the time the record is created, thus 
         * the number of patients will always be known, making this 
         * element mandatory.</p> <p>Indicates the number of patients 
         * involved in a group encounter. For non-group encounters, 
         * this attribute will always be &quot;1&quot;.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subject1/patient/patientEntityQuantifiedKind/quantity"})]
        public int? Subject1PatientPatientEntityQuantifiedKindQuantity {
            get { return this.subject1PatientPatientEntityQuantifiedKindQuantity.Value; }
            set { this.subject1PatientPatientEntityQuantifiedKindQuantity.Value = value; }
        }

        /**
         * <summary>Relationship: REPC_MT500003AB.Subject7.patient</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subject2/patient"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt050205ab.Patient Subject2Patient {
            get { return this.subject2Patient; }
            set { this.subject2Patient = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.PatientCareProvisionEvent.responsibleParty</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"responsibleParty"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Merged.ResponsiblityAssumedBy ResponsibleParty {
            get { return this.responsibleParty; }
            set { this.responsibleParty = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.Performer3.assignedEntity</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"performer/assignedEntity"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab.HealthcareWorker PerformerAssignedEntity {
            get { return this.performerAssignedEntity; }
            set { this.performerAssignedEntity = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.PatientCareProvisionEvent.author</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"author"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Merged.AuthoredBy_2 Author {
            get { return this.author; }
            set { this.author = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.Admitter.assignedEntity</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"admitter/assignedEntity"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab.HealthcareWorker AdmitterAssignedEntity {
            get { return this.admitterAssignedEntity; }
            set { this.admitterAssignedEntity = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.Attender.assignedEntity</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"attender/assignedEntity"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab.HealthcareWorker AttenderAssignedEntity {
            get { return this.attenderAssignedEntity; }
            set { this.attenderAssignedEntity = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.Discharger.assignedEntity</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"discharger/assignedEntity"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab.HealthcareWorker DischargerAssignedEntity {
            get { return this.dischargerAssignedEntity; }
            set { this.dischargerAssignedEntity = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.Referrer.assignedEntity</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"referrer/assignedEntity"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab.HealthcareWorker ReferrerAssignedEntity {
            get { return this.referrerAssignedEntity; }
            set { this.referrerAssignedEntity = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.Consultant.assignedEntity</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"consultant/assignedEntity"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090108ab.HealthcareWorker ConsultantAssignedEntity {
            get { return this.consultantAssignedEntity; }
            set { this.consultantAssignedEntity = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.Custodian.assignedDevice</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"custodian/assignedDevice"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt090310ca.EHRRepository CustodianAssignedDevice {
            get { return this.custodianAssignedDevice; }
            set { this.custodianAssignedDevice = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.Location.serviceDeliveryLocation</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"location/serviceDeliveryLocation"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt240007ab.ServiceLocation LocationServiceDeliveryLocation {
            get { return this.locationServiceDeliveryLocation; }
            set { this.locationServiceDeliveryLocation = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.Outcome.diagnosisEvent</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"outcome/diagnosisEvent"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Merged.DischargeDiagnosis> OutcomeDiagnosisEvent {
            get { return this.outcomeDiagnosisEvent; }
        }

        /**
         * <summary>Relationship: REPC_MT500003AB.Reason.indications</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"reason/indications"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt120402ca.IIndications> ReasonIndications {
            get { return this.reasonIndications; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.Subject.annotationIndicator</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subjectOf/annotationIndicator"})]
        public bool? SubjectOfAnnotationIndicator {
            get { return this.subjectOfAnnotationIndicator.Value; }
            set { this.subjectOfAnnotationIndicator.Value = value; }
        }

        /**
         * <summary>Relationship: 
         * REPC_MT500003AB.Component.patientCareProvisionEvent</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"componentOf/patientCareProvisionEvent"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_shr.Common.Coct_mt011001ca.CareCompositions> ComponentOfPatientCareProvisionEvent {
            get { return this.componentOfPatientCareProvisionEvent; }
        }

    }

}