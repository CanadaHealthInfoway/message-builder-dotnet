/**
 * Copyright 2015 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Poiz_mt030050ab {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Common.Coct_mt050205ab;
    using Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Common.Coct_mt120600ca;
    using Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged;
    using Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Merged;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Business Name: Immunizations</summary>
     * 
     * <p>Necessary component of a person's overall vaccine 
     * profile. Helps deal with outbreaks and also vaccine 
     * contraindication checking.</p> <p>A record of products 
     * administered to a patient specific to immunization.</p>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"POIZ_MT030050AB.Immunization"})]
    public class Immunizations : MessagePartBean {

        private II id;
        private BL negationInd;
        private CS statusCode;
        private TS effectiveTime;
        private CV uncertaintyCode;
        private CV approachSiteCode;
        private CV routeCode;
        private PQ doseQuantity;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Common.Coct_mt050205ab.Patient subjectPatient;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.Vaccine consumableAdministerableMedicineAdministrableVaccine;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Merged.HealthcareWorker performerAssignedEntity;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Merged.HealthcareWorker authorAssignedEntity;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.Location location;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.OldImmunizationEvent predecessorOldImmunizationEvent;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.Reason reason;
        private IList<Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.PatientImmunizationObservations> pertinentInformationPatientImmunizationObservations;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Poiz_mt030050ab.NewImmunizationEventID successorNewImmunizationEvent;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Common.Coct_mt120600ca.Notes subjectOfAnnotation;
        private Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.InvestigationEvent causeInvestigationEvent;

        public Immunizations() {
            this.id = new IIImpl();
            this.negationInd = new BLImpl();
            this.statusCode = new CSImpl();
            this.effectiveTime = new TSImpl();
            this.uncertaintyCode = new CVImpl();
            this.approachSiteCode = new CVImpl();
            this.routeCode = new CVImpl();
            this.doseQuantity = new PQImpl();
            this.pertinentInformationPatientImmunizationObservations = new List<Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.PatientImmunizationObservations>();
        }
        /**
         * <summary>Business Name: A:Immunization Event ID</summary>
         * 
         * <remarks>Relationship: POIZ_MT030050AB.Immunization.id 
         * Conformance/Cardinality: MANDATORY (1) <p>Allows for the 
         * unique referencing of a specific immunization record. Thus 
         * the mandatory requirement.</p> <p>This is an identifier 
         * assigned to a unique instance of an immunization record.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>Business Name: Not Immunized?</summary>
         * 
         * <remarks>Relationship: 
         * POIZ_MT030050AB.Immunization.negationInd 
         * Conformance/Cardinality: MANDATORY (1) <p>Tracking failures 
         * to be immunized is also important in immunization reporting. 
         * Marked as mandatory because it is not meaningful for this 
         * flag to be 'unknown'.</p> <p>An explicit indication that a 
         * person has not been immunized with the specified vaccine at 
         * the time indicated.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"negationInd"})]
        public bool? NegationInd {
            get { return this.negationInd.Value; }
            set { this.negationInd.Value = value; }
        }

        /**
         * <summary>Business Name: Immunization Event Status</summary>
         * 
         * <remarks>Relationship: 
         * POIZ_MT030050AB.Immunization.statusCode 
         * Conformance/Cardinality: MANDATORY (1) <p>Needed to 
         * differentiate between valid, obsolete and invalid 
         * immunization events (e.g. immunization event has been 
         * retracted or nullified) and is therefore mandatory.</p> 
         * <p>Nullified=Retracted</p> <p>Status of the immunization 
         * event</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public ActStatus StatusCode {
            get { return (ActStatus) this.statusCode.Value; }
            set { this.statusCode.Value = value; }
        }

        /**
         * <summary>Business Name: Immunization Date</summary>
         * 
         * <remarks>Relationship: 
         * POIZ_MT030050AB.Immunization.effectiveTime 
         * Conformance/Cardinality: MANDATORY (1) <p>Important 
         * information for establishing the validity of the 
         * immunization records, and therefore mandatory. Also used in 
         * the scheduling of subsequent immunizations.</p> <p>The date 
         * the vaccine was administered to the patient.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public PlatformDate EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>Business Name: Historical Indicator</summary>
         * 
         * <remarks>Relationship: 
         * POIZ_MT030050AB.Immunization.uncertaintyCode 
         * Conformance/Cardinality: REQUIRED (1) <p>Allows for users of 
         * information to determine the degree of uncertainty regarding 
         * the details of an immunization event and is therefore 
         * populated.</p> <p>To indicate an immunization event is 
         * historical, this should be valued 'U'.</p><p>To indicate an 
         * immunization event is not historical, this should be valued 
         * with a nullFlavor of 'NA'.</p> <p>An indication of 
         * uncertainty regarding an immunization event</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"uncertaintyCode"})]
        public ActUncertainty UncertaintyCode {
            get { return (ActUncertainty) this.uncertaintyCode.Value; }
            set { this.uncertaintyCode.Value = value; }
        }

        /**
         * <summary>Business Name: Anatomical Site</summary>
         * 
         * <remarks>Relationship: 
         * POIZ_MT030050AB.Immunization.approachSiteCode 
         * Conformance/Cardinality: REQUIRED (0-1) <p>Site of 
         * administration is needed for follow up in case of an adverse 
         * event and in some jurisdictions is part of the minimum 
         * dataset per national standard and legal client record.</p> 
         * <p>A coded value denoting the body area where the 
         * immunization was administered.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"approachSiteCode"})]
        public HumanSubstanceAdministrationSite ApproachSiteCode {
            get { return (HumanSubstanceAdministrationSite) this.approachSiteCode.Value; }
            set { this.approachSiteCode.Value = value; }
        }

        /**
         * <summary>Business Name: Route of Administration</summary>
         * 
         * <remarks>Relationship: 
         * POIZ_MT030050AB.Immunization.routeCode 
         * Conformance/Cardinality: REQUIRED (0-1) <p>Ensures 
         * consistency in description of routes.</p> <p>The route by 
         * which the drug was administered to the patient, for example, 
         * sub-cutaneous, intra-muscular</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"routeCode"})]
        public RouteOfAdministration RouteCode {
            get { return (RouteOfAdministration) this.routeCode.Value; }
            set { this.routeCode.Value = value; }
        }

        /**
         * <summary>Business Name: Quantity Administered</summary>
         * 
         * <remarks>Relationship: 
         * POIZ_MT030050AB.Immunization.doseQuantity 
         * Conformance/Cardinality: REQUIRED (0-1) <p>Useful for 
         * evaluating reaction, evaluating vaccine failure and for 
         * checking contraindication.</p><p>Attribute is populated to 
         * allow for situations where quantity may not be known and 
         * thus null flavor must be specified.</p> <p>The amount of the 
         * drug product administered to/by the patient.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"doseQuantity"})]
        public PhysicalQuantity DoseQuantity {
            get { return this.doseQuantity.Value; }
            set { this.doseQuantity.Value = value; }
        }

        /**
         * <summary>Relationship: POIZ_MT030050AB.Subject10.patient</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subject/patient"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Common.Coct_mt050205ab.Patient SubjectPatient {
            get { return this.subjectPatient; }
            set { this.subjectPatient = value; }
        }

        /**
         * <summary>Relationship: 
         * POIZ_MT030050AB.AdministerableMedicine.administrableVaccine</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"consumable/administerableMedicine/administrableVaccine"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.Vaccine ConsumableAdministerableMedicineAdministrableVaccine {
            get { return this.consumableAdministerableMedicineAdministrableVaccine; }
            set { this.consumableAdministerableMedicineAdministrableVaccine = value; }
        }

        /**
         * <summary>Relationship: 
         * POIZ_MT030050AB.Performer.assignedEntity</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"performer/assignedEntity"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Merged.HealthcareWorker PerformerAssignedEntity {
            get { return this.performerAssignedEntity; }
            set { this.performerAssignedEntity = value; }
        }

        /**
         * <summary>Relationship: POIZ_MT030050AB.Author.assignedEntity</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"author/assignedEntity"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Merged.HealthcareWorker AuthorAssignedEntity {
            get { return this.authorAssignedEntity; }
            set { this.authorAssignedEntity = value; }
        }

        /**
         * <summary>Relationship: POIZ_MT030050AB.Immunization.location</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"location"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.Location Location {
            get { return this.location; }
            set { this.location = value; }
        }

        /**
         * <summary>Relationship: 
         * POIZ_MT030050AB.Predecessor.oldImmunizationEvent</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"predecessor/oldImmunizationEvent"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.OldImmunizationEvent PredecessorOldImmunizationEvent {
            get { return this.predecessorOldImmunizationEvent; }
            set { this.predecessorOldImmunizationEvent = value; }
        }

        /**
         * <summary>Relationship: POIZ_MT030050AB.Immunization.reason</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"reason"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.Reason Reason {
            get { return this.reason; }
            set { this.reason = value; }
        }

        /**
         * <summary>Relationship: 
         * POIZ_MT030050AB.PertinentInformation.patientImmunizationObservations</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation/patientImmunizationObservations"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.PatientImmunizationObservations> PertinentInformationPatientImmunizationObservations {
            get { return this.pertinentInformationPatientImmunizationObservations; }
        }

        /**
         * <summary>Relationship: 
         * POIZ_MT030050AB.Predecessor2.newImmunizationEvent</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"successor/newImmunizationEvent"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Poiz_mt030050ab.NewImmunizationEventID SuccessorNewImmunizationEvent {
            get { return this.successorNewImmunizationEvent; }
            set { this.successorNewImmunizationEvent = value; }
        }

        /**
         * <summary>Relationship: POIZ_MT030050AB.Subject2.annotation</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subjectOf/annotation"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Common.Coct_mt120600ca.Notes SubjectOfAnnotation {
            get { return this.subjectOfAnnotation; }
            set { this.subjectOfAnnotation = value; }
        }

        /**
         * <summary>Relationship: 
         * POIZ_MT030050AB.CauseOf.investigationEvent</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"cause/investigationEvent"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_r02_04_03_imm.Immunization.Merged.InvestigationEvent CauseInvestigationEvent {
            get { return this.causeInvestigationEvent; }
            set { this.causeInvestigationEvent = value; }
        }

    }

}