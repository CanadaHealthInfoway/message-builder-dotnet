/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2013-03-08 11:06:36 -0500 (Fri, 08 Mar 2013) $
 * Revision:      $LastChangedRevision: 6699 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r01.Claims.Ficr_mt600201ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r01.Claims.Coct_mt280001ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r01.Domainvalue;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Business Name: Invoice Element Details</summary>
     * 
     * <p>Domain for InvoiceElementDetail.code is 
     * GenericBillableItemModifier</p> <p>RTO used to specify 15 
     * pills (each) out of a bottle of 100 pills (each) to reflect 
     * billing for a portion of a package (e.g. 0.15 of a 
     * bottle)</p>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"FICR_MT600201CA.InvoiceElementDetail"})]
    public class InvoiceElementDetails : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r01.Claims.Ficr_mt600201ca.IInvoiceElementChoice {

        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r01.Claims.Coct_mt280001ca.IA_BillableActChoice> reasonOfBillableActChoice;
        private II id;
        private CV code;
        private PQ unitQuantity;
        private RTO<Money, PhysicalQuantity> unitPriceAmt;
        private MO netAmt;
        private INT factorNumber;

        public InvoiceElementDetails() {
            this.reasonOfBillableActChoice = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r01.Claims.Coct_mt280001ca.IA_BillableActChoice>();
            this.id = new IIImpl();
            this.code = new CVImpl();
            this.unitQuantity = new PQImpl();
            this.unitPriceAmt = new RTOImpl<Money, PhysicalQuantity>();
            this.netAmt = new MOImpl();
            this.factorNumber = new INTImpl();
        }
        /**
         * <summary>Relationship: 
         * FICR_MT600201CA.InvoiceElementReason.billableActChoice</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"reasonOf/billableActChoice"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r01.Claims.Coct_mt280001ca.IA_BillableActChoice> ReasonOfBillableActChoice {
            get { return this.reasonOfBillableActChoice; }
        }

        /**
         * <summary>Business Name: Submitted Invoice Line Identifier</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.InvoiceElementDetail.id 
         * Conformance/Cardinality: MANDATORY (1) <p>Only one 
         * identifier for an Invoice Detail is allowed.</p> <p>OID 
         * (object identifier) + unique number generated by the 
         * pharmacy software for the specific invoice element 
         * detail.</p><p>The identifier will be the same as its parent 
         * Invoice Element Group, appended with a &quot;.x&quot;, where 
         * &quot;x&quot; is a number siginifying the occurence of this 
         * item under its parent. For example, the parent id is 
         * &quot;12942&quot; and this is the 2nd item under the parent. 
         * Therefore, the id for this item would be 
         * &quot;12942.2&quot;.</p><p>Must not be the same identifier 
         * as the PaymentRequest.id or the InvoiceElementGroup.id.</p> 
         * <p>Set of identifiers that uniquely identify the Invoice 
         * Line item.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>Business Name: Submitted Product/Service Code</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.InvoiceElementDetail.code 
         * Conformance/Cardinality: MANDATORY (1) <p>RxS1: Select one 
         * of MARKUP (markup), PROFFEE (professional fee), or 
         * &lt;DIN&gt;/&lt;GTIN&gt;/&lt;UPC&gt; (drug), depending on 
         * what invoice element detail is being described.</p> <p>There 
         * are specific rules, by code set, for specification of these 
         * codes (e.g. CCI codes are stripped of punctuation).</p> 
         * <p>For Adjudication Results: each Invoice Element Group or 
         * Detail that has been submitted must have a corresponding 
         * response with the same Invoice Element code. There may be 
         * additional Invoice Elements in the adjudication results for 
         * situations like code substitution.</p><p>Modifiers for the 
         * codes are taken from the same domain (i.e 
         * ActPoductServiceBillableItemCode).</p><p>Codes for this 
         * domain include intervention/procedure codes (e.g. CCI), 
         * product codes (e.g. HCPCS), pharmacy product codes (e.g. 
         * DIN). The code set also includes generic codes, applicable 
         * to all benefit groups, for specification of taxes, 
         * surcharges and discounts.</p><p>There are specific rules, by 
         * code set, for specification of these codes (e.g. CCI codes 
         * are stripped of punctuation).</p> <p>Product/Service Code 
         * e.g. Office Visit ,Taxes, Markup, Dispense + Product/Service 
         * Code Modifier e.g. northern isolation, off hours, specialty, 
         * on call. Also allows for specification of equivalents for 
         * each code for each Payor</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ActInvoiceDetailCode Code {
            get { return (ActInvoiceDetailCode) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>Business Name: Submitted Unit Quantity</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.InvoiceElementDetail.unitQuantity 
         * Conformance/Cardinality: POPULATED (1) <p>Field length for 
         * value (value) may include a decimal point (e.g. 3.5 hours) 
         * with no restriction on the number of digits past the decimal 
         * point.</p><p>Attribute cannot be mandatory as it may not be 
         * present for a Coverage Extension Request.</p><p>Unit of 
         * measure for &quot;each&quot; is left null.</p><p>Example: 
         * &lt;numerator value=&quot;10&quot; unit=&quot;MG&quot;/&gt; 
         * &lt;denominator value=&quot;100&quot; 
         * unit=&quot;MG&quot;/&gt;</p> <p>RxS1: For the 
         * &lt;DIN&gt;/&lt;GTIN&gt;/&lt;UPC&gt; invoice element detail, 
         * specifiy as &quot;x&quot; over &quot;y&quot; with no units 
         * of measure, where &quot;x&quot; is the number of pills and 
         * &quot;y&quot; is the package size. E.g. &quot;10&quot; over 
         * &quot;100&quot;.</p><p>RxS1: For the MARKUP, PROFFEE invoice 
         * element details, specify as 1 over 1. E.g. &quot;1&quot; 
         * over &quot;1&quot;.</p> <p>A description of the number of 
         * instances of a product or service. I.e.. 4 hours, 4 mg, 4 
         * boxes, 15 each of a container of 1000 each</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"unitQuantity"})]
        public PhysicalQuantity UnitQuantity {
            get { return this.unitQuantity.Value; }
            set { this.unitQuantity.Value = value; }
        }

        /**
         * <summary>Business Name: Submitted Unit Amount Price</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.InvoiceElementDetail.unitPriceAmt 
         * Conformance/Cardinality: POPULATED (1) <p>Field length for 
         * value (amount) includes a decimal point. Decimal point MUST 
         * be specified with 2 and only 2 digits of precision. Example: 
         * &quot;150.12&quot;.</p><p>Attribute cannot be mandatory as 
         * it may not be present for a Coverage Extension 
         * Request.</p><p>Units for denominator must be the same as the 
         * units for the denominator of UnitPriceAmt. Value for 
         * denominator must be 1.</p><p>Example: &lt;numerator 
         * value=&quot;500.00&quot; currency=&quot;CAD&quot;/&gt; 
         * &lt;denominator value=&quot;1&quot; 
         * unit=&quot;MG&quot;/&gt;</p> <p>RxS1: For the 
         * &lt;DIN&gt;/&lt;GTIN&gt;/&lt;UPC&gt; invoice element detail, 
         * specifiy as &quot;x&quot; dollars over (per) &quot;1&quot; 
         * pill, with no units of measure. E.g. &quot;5.00&quot; 
         * &quot;CAD&quot; over (per) &quot;1&quot;.</p><p>RxS1: For 
         * the MARKUP, PROFFEE invoice element details, specify as 
         * &quot;x&quot; dollars over (per) &quot;1&quot; unit, with no 
         * units of measure. E.g. &quot;12.00&quot; &quot;CAD&quot; 
         * over (per) &quot;1&quot;</p> <p>The monetary cost per unit 
         * of the product or service. I.e.. $0.20/mg, $250/day, $50</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"unitPriceAmt"})]
        public Ratio<Money, PhysicalQuantity> UnitPriceAmt {
            get { return this.unitPriceAmt.Value; }
            set { this.unitPriceAmt.Value = value; }
        }

        /**
         * <summary>Business Name: Submitted Invoice Line Amount</summary>
         * 
         * <remarks>Relationship: 
         * FICR_MT600201CA.InvoiceElementDetail.netAmt 
         * Conformance/Cardinality: MANDATORY (1) <p>Derived as 
         * numerator of UnitQuantity * UnitPriceAmt.</p><p>Attribute 
         * cannot be mandatory as it may not be present for a Coverage 
         * Extension Request.</p><p>Field length for value (amount) 
         * includes a decimal point. Decimal point MUST be specified 
         * with 2 and only 2 digits of precision. Example: 
         * &quot;150.12&quot;.</p><p>Example: &lt;netAmt 
         * value=&quot;5000.00&quot; currency=&quot;CAD&quot;/&gt;</p> 
         * <p>RxS1: For the &lt;DIN&gt;/&lt;GTIN&gt;/&lt;UPC&gt; 
         * invoice element detail, specifiy as &quot;x&quot; dollars. 
         * E.g. &quot;50.00&quot; &quot;CAD&quot;.</p><p>RxS1: For the 
         * MARKUP, PROFFEE invoice element details, specify as 
         * &quot;x&quot; dollars. E.g. &quot;12.00&quot; 
         * &quot;CAD&quot;</p> <p>The amount billed for the Invoice 
         * Line product or service. This is the result of Submitted 
         * Unit Quantity * Submitted Unit Amount Price.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"netAmt"})]
        public Money NetAmt {
            get { return this.netAmt.Value; }
            set { this.netAmt.Value = value; }
        }

        /**
         * <summary>Relationship: 
         * FICR_MT600201CA.InvoiceElementDetail.factorNumber</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (0-1) <p>Factor 
         * numbers are used for taxes. They represent the percentage of 
         * tax applied to unitPriceAmt.</p> <p>RxS1: Not permitted, as 
         * taxes are not included in this scenario.</p> <p>Tax 
         * percentage applied to unitPriceAmt</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"factorNumber"})]
        public int? FactorNumber {
            get { return this.factorNumber.Value; }
            set { this.factorNumber.Value = value; }
        }

    }

}