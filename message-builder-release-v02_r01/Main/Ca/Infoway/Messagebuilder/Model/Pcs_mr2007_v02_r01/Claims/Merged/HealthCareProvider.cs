/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2012-02-16 11:03:21 -0500 (Thu, 16 Feb 2012) $
 * Revision:      $LastChangedRevision: 5418 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2007_v02_r01.Claims.Merged {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using System;
    using System.Collections.Generic;


    [Hl7PartTypeMappingAttribute(new string[] {"COCT_MT290000CA.HealthCareProvider","COCT_MT490000CA.HealthCareProvider"})]
    public class HealthCareProvider : MessagePartBean {

        private SET<II, Identifier> id;
        private CV code;
        private PN healthCareProviderPersonName;
        private TEL healthCareProviderPersonTelecom;
        private CV healthCareProviderPersonAdministrativeGenderCode;
        private TS healthCareProviderPersonBirthTime;
        private AD healthCareProviderPersonAddr;

        public HealthCareProvider() {
            this.id = new SETImpl<II, Identifier>(typeof(IIImpl));
            this.code = new CVImpl();
            this.healthCareProviderPersonName = new PNImpl();
            this.healthCareProviderPersonTelecom = new TELImpl();
            this.healthCareProviderPersonAdministrativeGenderCode = new CVImpl();
            this.healthCareProviderPersonBirthTime = new TSImpl();
            this.healthCareProviderPersonAddr = new ADImpl();
        }
        /**
         * <summary>ProviderIdentifierS</summary>
         * 
         * <remarks>(no business name) <p>Provider ID</p> provider 
         * identifier(s</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public ICollection<Identifier> Id {
            get { return this.id.RawSet(); }
        }

        /**
         * <summary>(no business name)</summary>
         * 
         * <remarks><p>Allows for crosswalks between speciality code 
         * sets</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public Code Code {
            get { return (Code) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>NameOfProvider</summary>
         * 
         * <remarks>Name of Provider</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"healthCareProviderPerson/name"})]
        public PersonName HealthCareProviderPersonName {
            get { return this.healthCareProviderPersonName.Value; }
            set { this.healthCareProviderPersonName.Value = value; }
        }

        /**
         * <summary>(no business name)</summary>
         * 
         * <remarks><p>only required if provider is not known to the 
         * Payor</p> (no business name) <p>contact info. for 
         * Provider</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"healthCareProviderPerson/telecom"})]
        public TelecommunicationAddress HealthCareProviderPersonTelecom {
            get { return this.healthCareProviderPersonTelecom.Value; }
            set { this.healthCareProviderPersonTelecom.Value = value; }
        }

        /**
         * <summary>(no business name)</summary>
         * 
         * <remarks><p>only required if provider is not known to the 
         * Payor</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"healthCareProviderPerson/administrativeGenderCode"})]
        public AdministrativeGender HealthCareProviderPersonAdministrativeGenderCode {
            get { return (AdministrativeGender) this.healthCareProviderPersonAdministrativeGenderCode.Value; }
            set { this.healthCareProviderPersonAdministrativeGenderCode.Value = value; }
        }

        /**
         * <summary>(no business name)</summary>
         * 
         * <remarks><p>only required if provider is not known to the 
         * Payor</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"healthCareProviderPerson/birthTime"})]
        public PlatformDate HealthCareProviderPersonBirthTime {
            get { return this.healthCareProviderPersonBirthTime.Value; }
            set { this.healthCareProviderPersonBirthTime.Value = value; }
        }

        /**
         * <summary>CanBeUsedToSpecifyJurisdictionForOOJProviders</summary>
         * 
         * <remarks>Can be used to specify jurisdiction for OOJ 
         * providers <p>Can be used to specify jurisdiction for OOJ 
         * providers</p> (no business name) <p>Can be used to specify 
         * jurisdiction for OOJ providers</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"healthCareProviderPerson/addr"})]
        public PostalAddress HealthCareProviderPersonAddr {
            get { return this.healthCareProviderPersonAddr.Value; }
            set { this.healthCareProviderPersonAddr.Value = value; }
        }

    }

}