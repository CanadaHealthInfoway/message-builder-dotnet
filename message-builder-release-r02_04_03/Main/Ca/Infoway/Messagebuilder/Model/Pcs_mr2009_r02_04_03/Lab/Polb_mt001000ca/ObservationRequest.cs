/**
 * Copyright 2015 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Polb_mt001000ca {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt050007ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt080100ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090102ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090108ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090508ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged;
    using System;
    using System.Collections.Generic;


    [Hl7PartTypeMappingAttribute(new string[] {"POLB_MT001000CA.ObservationRequest"})]
    public class ObservationRequest : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Polb_mt001000ca.IRequestChoice {

        private II id;
        private CD code;
        private CS statusCode;
        private LIST<GTS, GeneralTimingSpecification> effectiveTime;
        private TS availabilityTime;
        private CV priorityCode;
        private SET<CV, Code> confidentialityCode;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt080100ca.SpecimenRole> specimenSpecimen;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt050007ca.Patient recordTargetPatient;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090508ca.HealthcareOrganization performerAssignedEntity;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090108ca.HealthcareWorker> callBackContactAssignedEntity;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.IRecipientChoice> informationRecipientRecipientChoice;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090102ca.HealthcareWorker> verifierAssignedEntity;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.ParentTest occurrenceOfActParentPointer;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.Outbreak pertinentInformation1OutbreakEvent;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.SupportingClinicalInformation> pertinentInformation2SupportingClinicalObservationEvent;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.ReferralRedirectIndicator component1ReferralRedirectIndicator;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.OrderSortKey component2RequestSortKey;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.LabInitiatedOrderIndicator component3LabInitiatedOrderIndicator;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Polb_mt001000ca.IRequestChoice> component4RequestChoice;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged.Includes> subjectOf;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.PriorTestRequest componentOfPriorActRequest;

        public ObservationRequest() {
            this.id = new IIImpl();
            this.code = new CDImpl();
            this.statusCode = new CSImpl();
            this.effectiveTime = new LISTImpl<GTS, GeneralTimingSpecification>(typeof(GTSImpl));
            this.availabilityTime = new TSImpl();
            this.priorityCode = new CVImpl();
            this.confidentialityCode = new SETImpl<CV, Code>(typeof(CVImpl));
            this.specimenSpecimen = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt080100ca.SpecimenRole>();
            this.callBackContactAssignedEntity = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090108ca.HealthcareWorker>();
            this.informationRecipientRecipientChoice = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.IRecipientChoice>();
            this.verifierAssignedEntity = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090102ca.HealthcareWorker>();
            this.pertinentInformation2SupportingClinicalObservationEvent = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.SupportingClinicalInformation>();
            this.component4RequestChoice = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Polb_mt001000ca.IRequestChoice>();
            this.subjectOf = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged.Includes>();
        }
        /**
         * <summary>Business Name: F:Test Identifier</summary>
         * 
         * <remarks>Relationship: POLB_MT001000CA.ObservationRequest.id 
         * Conformance/Cardinality: MANDATORY (1) <p>Used to uniquely 
         * identify this test. Necessary for order revisions and 
         * cancellations.</p> <p>Must contain a value assigned by the 
         * order-placing organization that uniquely identifies this 
         * test request among all test requests in the receiving 
         * application.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>Business Name: G:Test Code</summary>
         * 
         * <remarks>Relationship: 
         * POLB_MT001000CA.ObservationRequest.code 
         * Conformance/Cardinality: REQUIRED (1) <p>Specifies the 
         * requested test to be performed.</p> <p>LOINC code for the 
         * ordered test The value set bound to this attribute is a list 
         * of LOINC codes pulled from the pan-Canadian Laboratory 
         * Observation Code Database (pCLOCD). Only those records 
         * flagged as orderable or &quot;both&quot; in the pCLOCD can 
         * be used.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ObservationOrderableLabType Code {
            get { return (ObservationOrderableLabType) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>Business Name: I:Test Status</summary>
         * 
         * <remarks>Relationship: 
         * POLB_MT001000CA.ObservationRequest.statusCode 
         * Conformance/Cardinality: MANDATORY (1) <p>The statusCode 
         * represents the &quot;state&quot; of the test e.g. active=in 
         * progress or not yet started, complete=resulted and/or 
         * reported.</p> <p>The statusCode represents the 
         * &quot;state&quot; of the act e.g. active=in progress or not 
         * yet started, complete=resulted and/or result reported. It is 
         * up to the order placer to determine when, upon receipt of 
         * one or more results which fulfill this order, the order is 
         * complete.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public ActStatus StatusCode {
            get { return (ActStatus) this.statusCode.Value; }
            set { this.statusCode.Value = value; }
        }

        /**
         * <summary>Business Name: H:Test Request Time Specification</summary>
         * 
         * <remarks>Relationship: 
         * POLB_MT001000CA.ObservationRequest.effectiveTime 
         * Conformance/Cardinality: REQUIRED (0-9) <p>Would be used to 
         * communicate that an Order is for a future date.</p> <p>The 
         * time specification for when this test is requested to be 
         * performed or occur or when the changes to the request took 
         * effect or are supposed to take effect. This time 
         * specification includes support for complex, repeating 
         * orders.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public IList<GeneralTimingSpecification> EffectiveTime {
            get { return this.effectiveTime.RawList(); }
        }

        /**
         * <summary>Business Name: L:Test Request Availability Time</summary>
         * 
         * <remarks>Relationship: 
         * POLB_MT001000CA.ObservationRequest.availabilityTime 
         * Conformance/Cardinality: REQUIRED (0-1) <p>OLIS needs to be 
         * able to communicate the timestamp that it assigns to an 
         * ObservationRequest (test request) when the test request is 
         * created, revised, and whenever result information is added 
         * or revised. ObservationRequest.availabilityTime has been 
         * determined to be the most appropriate field.</p> <p>The 
         * date/time when this order is available.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"availabilityTime"})]
        public PlatformDate AvailabilityTime {
            get { return this.availabilityTime.Value; }
            set { this.availabilityTime.Value = value; }
        }

        /**
         * <summary>Business Name: J:Test Priority Code</summary>
         * 
         * <remarks>Relationship: 
         * POLB_MT001000CA.ObservationRequest.priorityCode 
         * Conformance/Cardinality: REQUIRED (1) <p>Communicates 
         * requested test priority (e.g. routine, stat, etc.)</p> 
         * <p>Priority code associated with a specific test.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"priorityCode"})]
        public ActPriority PriorityCode {
            get { return (ActPriority) this.priorityCode.Value; }
            set { this.priorityCode.Value = value; }
        }

        /**
         * <summary>Business Name: K:Test Masking Indicator</summary>
         * 
         * <remarks>Relationship: 
         * POLB_MT001000CA.ObservationRequest.confidentialityCode 
         * Conformance/Cardinality: REQUIRED (0-2) <p>This code allows 
         * for privacy control by patients as well as flagged for 'not 
         * for disclosure to patient' by care providers.</p> <p>Any 
         * piece of information is potentially subject to 'masking', 
         * restricting it's availability from providers who have not 
         * been specifically authorized. Additionally, some clinical 
         * data requires the ability to mark as &quot;not for direct 
         * disclosure to patient&quot;. The values in this attribute 
         * enable the above masking to be represented and messaged.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public ICollection<x_BasicConfidentialityKind> ConfidentialityCode {
            get { return this.confidentialityCode.RawSet<x_BasicConfidentialityKind>(); }
        }

        /**
         * <summary>Relationship: POLB_MT001000CA.Specimen.specimen</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"specimen/specimen"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt080100ca.SpecimenRole> SpecimenSpecimen {
            get { return this.specimenSpecimen; }
        }

        /**
         * <summary>Relationship: POLB_MT001000CA.RecordTarget.patient</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"recordTarget/patient"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt050007ca.Patient RecordTargetPatient {
            get { return this.recordTargetPatient; }
            set { this.recordTargetPatient = value; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.Performer.assignedEntity</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"performer/assignedEntity"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090508ca.HealthcareOrganization PerformerAssignedEntity {
            get { return this.performerAssignedEntity; }
            set { this.performerAssignedEntity = value; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.CallBackContact.assignedEntity</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"callBackContact/assignedEntity"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090108ca.HealthcareWorker> CallBackContactAssignedEntity {
            get { return this.callBackContactAssignedEntity; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.InformationRecipient.recipientChoice</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"informationRecipient/recipientChoice"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.IRecipientChoice> InformationRecipientRecipientChoice {
            get { return this.informationRecipientRecipientChoice; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.Verifier.assignedEntity</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"verifier/assignedEntity"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090102ca.HealthcareWorker> VerifierAssignedEntity {
            get { return this.verifierAssignedEntity; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.OccurrenceOf.actParentPointer</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"occurrenceOf/actParentPointer"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.ParentTest OccurrenceOfActParentPointer {
            get { return this.occurrenceOfActParentPointer; }
            set { this.occurrenceOfActParentPointer = value; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.PertinentInformation2.outbreakEvent</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation1/outbreakEvent"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.Outbreak PertinentInformation1OutbreakEvent {
            get { return this.pertinentInformation1OutbreakEvent; }
            set { this.pertinentInformation1OutbreakEvent = value; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.PertinentInformation.supportingClinicalObservationEvent</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"pertinentInformation2/supportingClinicalObservationEvent"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.SupportingClinicalInformation> PertinentInformation2SupportingClinicalObservationEvent {
            get { return this.pertinentInformation2SupportingClinicalObservationEvent; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.Component1.referralRedirectIndicator</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"component1/referralRedirectIndicator"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.ReferralRedirectIndicator Component1ReferralRedirectIndicator {
            get { return this.component1ReferralRedirectIndicator; }
            set { this.component1ReferralRedirectIndicator = value; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.Component2.requestSortKey</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"component2/requestSortKey"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.OrderSortKey Component2RequestSortKey {
            get { return this.component2RequestSortKey; }
            set { this.component2RequestSortKey = value; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.Component.labInitiatedOrderIndicator</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"component3/labInitiatedOrderIndicator"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.LabInitiatedOrderIndicator Component3LabInitiatedOrderIndicator {
            get { return this.component3LabInitiatedOrderIndicator; }
            set { this.component3LabInitiatedOrderIndicator = value; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.Component5.requestChoice</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"component4/requestChoice"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Polb_mt001000ca.IRequestChoice> Component4RequestChoice {
            get { return this.component4RequestChoice; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.RequestChoice.subjectOf</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (0-100)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subjectOf"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged.Includes> SubjectOf {
            get { return this.subjectOf; }
        }

        /**
         * <summary>Relationship: 
         * POLB_MT001000CA.Component3.priorActRequest</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"componentOf/priorActRequest"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Lab.Merged.PriorTestRequest ComponentOfPriorActRequest {
            get { return this.componentOfPriorActRequest; }
            set { this.componentOfPriorActRequest = value; }
        }

    }

}