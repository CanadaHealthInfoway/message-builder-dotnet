/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Immunization.Poiz_mt061150ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Immunization.Merged;
    using System;


    /**
     * <summary>Immunizations</summary>
     * 
     * <remarks><p>A record of products administered to a patient 
     * specific to immunization.</p> <p>Necessary component of a 
     * person's overall vaccine profile. Helps deal with outbreaks 
     * and also vaccine contraindication checking.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"POIZ_MT061150CA.Immunization"})]
    public class Immunizations : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Iehr.Comt_mt111111ca.ISummary {

        private II id;
        private BL negationInd;
        private CS statusCode;
        private TS effectiveTime;
        private CV uncertaintyCode;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Immunization.Merged.AdministeredTo subject;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Immunization.Poiz_mt061150ca.Vaccine consumableAdministerableMedicineAdministerableVaccine;
        private BL subjectOf1DetectedIssuesIndicator;
        private BL subjectOf2AnnotationIndicator;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Immunization.Merged.InvestigationEvent causeInvestigationEvent;

        public Immunizations() {
            this.id = new IIImpl();
            this.negationInd = new BLImpl();
            this.statusCode = new CSImpl();
            this.effectiveTime = new TSImpl();
            this.uncertaintyCode = new CVImpl();
            this.subjectOf1DetectedIssuesIndicator = new BLImpl(false);
            this.subjectOf2AnnotationIndicator = new BLImpl(false);
        }
        /**
         * <summary>A:Immunization Record Id</summary>
         * 
         * <remarks><p>This is an identifier assigned to a unique 
         * instance of an immunization record.</p> <p>Allows for the 
         * unique referencing of a specific immunization record. This 
         * should be known for query responses and is, therefore, 
         * mandatory.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>Not Immunized?</summary>
         * 
         * <remarks><p>An explicit indication that a person has not 
         * been immunized with the specified vaccine at the time 
         * indicated.</p> <p>Tracking failures to be immunized is also 
         * important in immunization reporting. Marked as mandatory 
         * because it is not meaningful for this flag to be 
         * 'unknown'.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"negationInd"})]
        public bool? NegationInd {
            get { return this.negationInd.Value; }
            set { this.negationInd.Value = value; }
        }

        /**
         * <summary>Immunization Event Status</summary>
         * 
         * <remarks><p>Status of the immunization event</p> <p>Needed 
         * to differentiate between valid, obsolete and invalid 
         * immunization events (e.g. immunization event has been 
         * retracted or nullified) and is therefore mandatory.</p> 
         * <p>Nullified=Retracted</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public ActStatus StatusCode {
            get { return (ActStatus) this.statusCode.Value; }
            set { this.statusCode.Value = value; }
        }

        /**
         * <summary>Immunization Date</summary>
         * 
         * <remarks><p>The date the vaccine was administered to the 
         * patient.</p> <p>Important information for establishing the 
         * validity of the immunization records, and therefore 
         * mandatory. Also used in the scheduling of subsequent 
         * immunizations.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public PlatformDate EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>Uncertainty Code</summary>
         * 
         * <remarks><p>An indication of uncertainty regarding an 
         * immunization event</p> <p>Allows for users of information to 
         * determine the degree of uncertainty regarding the details of 
         * an immunization event and is therefore populated.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"uncertaintyCode"})]
        public ActUncertainty UncertaintyCode {
            get { return (ActUncertainty) this.uncertaintyCode.Value; }
            set { this.uncertaintyCode.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subject"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Immunization.Merged.AdministeredTo Subject {
            get { return this.subject; }
            set { this.subject = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"consumable/administerableMedicine/administerableVaccine"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Immunization.Poiz_mt061150ca.Vaccine ConsumableAdministerableMedicineAdministerableVaccine {
            get { return this.consumableAdministerableMedicineAdministerableVaccine; }
            set { this.consumableAdministerableMedicineAdministerableVaccine = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf1/detectedIssuesIndicator"})]
        public bool? SubjectOf1DetectedIssuesIndicator {
            get { return this.subjectOf1DetectedIssuesIndicator.Value; }
            set { this.subjectOf1DetectedIssuesIndicator.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf2/annotationIndicator"})]
        public bool? SubjectOf2AnnotationIndicator {
            get { return this.subjectOf2AnnotationIndicator.Value; }
            set { this.subjectOf2AnnotationIndicator.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"cause/investigationEvent"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Immunization.Merged.InvestigationEvent CauseInvestigationEvent {
            get { return this.causeInvestigationEvent; }
            set { this.causeInvestigationEvent = value; }
        }

    }

}