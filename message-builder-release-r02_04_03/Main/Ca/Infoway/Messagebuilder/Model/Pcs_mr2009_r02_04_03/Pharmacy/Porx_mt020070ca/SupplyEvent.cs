/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Pharmacy.Porx_mt020070ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Pharmacy.Merged;
    using System;


    [Hl7PartTypeMappingAttribute(new string[] {"PORX_MT020070CA.SupplyEvent"})]
    public class SupplyEvent : MessagePartBean {

        private CV code;
        private IVL<TS, Interval<PlatformDate>> effectiveTime;
        private INT repeatNumber;
        private PQ quantity;
        private IVL<TS, Interval<PlatformDate>> expectedUseTime;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged.Dispensed product;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Pharmacy.Merged.DispenseShipToLocation destinationServiceDeliveryLocation;

        public SupplyEvent() {
            this.code = new CVImpl();
            this.effectiveTime = new IVLImpl<TS, Interval<PlatformDate>>();
            this.repeatNumber = new INTImpl();
            this.quantity = new PQImpl();
            this.expectedUseTime = new IVLImpl<TS, Interval<PlatformDate>>();
        }
        /**
         * <summary>Business Name: Dispense Type</summary>
         * 
         * <remarks>Relationship: PORX_MT020070CA.SupplyEvent.code 
         * Conformance/Cardinality: MANDATORY (1) <p>Indicates reason 
         * for the size of dispense. Because it defines what type of 
         * dispense is occurring, the attribute is mandatory.</p> 
         * <p>Indicates the type of dispensing event that is performed. 
         * Examples include: Trial Fill, Completion of Trial, Partial 
         * Fill, Emergency Fill, Samples, etc.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ActPharmacySupplyType Code {
            get { return (ActPharmacySupplyType) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>Business Name: Dispense Processing and Pickup Date</summary>
         * 
         * <remarks>Relationship: 
         * PORX_MT020070CA.SupplyEvent.effectiveTime 
         * Conformance/Cardinality: MANDATORY (1) <p>Used by the system 
         * in calculating expected exhaustion time. Valuable in 
         * compliance checking. This attribute is mandatory because an 
         * existing dispense record must at least indicate the date it 
         * was processed.</p> <p>Must be able to post-date a dispense 
         * (enter retroactively) e.g. system failure.</p> <p>Represents 
         * the date the dispense product was prepared and when the 
         * product was picked up by or delivered to the patient. The 
         * dispense processing date and pickup date can be back dated 
         * to reflect when the actual processing and pickup occurred. 
         * The lower-bound of the period signifies the 
         * dispense-processing date whereas the upper-bound signifies 
         * the dispense-pickup date.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>Business Name: Number of remaining fills</summary>
         * 
         * <remarks>Relationship: 
         * PORX_MT020070CA.SupplyEvent.repeatNumber 
         * Conformance/Cardinality: REQUIRED (0-1) <p>The number of 
         * remaining fills is used to evaluate the 
         * &quot;completed&quot; status of the prescription.</p> 
         * <p>Indicates the number or remaining fills, if any, for this 
         * prescription.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"repeatNumber"})]
        public int? RepeatNumber {
            get { return this.repeatNumber.Value; }
            set { this.repeatNumber.Value = value; }
        }

        /**
         * <summary>Business Name: Dispensed Quantity</summary>
         * 
         * <remarks>Relationship: PORX_MT020070CA.SupplyEvent.quantity 
         * Conformance/Cardinality: MANDATORY (1) <p>Critical in 
         * understanding the patient's medication profile, both past 
         * and current, This is also mandatory to allow determination 
         * of the amount that remains to be dispensed against the 
         * prescription.</p> <p>The amount of medication that has been 
         * dispensed. Includes unit of measure.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"quantity"})]
        public PhysicalQuantity Quantity {
            get { return this.quantity.Value; }
            set { this.quantity.Value = value; }
        }

        /**
         * <summary>Business Name: Dispensed Days Supply</summary>
         * 
         * <remarks>Relationship: 
         * PORX_MT020070CA.SupplyEvent.expectedUseTime 
         * Conformance/Cardinality: POPULATED (1) <p>Useful in 
         * monitoring patient compliance. May also be useful in 
         * determining and managing certain contraindications 
         * ('Fill-Too-Soon', 'Fill-Too-Late', and 'Duration of 
         * Therapy'). Because 'Days Supply' may be necessary to compute 
         * total dispensed quantity, it is made a 'populated' 
         * field.</p> <p>The number of days that the dispensed quantity 
         * is expected to last.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"expectedUseTime"})]
        public Interval<PlatformDate> ExpectedUseTime {
            get { return this.expectedUseTime.Value; }
            set { this.expectedUseTime.Value = value; }
        }

        /**
         * <summary>Relationship: PORX_MT020070CA.SupplyEvent.product</summary>
         * 
         * <remarks>Conformance/Cardinality: MANDATORY (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"product"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged.Dispensed Product {
            get { return this.product; }
            set { this.product = value; }
        }

        /**
         * <summary>Relationship: 
         * PORX_MT020070CA.Destination2.serviceDeliveryLocation</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"destination/serviceDeliveryLocation"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Pharmacy.Merged.DispenseShipToLocation DestinationServiceDeliveryLocation {
            get { return this.destinationServiceDeliveryLocation; }
            set { this.destinationServiceDeliveryLocation = value; }
        }

    }

}