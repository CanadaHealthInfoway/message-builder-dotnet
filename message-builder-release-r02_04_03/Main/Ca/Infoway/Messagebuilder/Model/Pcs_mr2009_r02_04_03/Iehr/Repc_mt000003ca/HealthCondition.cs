/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Iehr.Repc_mt000003ca {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090508ca;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Iehr.Merged;
    using Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Health Condition</summary>
     * 
     * <remarks><p>A record of a patient's health condition, as 
     * tracked over time. Examples include diseases, disabilities, 
     * pregnancy, lactation and other clinical conditions of 
     * interest.</p><p>Also known as &quot;Problem&quot; (from a 
     * 'problem list').</p> <p>A record of a patient's health 
     * condition, as tracked over time. Examples include diseases, 
     * disabilities, pregnancy, lactation and other clinical 
     * conditions of interest.</p><p>Also known as 
     * &quot;Problem&quot; (from a 'problem list').</p> 
     * <p>Necessary component of a person's overall profile. Helps 
     * with contraindication checking.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"REPC_MT000003CA.ConditionEvent"})]
    public class HealthCondition : MessagePartBean {

        private CV code;
        private BL negationInd;
        private CS statusCode;
        private IVL<TS, Interval<PlatformDate>> effectiveTime;
        private SET<CV, Code> confidentialityCode;
        private CD value;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.IActingPerson informantActingPerson;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Iehr.Merged.OldCondition> predecessorOldCondition;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged.Includes subjectOf;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged.CareCompositions> componentOfPatientCareProvisionEvent;

        public HealthCondition() {
            this.code = new CVImpl();
            this.negationInd = new BLImpl();
            this.statusCode = new CSImpl();
            this.effectiveTime = new IVLImpl<TS, Interval<PlatformDate>>();
            this.confidentialityCode = new SETImpl<CV, Code>(typeof(CVImpl));
            this.value = new CDImpl();
            this.predecessorOldCondition = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Iehr.Merged.OldCondition>();
            this.componentOfPatientCareProvisionEvent = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged.CareCompositions>();
        }
        /**
         * <summary>B: Condition Type</summary>
         * 
         * <remarks><p>Code is fixed DX if not using SNOMED;</p> 
         * <p>Designates the concept in DiagnosisValue as a 
         * Diagnosis</p> </p><p>Since all diagnosis concepts can be 
         * represented in a single field, this domain is a fixed 
         * value</p> </p><p>Since all diagnosis concepts can be 
         * represented in a single field, this domain is a fixed 
         * value</p> </p><p>Since all diagnosis concepts can be 
         * represented in a single field, this domain is a fixed 
         * value</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public Code Code {
            get { return (Code) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>E: Refuted Indicator</summary>
         * 
         * <remarks></p> </p> </p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"negationInd"})]
        public bool? NegationInd {
            get { return this.negationInd.Value; }
            set { this.negationInd.Value = value; }
        }

        /**
         * <summary>C:Condition Status</summary>
         * 
         * <remarks></p><p>Indicates whether the condition is still 
         * being monitored as relevant to the patient's health 
         * ('active') or whether the condition is no longer considered 
         * a relevant 'problem' ('completed'). It may also be 
         * 'obsolete' in circumstances where the record has been 
         * replaced.</p><p>Note that a problem may be considered 
         * 'active' even if the underlying condition is no longer 
         * affecting the patient. For example, for a patient who was 
         * recently pregnant, the pregnancy has ended, but the 
         * pregnancy would still be an 'active' condition record 
         * because of it's ongoing impact on the patient's healthcare 
         * situation.</p><p>To convey the actual clinical status of the 
         * condition, use SNOMED post-coordination in the Condition 
         * attribute.</p> </p><p>Indicates whether the condition is 
         * still being monitored as relevant to the patient's health 
         * ('active') or whether the condition is no longer considered 
         * a relevant 'problem' ('completed'). It may also be 
         * 'obsolete' in circumstances where the record has been 
         * replaced.</p><p>Note that a problem may be considered 
         * 'active' even if the underlying condition is no longer 
         * affecting the patient. For example, for a patient who was 
         * recently pregnant, the pregnancy has ended, but the 
         * pregnancy would still be an 'active' condition record 
         * because of it's ongoing impact on the patient's healthcare 
         * situation.</p><p>To convey the actual clinical status of the 
         * condition, use SNOMED post-coordination in the Condition 
         * attribute.</p> </p><p>Indicates whether the condition is 
         * still being monitored as relevant to the patient's health 
         * ('active') or whether the condition is no longer considered 
         * a relevant 'problem' ('completed'). It may also be 
         * 'obsolete' in circumstances where the record has been 
         * replaced.</p><p>Note that a problem may be considered 
         * 'active' even if the underlying condition is no longer 
         * affecting the patient. For example, for a patient who was 
         * recently pregnant, the pregnancy has ended, but the 
         * pregnancy would still be an 'active' condition record 
         * because of it's ongoing impact on the patient's healthcare 
         * situation.</p><p>To convey the actual clinical status of the 
         * condition, use SNOMED post-coordination in the Condition 
         * attribute.</p> </p><p>Indicates whether the condition is 
         * still being monitored as relevant to the patient's health 
         * ('active') or whether the condition is no longer considered 
         * a relevant 'problem' ('completed'). It may also be 
         * 'obsolete' in circumstances where the record has been 
         * replaced.</p><p>Note that a problem may be considered 
         * 'active' even if the underlying condition is no longer 
         * affecting the patient. For example, for a patient who was 
         * recently pregnant, the pregnancy has ended, but the 
         * pregnancy would still be an 'active' condition record 
         * because of it's ongoing impact on the patient's healthcare 
         * situation.</p><p>To convey the actual clinical status of the 
         * condition, use SNOMED post-coordination in the Condition 
         * attribute.</p> </p> </p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public ActStatus StatusCode {
            get { return (ActStatus) this.statusCode.Value; }
            set { this.statusCode.Value = value; }
        }

        /**
         * <summary>G: Condition Time Period</summary>
         * 
         * <remarks><p>The date on which the condition first began and 
         * when it ended.</p><p>For ongoing conditions such as chronic 
         * diseases, the upper boundary may be unknown.</p><p>For 
         * transient conditions such as pregnancy, lactation, etc; the 
         * upper boundary of the period would usually be specified to 
         * signify the end of the condition.</p> <p>The date on which 
         * the condition first began and when it ended.</p><p>For 
         * ongoing conditions such as chronic diseases, the upper 
         * boundary may be unknown.</p><p>For transient conditions such 
         * as pregnancy, lactation, etc; the upper boundary of the 
         * period would usually be specified to signify the end of the 
         * condition.</p> <p>The date on which the condition first 
         * began and when it ended.</p><p>For ongoing conditions such 
         * as chronic diseases, the upper boundary may be 
         * unknown.</p><p>For transient conditions such as pregnancy, 
         * lactation, etc; the upper boundary of the period would 
         * usually be specified to signify the end of the 
         * condition.</p> </p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>F: Condition Masking Indicators</summary>
         * 
         * <remarks></p> </p> </p> </p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public ICollection<x_BasicConfidentialityKind> ConfidentialityCode {
            get { return this.confidentialityCode.RawSet<x_BasicConfidentialityKind>(); }
        }

        /**
         * <summary>K:Condition</summary>
         * 
         * <remarks><p>A code indicating the specific condition. E.g. 
         * Hypertension, Pregnancy.</p> </p> </p> </p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"value"})]
        public DiagnosisValue Value {
            get { return (DiagnosisValue) this.value.Value; }
            set { this.value.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"informant/actingPerson"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.IActingPerson InformantActingPerson {
            get { return this.informantActingPerson; }
            set { this.informantActingPerson = value; }
        }

        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.HealthcareWorker InformantActingPersonAsAssignedEntity1 {
            get { return this.informantActingPerson is Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.HealthcareWorker ? (Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.HealthcareWorker) this.informantActingPerson : (Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.HealthcareWorker) null; }
        }
        public bool HasInformantActingPersonAsAssignedEntity1() {
            return (this.informantActingPerson is Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.HealthcareWorker);
        }

        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090508ca.HealthcareOrganization InformantActingPersonAsAssignedEntity2 {
            get { return this.informantActingPerson is Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090508ca.HealthcareOrganization ? (Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090508ca.HealthcareOrganization) this.informantActingPerson : (Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090508ca.HealthcareOrganization) null; }
        }
        public bool HasInformantActingPersonAsAssignedEntity2() {
            return (this.informantActingPerson is Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Coct_mt090508ca.HealthcareOrganization);
        }

        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.Patient_2 InformantActingPersonAsPatient {
            get { return this.informantActingPerson is Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.Patient_2 ? (Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.Patient_2) this.informantActingPerson : (Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.Patient_2) null; }
        }
        public bool HasInformantActingPersonAsPatient() {
            return (this.informantActingPerson is Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.Patient_2);
        }

        [Hl7XmlMappingAttribute(new string[] {"predecessor/oldCondition"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Iehr.Merged.OldCondition> PredecessorOldCondition {
            get { return this.predecessorOldCondition; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged.Includes SubjectOf {
            get { return this.subjectOf; }
            set { this.subjectOf = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"componentOf/patientCareProvisionEvent"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Merged.CareCompositions> ComponentOfPatientCareProvisionEvent {
            get { return this.componentOfPatientCareProvisionEvent; }
        }

    }

}