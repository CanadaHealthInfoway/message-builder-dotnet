/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Issues</summary>
     * 
     * <remarks>COCT_MT260030CA.DetectedIssueEvent: Issues <p>This 
     * is the list of clinical and business issues that have been 
     * detected and recorded involving the current action.</p> 
     * <p>Provides a list of issues that have been detected and/or 
     * managed.</p> COCT_MT260022CA.DetectedIssueEvent: Issues 
     * <p>This is the list of clinical and business-rule issues 
     * that have been detected and recorded involving the current 
     * action.</p> <p>Provides a list of issues that have been 
     * detected.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"COCT_MT260020CA.DetectedIssueEvent","COCT_MT260022CA.DetectedIssueEvent","COCT_MT260030CA.DetectedIssueEvent"})]
    public class Issues : MessagePartBean {

        private CV code;
        private ST text;
        private CV priorityCode;
        private SET<ST, String> targetSiteCode;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.ICausalActs> subjectCausalActs;
        private Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.IssueDescription instantiationDetectedIssueDefinition;
        private IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.IssueManagements_2> mitigatedByDetectedIssueManagement;
        private CV subjectOf2SeverityObservationValue;
        private BL triggerForActRequest;
        private BL subjectOf1StorageIntent;

        public Issues() {
            this.code = new CVImpl();
            this.text = new STImpl();
            this.priorityCode = new CVImpl();
            this.targetSiteCode = new SETImpl<ST, String>(typeof(STImpl));
            this.subjectCausalActs = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.ICausalActs>();
            this.mitigatedByDetectedIssueManagement = new List<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.IssueManagements_2>();
            this.subjectOf2SeverityObservationValue = new CVImpl();
            this.triggerForActRequest = new BLImpl(false);
            this.subjectOf1StorageIntent = new BLImpl(false);
        }
        /**
         * <summary>IssueType</summary>
         * 
         * <remarks>A:Issue Type <p>A coded value that is used to 
         * distinguish between different kinds of issues. Types of 
         * issue include: unrecognized identifiers, permission issues, 
         * drug-drug contraindications, drug-allergy alerts, duplicate 
         * therapies, suspect fraud etc.</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         * Type</p><p>ZPS.7.1</p><p>ZDU.9.1(PLYPHRM)</p><p>ZDU.10.1 
         * (PLYDOC)</p><p>ZDU.6.2</p><p>ZDU.6.4</p><p>ZDU.7.3</p><p>DRU.100-01</p><p>DUR/PPS.439-E4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         * Type</p><p>ZPS.7.1</p><p>ZDU.9.1(PLYPHRM)</p><p>ZDU.10.1 
         * (PLYDOC)</p><p>ZDU.6.2</p><p>ZDU.6.4</p><p>ZDU.7.3</p><p>DRU.100-01</p><p>DUR/PPS.439-E4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         * Type</p><p>ZPS.7.1</p><p>ZDU.9.1(PLYPHRM)</p><p>ZDU.10.1 
         * (PLYDOC)</p><p>ZDU.6.2</p><p>ZDU.6.4</p><p>ZDU.7.3</p><p>DRU.100-01</p><p>DUR/PPS.439-E4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         * Type</p><p>ZPS.7.1</p><p>ZDU.9.1(PLYPHRM)</p><p>ZDU.10.1 
         * (PLYDOC)</p><p>ZDU.6.2</p><p>ZDU.6.4</p><p>ZDU.7.3</p><p>DRU.100-01</p><p>DUR/PPS.439-E4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         * Type</p><p>ZPS.7.1</p><p>ZDU.9.1(PLYPHRM)</p><p>ZDU.10.1 
         * (PLYDOC)</p><p>ZDU.6.2</p><p>ZDU.6.4</p><p>ZDU.7.3</p><p>DRU.100-01</p><p>DUR/PPS.439-E4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         * Type</p><p>ZPS.7.1</p><p>ZDU.9.1(PLYPHRM)</p><p>ZDU.10.1 
         * (PLYDOC)</p><p>ZDU.6.2</p><p>ZDU.6.4</p><p>ZDU.7.3</p><p>DRU.100-01</p><p>DUR/PPS.439-E4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         * Type</p><p>ZPS.7.1</p><p>ZDU.9.1(PLYPHRM)</p><p>ZDU.10.1 
         * (PLYDOC)</p><p>ZDU.6.2</p><p>ZDU.6.4</p><p>ZDU.7.3</p><p>DRU.100-01</p><p>DUR/PPS.439-E4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         * Type</p><p>ZPS.7.1</p><p>ZDU.9.1(PLYPHRM)</p><p>ZDU.10.1 
         * (PLYDOC)</p><p>ZDU.6.2</p><p>ZDU.6.4</p><p>ZDU.7.3</p><p>DRU.100-01</p><p>DUR/PPS.439-E4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         * Type</p><p>ZPS.7.1</p><p>ZDU.9.1(PLYPHRM)</p><p>ZDU.10.1 
         * (PLYDOC)</p><p>ZDU.6.2</p><p>ZDU.6.4</p><p>ZDU.7.3</p><p>DRU.100-01</p><p>DUR/PPS.439-E4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         * Type</p><p>ZPS.7.1</p><p>ZDU.9.1(PLYPHRM)</p><p>ZDU.10.1 
         * (PLYDOC)</p><p>ZDU.6.2</p><p>ZDU.6.4</p><p>ZDU.7.3</p><p>DRU.100-01</p><p>DUR/PPS.439-E4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         * Type</p><p>ZPS.7.1</p><p>ZDU.9.1(PLYPHRM)</p><p>ZDU.10.1 
         * (PLYDOC)</p><p>ZDU.6.2</p><p>ZDU.6.4</p><p>ZDU.7.3</p><p>DRU.100-01</p><p>DUR/PPS.439-E4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         * Type</p><p>ZPS.7.1</p><p>ZDU.9.1(PLYPHRM)</p><p>ZDU.10.1 
         * (PLYDOC)</p><p>ZDU.6.2</p><p>ZDU.6.4</p><p>ZDU.7.3</p><p>DRU.100-01</p><p>DUR/PPS.439-E4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.crossSensitive (if code is related 
         * reaction dected issue then crossSensitive is 
         * 'True')</p><p>Distinguishes between DAI, DDI, DosageCheck, 
         * DPD, and Duplicate Therapy 
         * Contraindications</p><p>Contraindication.DosageContraType</p><p>OverrideReason.reasonDomain</p><p>ZP3.3</p><p>E06(for 
         * contraindications errors are handled at transmission or 
         * controlAct wrapper level)</p><p>05.03D</p><p>DUR Response 
         * Codes</p><p>Interaction 
         
         * ... [rest of documentation truncated due to excessive length]
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ActDetectedIssueCode Code {
            get { return (ActDetectedIssueCode) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>IssueDetails</summary>
         * 
         * <remarks>D:Issue Details D:Issue Details <p>A free form 
         * textual description of a detected issue. This textual 
         * information is provided to either augment the coded 
         * information or in place of the coded information.</p> 
         * <p>Contraindication.DDIDescription</p><p>E20(for 
         * contraindication errors are handled at transmission or 
         * controlact wrapper level)</p><p>ZPE.4</p><p>ZDU.11.1</p> 
         * <p>Contraindication.DDIDescription</p><p>E20(for 
         * contraindication errors are handled at transmission or 
         * controlact wrapper level)</p><p>ZPE.4</p><p>ZDU.11.1</p> 
         * <p>Contraindication.DDIDescription</p><p>E20(for 
         * contraindication errors are handled at transmission or 
         * controlact wrapper level)</p><p>ZPE.4</p><p>ZDU.11.1</p> 
         * <p>Contraindication.DDIDescription</p><p>E20(for 
         * contraindication errors are handled at transmission or 
         * controlact wrapper level)</p><p>ZPE.4</p><p>ZDU.11.1</p> 
         * <p>Lets providers see textual explanation of the issue.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"text"})]
        public String Text {
            get { return this.text.Value; }
            set { this.text.Value = value; }
        }

        /**
         * <summary>IssuePriority</summary>
         * 
         * <remarks>C:Issue Priority C:Issue Priority <p>A coded value 
         * denoting the importance of a detectable issue. Valid codes 
         * are: I - for Information, E - for Error, and W - for 
         * Warning.</p> <p>Allows the provider to make informed 
         * decision on the importance and criticality of an issue. May 
         * also be used by the DIS to determine the order of returning 
         * issues. Attribute is mandatory because every issue needs to 
         * be prioritized.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"priorityCode"})]
        public ActIssuePriority PriorityCode {
            get { return (ActIssuePriority) this.priorityCode.Value; }
            set { this.priorityCode.Value = value; }
        }

        /**
         * <summary>MessageIssueLocation</summary>
         * 
         * <remarks>Message Issue Location <p>Used to identify XPath 
         * references that indicate which attributes in a message 
         * instance were involved in the issue.</p> Message Issue 
         * Location <p>Used to identify XPath referencesthat indicate 
         * which attributes in a message instance were involved in the 
         * issue.</p> Message Issue Location <p>Used to identify XPath 
         * references that indicate which attributes from the message 
         * instance were involved in the issue.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"targetSiteCode"})]
        public ICollection<String> TargetSiteCode {
            get { return this.targetSiteCode.RawSet(); }
        }

        [Hl7XmlMappingAttribute(new string[] {"subject/causalActs"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.ICausalActs> SubjectCausalActs {
            get { return this.subjectCausalActs; }
        }

        [Hl7XmlMappingAttribute(new string[] {"instantiation/detectedIssueDefinition"})]
        public Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.IssueDescription InstantiationDetectedIssueDefinition {
            get { return this.instantiationDetectedIssueDefinition; }
            set { this.instantiationDetectedIssueDefinition = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"mitigatedBy/detectedIssueManagement"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Pcs_mr2009_r02_04_03.Common.Merged.IssueManagements_2> MitigatedByDetectedIssueManagement {
            get { return this.mitigatedByDetectedIssueManagement; }
        }

        /**
         * <summary>SeverityCode</summary>
         * 
         * <remarks>B:Severity Code <p>A coded value denoting the 
         * gravity of the detected issue.</p> 
         * <p>Contraindication.severity</p><p>ZPE.3</p><p>MB.05.03A</p><p>Severity</p><p>ZDU.6.3</p><p>ZDU.8.4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.severity</p><p>ZPE.3</p><p>MB.05.03A</p><p>Severity</p><p>ZDU.6.3</p><p>ZDU.8.4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.severity</p><p>ZPE.3</p><p>MB.05.03A</p><p>Severity</p><p>ZDU.6.3</p><p>ZDU.8.4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.severity</p><p>ZPE.3</p><p>MB.05.03A</p><p>Severity</p><p>ZDU.6.3</p><p>ZDU.8.4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.severity</p><p>ZPE.3</p><p>MB.05.03A</p><p>Severity</p><p>ZDU.6.3</p><p>ZDU.8.4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.severity</p><p>ZPE.3</p><p>MB.05.03A</p><p>Severity</p><p>ZDU.6.3</p><p>ZDU.8.4</p><p>A_DetectedMedicationIssue</p> 
         * <p>Contraindication.severity</p><p>ZPE.3</p><p>MB.05.03A</p><p>Severity</p><p>ZDU.6.3</p><p>ZDU.8.4</p><p>A_DetectedMedicationIssue</p> 
         * <p>May be used to determine which contraindications must be 
         * managed and how.</p><p>This attribute is marked as 
         * &quot;mandatory&quot; because the code denoting the level of 
         * severity must be specified.</p> <p>May be used to determine 
         * which contraindications must be managed and how.</p><p>This 
         * attribute is marked as &quot;mandatory&quot; because the 
         * code denoting the level of severity must be specified.</p> 
         * B:Severity Code</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subjectOf/severityObservation/value","subjectOf2/severityObservation/value"})]
        [Hl7MapByPartType(Name="subjectOf", Type="COCT_MT260030CA.Subject")]
        [Hl7MapByPartType(Name="subjectOf/severityObservation", Type="COCT_MT260030CA.SeverityObservation")]
        [Hl7MapByPartType(Name="subjectOf2", Type="COCT_MT260020CA.Subject")]
        [Hl7MapByPartType(Name="subjectOf2/severityObservation", Type="COCT_MT260020CA.SeverityObservation")]
        public SeverityObservation SubjectOf2SeverityObservationValue {
            get { return (SeverityObservation) this.subjectOf2SeverityObservationValue.Value; }
            set { this.subjectOf2SeverityObservationValue.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"triggerFor/actRequest"})]
        public bool? TriggerForActRequest {
            get { return this.triggerForActRequest.Value; }
            set { this.triggerForActRequest.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf1/storageIntent"})]
        public bool? SubjectOf1StorageIntent {
            get { return this.subjectOf1StorageIntent.Value; }
            set { this.subjectOf1StorageIntent.Value = value; }
        }

    }

}