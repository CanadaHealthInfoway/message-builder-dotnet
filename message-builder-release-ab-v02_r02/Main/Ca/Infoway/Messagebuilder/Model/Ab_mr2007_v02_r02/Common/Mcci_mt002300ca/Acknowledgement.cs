/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Common.Mcci_mt002300ca {
    using Ca.Infoway.Messagebuilder;
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged;
    using System;
    using System.Collections.Generic;


    [Hl7PartTypeMappingAttribute(new string[] {"MCCI_MT002300CA.Acknowledgement"})]
    public class Acknowledgement : MessagePartBean {

        private CS typeCode;
        private IList<INT> messageWaitingNumber;
        private IList<CV> messageWaitingPriorityCode;
        private II targetMessageId;
        private IList<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.ErrorsOrWarnings> acknowledgementDetail;

        public Acknowledgement() {
            this.typeCode = new CSImpl();
            this.messageWaitingNumber = new List<INT>();
            this.messageWaitingPriorityCode = new List<CV>();
            this.targetMessageId = new IIImpl();
            this.acknowledgementDetail = new List<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.ErrorsOrWarnings>();
        }
        /**
         * <summary>Business Name: GA:Acknowledgement Code</summary>
         * 
         * <remarks>Relationship: 
         * MCCI_MT002300CA.Acknowledgement.typeCode 
         * Conformance/Cardinality: MANDATORY (1) <p>Indicates whether 
         * the previous interaction was successfully processed.</p> 
         * <p>Key to understanding whether the interaction has been 
         * successful and is therefore mandatory.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"typeCode"})]
        public AcknowledgementType TypeCode {
            get { return (AcknowledgementType) this.typeCode.Value; }
            set { this.typeCode.Value = value; }
        }

        /**
         * <summary>Business Name: GC:Number of Waiting Messages</summary>
         * 
         * <remarks>Relationship: 
         * MCCI_MT002300CA.Acknowledgement.messageWaitingNumber 
         * Conformance/Cardinality: OPTIONAL (0) <p>For applications 
         * which support polling, indicates the total number of 
         * messages waiting to be retrieved.</p> <p>Indicates to a 
         * system how many polled messages are available without the 
         * need so send a separate query. The element is optional 
         * because not all systems will support polling.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"messageWaitingNumber"})]
        public IList<int?> MessageWaitingNumber {
            get { return new RawListWrapper<INT, int?>(messageWaitingNumber, typeof(INTImpl)); }
        }

        /**
         * <summary>Business Name: GD:Message Waiting Priority</summary>
         * 
         * <remarks>Relationship: 
         * MCCI_MT002300CA.Acknowledgement.messageWaitingPriorityCode 
         * Conformance/Cardinality: OPTIONAL (0) <p>Indicates the 
         * priority of the highest-priority message that is waiting on 
         * the poll queue for the system being responded to.</p> <p>The 
         * priority of the waiting message may influence how quickly 
         * the polling system may choose to download queued messages. 
         * The element is optional because not all systems will support 
         * polling.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"messageWaitingPriorityCode"})]
        public IList<Code> MessageWaitingPriorityCode {
            get { return new RawListWrapper<CV, Code>(messageWaitingPriorityCode, typeof(CVImpl)); }
        }

        /**
         * <summary>Business Name: BA:Acknowledged Message Id</summary>
         * 
         * <remarks>Relationship: MCCI_MT002300CA.TargetMessage.id 
         * Conformance/Cardinality: MANDATORY (1) <p>References the 
         * identifier of the message this current message is 
         * acknowledging.</p> <p>soap:Header\wsa:RelatesTo</p> 
         * <p>Provides the necessary link to complete a conversation 
         * for systems using communication technologies which are not 
         * conversational. This attribute is therefore mandatory.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"targetMessage/id"})]
        public Identifier TargetMessageId {
            get { return this.targetMessageId.Value; }
            set { this.targetMessageId.Value = value; }
        }

        /**
         * <summary>Relationship: 
         * MCCI_MT002300CA.Acknowledgement.acknowledgementDetail</summary>
         * 
         * <remarks>Conformance/Cardinality: REQUIRED (0-50)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"acknowledgementDetail"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.ErrorsOrWarnings> AcknowledgementDetail {
            get { return this.acknowledgementDetail; }
        }

    }

}