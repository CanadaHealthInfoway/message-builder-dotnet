/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Common.Mcci_mt002300ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Model;
    using System;
    using System.Collections.Generic;


    [Hl7PartTypeMappingAttribute(new string[] {"MCCI_MT002300CA.Sender"})]
    public class Sender : MessagePartBean {

        private IList<TEL> telecom;
        private II deviceId;
        private ST deviceName;
        private ST deviceDesc;
        private IVL<TS, Interval<PlatformDate>> deviceExistenceTime;
        private ST deviceManufacturerModelName;
        private ST deviceSoftwareName;

        public Sender() {
            this.telecom = new List<TEL>();
            this.deviceId = new IIImpl();
            this.deviceName = new STImpl();
            this.deviceDesc = new STImpl();
            this.deviceExistenceTime = new IVLImpl<TS, Interval<PlatformDate>>();
            this.deviceManufacturerModelName = new STImpl();
            this.deviceSoftwareName = new STImpl();
        }
        /**
         * <summary>IB:Sending Network Address</summary>
         * 
         * <remarks><p>The network address of the application which 
         * sent the message.</p> <p>soap:Header\wsa:From</p> <p>May be 
         * important for sender validation. Usually also the address to 
         * which responses are sent. This is optional because not all 
         * environments require network addresses. It is mandatory when 
         * communicating using SOAP.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"telecom"})]
        public IList<TelecommunicationAddress> Telecom {
            get { return new RawListWrapper<TEL, TelecommunicationAddress>(telecom, typeof(TELImpl)); }
        }

        /**
         * <summary>IA:Sending Application Identifier</summary>
         * 
         * <remarks><p>The unique identifier of the application or 
         * system to whom the message is being routed.</p> 
         * <p>soap:Header\wsa:From\@endpointID</p> <p>Because this is 
         * the key identifier of where the message is intended to go, 
         * this attribute is mandatory.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"device/id"})]
        public Identifier DeviceId {
            get { return this.deviceId.Value; }
            set { this.deviceId.Value = value; }
        }

        /**
         * <summary>IE:Sending Application Name</summary>
         * 
         * <remarks><p>This is the name associated with the system or 
         * application sending the message.</p> <p>Provides useful 
         * information when debugging.</p> <p>"JCAPS"</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"device/name"})]
        public String DeviceName {
            get { return this.deviceName.Value; }
            set { this.deviceName.Value = value; }
        }

        /**
         * <summary>II:Sending Application Configuration Information</summary>
         * 
         * <remarks><p>Provides additional information about the 
         * configuration of the sending application. Useful when 
         * debugging.</p> <p>Provides additional information that may 
         * assist in debugging interactions.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"device/desc"})]
        public String DeviceDesc {
            get { return this.deviceDesc.Value; }
            set { this.deviceDesc.Value = value; }
        }

        /**
         * <summary>IH:Sending Application Version Date</summary>
         * 
         * <remarks><p>Indicates the last time the sending application 
         * was modified or reconfigured.</p> <p>Can help to isolate the 
         * source of a problem when debugging.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"device/existenceTime"})]
        public Interval<PlatformDate> DeviceExistenceTime {
            get { return this.deviceExistenceTime.Value; }
            set { this.deviceExistenceTime.Value = value; }
        }

        /**
         * <summary>IG:Sending Software Version Number</summary>
         * 
         * <remarks><p>Indicates the version number of the piece of 
         * software used to construct the message.</p> <p>May be used 
         * to filter messages based on the compliance testing of the 
         * sending software.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"device/manufacturerModelName"})]
        public String DeviceManufacturerModelName {
            get { return this.deviceManufacturerModelName.Value; }
            set { this.deviceManufacturerModelName.Value = value; }
        }

        /**
         * <summary>IF:Sending Application Software Name</summary>
         * 
         * <remarks><p>Indicates the name of the software used to 
         * construct the message.</p> <p>May be used to filter messages 
         * based on sending application compliance testing.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"device/softwareName"})]
        public String DeviceSoftwareName {
            get { return this.deviceSoftwareName.Value; }
            set { this.deviceSoftwareName.Value = value; }
        }

    }

}