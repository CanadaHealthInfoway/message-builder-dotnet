/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Common.Mfmi_mt700746ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using System;


    /**
     * <summary>Business Name: f:refers to</summary>
     * 
     * <p>Indicates the item(s) being acted upon by this trigger 
     * event.</p><p>Will be mandatory in wrappers with payload 
     * messages, otherwise not present.</p> <p>Indicates the 
     * item(s) being acted upon by this trigger event.</p><p>Will 
     * be mandatory in wrappers with payload messages, otherwise 
     * not present.</p> <p>Provides information about the thing 
     * being created, modified or removed.</p> <p>If there are 
     * multiple subject items, the changes to all of them must be 
     * either accepted or rejected as a single action. I.e. One 
     * trigger event = 1 unit of work.</p>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"MFMI_MT700746CA.Subject2"})]
    public class RefersTo<RR> : MessagePartBean {

        private CS typeCode;
        private CS contextControlCode;
        private BL contextConductionInd;
        private Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Common.Mfmi_mt700746ca.RegistrationEvent<RR> registrationEvent;

        public RefersTo() {
            this.typeCode = new CSImpl();
            this.contextControlCode = new CSImpl();
            this.contextConductionInd = new BLImpl();
        }
        /**
         * <summary>Relationship: MFMI_MT700746CA.Subject2.typeCode</summary>
         * 
         * <remarks>Conformance/Cardinality: OPTIONAL (0-1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"typeCode"})]
        public ActRelationshipType TypeCode {
            get { return (ActRelationshipType) this.typeCode.Value; }
            set { this.typeCode.Value = value; }
        }

        /**
         * <summary>Relationship: 
         * MFMI_MT700746CA.Subject2.contextControlCode</summary>
         * 
         * <remarks>Conformance/Cardinality: OPTIONAL (0-1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"contextControlCode"})]
        public ContextControl ContextControlCode {
            get { return (ContextControl) this.contextControlCode.Value; }
            set { this.contextControlCode.Value = value; }
        }

        /**
         * <summary>Business Name: Cascade Responsibility Indicator</summary>
         * 
         * <remarks>Relationship: 
         * MFMI_MT700746CA.Subject2.contextConductionInd 
         * Conformance/Cardinality: OPTIONAL (0-1) <p>Indicates whether 
         * or not objects of the trigger event are to be cascaded to 
         * the payload.</p><p>If true, associations in the parent act 
         * are conducted across the ActRelationship to the message 
         * payload (act). Conduction for each association is 
         * specifically indicated by each associations' 
         * contextControlCode value.</p><p>In other words, if the 
         * &quot;subject&quot; act relationship has 
         * contextConductionInd=true; THEN the subjectOf association is 
         * carried (to the regsitrationEvent act) according to the 
         * subjectOf.contextControlCode (AP = propogate to the reg 
         * event and add to any subject(s) (issues) already 
         * present).</p> <p>Indicates whether or not objects of the 
         * trigger event are to be cascaded to the payload.</p><p>If 
         * true, associations in the parent act are conducted across 
         * the ActRelationship to the message payload (act). Conduction 
         * for each association is specifically indicated by each 
         * associations' contextControlCode value.</p><p>In other 
         * words, if the &quot;subject&quot; act relationship has 
         * contextConductionInd=true; THEN the subjectOf association is 
         * carried (to the regsitrationEvent act) according to the 
         * subjectOf.contextControlCode (AP = propogate to the reg 
         * event and add to any subject(s) (issues) already 
         * present).</p> <p>Indicates whether or not objects of the 
         * trigger event are to be cascaded to the payload.</p><p>If 
         * true, associations in the parent act are conducted across 
         * the ActRelationship to the message payload (act). Conduction 
         * for each association is specifically indicated by each 
         * associations' contextControlCode value.</p><p>In other 
         * words, if the &quot;subject&quot; act relationship has 
         * contextConductionInd=true; THEN the subjectOf association is 
         * carried (to the regsitrationEvent act) according to the 
         * subjectOf.contextControlCode (AP = propogate to the reg 
         * event and add to any subject(s) (issues) already 
         * present).</p> <p>Cascading of trigger event objects allows 
         * different messages to employ consistent and common 
         * objects.</p><p>Attribute is mandatory to ensure that 
         * cascading will be specified one way or another.</p> 
         * <p>Cascading of trigger event objects allows different 
         * messages to employ consistent and common 
         * objects.</p><p>Attribute is mandatory to ensure that 
         * cascading will be specified one way or another.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"contextConductionInd"})]
        public bool? ContextConductionInd {
            get { return this.contextConductionInd.Value; }
            set { this.contextConductionInd.Value = value; }
        }

        /**
         * <summary>Relationship: 
         * MFMI_MT700746CA.Subject2.registrationEvent</summary>
         * 
         * <remarks>Conformance/Cardinality: POPULATED (1)</remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"registrationEvent"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Common.Mfmi_mt700746ca.RegistrationEvent<RR> RegistrationEvent {
            get { return this.registrationEvent; }
            set { this.registrationEvent = value; }
        }

    }

}