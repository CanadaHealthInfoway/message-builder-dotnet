/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Porx_mt060160ca {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Domainvalue;
    using Ca.Infoway.Messagebuilder.Model;
    using Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged;
    using Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Coct_mt090107ca;
    using Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Coct_mt120600ca;
    using Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Coct_mt220110ca;
    using Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Merged;
    using System;
    using System.Collections.Generic;


    /**
     * <summary>Other Medications</summary>
     * 
     * <remarks><p>routeCode must not be used when code is SNOMED 
     * and is mandatory otherwise</p><p>Status can only be ACTIVE 
     * or COMPLETED</p><p>Reported Issue is only permitted if Issue 
     * Indicator is not present and vice versa</p><p>Annotation is 
     * only permitted if Annotation Indicator is not present and 
     * vice versa</p> <p>routeCode must not be used when code is 
     * SNOMED and is mandatory otherwise</p><p>Status can only be 
     * ACTIVE or COMPLETED</p><p>Reported Issue is only permitted 
     * if Issue Indicator is not present and vice 
     * versa</p><p>Annotation is only permitted if Annotation 
     * Indicator is not present and vice versa</p> <p>routeCode 
     * must not be used when code is SNOMED and is mandatory 
     * otherwise</p><p>Status can only be ACTIVE or 
     * COMPLETED</p><p>Reported Issue is only permitted if Issue 
     * Indicator is not present and vice versa</p><p>Annotation is 
     * only permitted if Annotation Indicator is not present and 
     * vice versa</p> <p>routeCode must not be used when code is 
     * SNOMED and is mandatory otherwise</p><p>Status can only be 
     * ACTIVE or COMPLETED</p><p>Reported Issue is only permitted 
     * if Issue Indicator is not present and vice 
     * versa</p><p>Annotation is only permitted if Annotation 
     * Indicator is not present and vice versa</p> <p>A record of a 
     * medication the patient is believed to be taking, but for 
     * which an electronic order does not exist. 'Other 
     * medications' include any drug product deemed relevant to the 
     * patient's drug profile, but which was not specifically 
     * ordered by a prescriber in a DIS-enabled jurisdiction. 
     * Examples include over-the counter medications that were not 
     * specifically ordered, herbal remedies, and recreational 
     * drugs. Prescription drugs that the patient may be taking but 
     * was not prescribed on the EHR (e.g. institutionally 
     * administered or out-of-jurisdiction prescriptions) will also 
     * be recorded here.</p> <p>Necessary component of a person's 
     * overall medication profile. Allows DUR checking against a 
     * more complete drug profile.</p></remarks>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"PORX_MT060160CA.OtherMedication"})]
    public class OtherMedications : MessagePartBean, Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.IMedicationRecord {

        private II id;
        private CD code;
        private CS statusCode;
        private IVL<TS, Interval<PlatformDate>> effectiveTime;
        private CV confidentialityCode;
        private CV routeCode;
        private Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.Patient subjectPatient;
        private Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Coct_mt220110ca.DrugProduct consumableMedication;
        private Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Coct_mt090107ca.Provider responsiblePartyAssignedPerson;
        private Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Coct_mt090107ca.Provider authorAssignedPerson;
        private Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.CreatedAt location;
        private IList<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.AdministrationInstructions> componentDosageInstruction;
        private IList<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Merged.StatusChanges> subjectOf1ControlActEvent;
        private BL subjectOf2DetectedIssueIndicator;
        private IList<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Coct_mt120600ca.Notes> subjectOf3Annotation;
        private BL subjectOf4AnnotationIndicator;
        private IList<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.Issues> subjectOf5DetectedIssueEvent;

        public OtherMedications() {
            this.id = new IIImpl();
            this.code = new CDImpl();
            this.statusCode = new CSImpl();
            this.effectiveTime = new IVLImpl<TS, Interval<PlatformDate>>();
            this.confidentialityCode = new CVImpl();
            this.routeCode = new CVImpl();
            this.componentDosageInstruction = new List<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.AdministrationInstructions>();
            this.subjectOf1ControlActEvent = new List<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Merged.StatusChanges>();
            this.subjectOf2DetectedIssueIndicator = new BLImpl(false);
            this.subjectOf3Annotation = new List<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Coct_mt120600ca.Notes>();
            this.subjectOf4AnnotationIndicator = new BLImpl(false);
            this.subjectOf5DetectedIssueEvent = new List<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.Issues>();
        }
        /**
         * <summary>A:Administration Record Id</summary>
         * 
         * <remarks><p>This is an identifier assigned to a unique 
         * instance of an other medication record.</p> <p>Allows for 
         * the unique referencing of a specific active medication 
         * record. Thus the mandatory requirement. .</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"id"})]
        public Identifier Id {
            get { return this.id.Value; }
            set { this.id.Value = value; }
        }

        /**
         * <summary>Other Medication Type</summary>
         * 
         * <remarks><p>Must be 'DRUG' unless using SNOMED</p> 
         * <p>Indicates that the record is a drug administration rather 
         * than an immunization or other type of administration. For 
         * SNOMED, may also include route, drug and other 
         * information.</p> <p>Needed to convey the meaning of this 
         * class and is therefore mandatory.</p><p>The element allows 
         * 'CD' to provide support for SNOMED.</p> <p>Needed to convey 
         * the meaning of this class and is therefore 
         * mandatory.</p><p>The element allows 'CD' to provide support 
         * for SNOMED.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"code"})]
        public ActCode Code {
            get { return (ActCode) this.code.Value; }
            set { this.code.Value = value; }
        }

        /**
         * <summary>B:Other Medication Status</summary>
         * 
         * <remarks><p>Indicates the status of the other medication 
         * record created on the EHR/DIS. Valid statuses for other 
         * medication records are: ACTIVE, COMPLETE.</p> <p>Used to 
         * determine whether the medication should be considered in 
         * performing DUR checking.</p><p>Attribute is mandatory to 
         * ensure that a medication recorded in EHR/DIS is in some 
         * state.</p><p>Note ------ The provider might know that the 
         * patient is not taking the medication but not necessarily 
         * when the patient stopped it. Thus the status of the 
         * medication could be set to 'COMPLETED' by the provider 
         * without necessarily setting an End Date on the medication 
         * record.</p> <p>Used to determine whether the medication 
         * should be considered in performing DUR 
         * checking.</p><p>Attribute is mandatory to ensure that a 
         * medication recorded in EHR/DIS is in some state.</p><p>Note 
         * ------ The provider might know that the patient is not 
         * taking the medication but not necessarily when the patient 
         * stopped it. Thus the status of the medication could be set 
         * to 'COMPLETED' by the provider without necessarily setting 
         * an End Date on the medication record.</p> <p>Used to 
         * determine whether the medication should be considered in 
         * performing DUR checking.</p><p>Attribute is mandatory to 
         * ensure that a medication recorded in EHR/DIS is in some 
         * state.</p><p>Note ------ The provider might know that the 
         * patient is not taking the medication but not necessarily 
         * when the patient stopped it. Thus the status of the 
         * medication could be set to 'COMPLETED' by the provider 
         * without necessarily setting an End Date on the medication 
         * record.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"statusCode"})]
        public ActStatus StatusCode {
            get { return (ActStatus) this.statusCode.Value; }
            set { this.statusCode.Value = value; }
        }

        /**
         * <summary>C:Drug Active Period</summary>
         * 
         * <remarks><p>Indicates the time-period in which the patient 
         * has been taking or is expected to be taking the other 
         * medication.</p> 
         * <p>ZDP.13.2.2</p><p>ZDP.13.3</p><p>ZDP.13.4</p><p>ZDP.13.5</p> 
         * <p>ZDP.13.2.2</p><p>ZDP.13.3</p><p>ZDP.13.4</p><p>ZDP.13.5</p> 
         * <p>ZDP.13.2.2</p><p>ZDP.13.3</p><p>ZDP.13.4</p><p>ZDP.13.5</p> 
         * <p>ZDP.13.2.2</p><p>ZDP.13.3</p><p>ZDP.13.4</p><p>ZDP.13.5</p> 
         * <p>Used to indicate help determine whether the medication is 
         * currently active. Because this information won't always be 
         * available, the attribute is marked as 'populated'.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"effectiveTime"})]
        public Interval<PlatformDate> EffectiveTime {
            get { return this.effectiveTime.Value; }
            set { this.effectiveTime.Value = value; }
        }

        /**
         * <summary>D:Other Medication Masking Indicator</summary>
         * 
         * <remarks><p>Denotes access restriction place on the other 
         * active medication record. Methods for accessing masked 
         * active medications will be governed by each jurisdiction 
         * (e.g. court orders, shared secret/consent, etc.).</p> 
         * <p>Provides support for additional confidentiality 
         * constraint to reflect the wishes of the patient.</p><p>The 
         * attribute is optional because not all systems will support 
         * masking.</p> <p>Provides support for additional 
         * confidentiality constraint to reflect the wishes of the 
         * patient.</p><p>The attribute is optional because not all 
         * systems will support masking.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"confidentialityCode"})]
        public x_VeryBasicConfidentialityKind ConfidentialityCode {
            get { return (x_VeryBasicConfidentialityKind) this.confidentialityCode.Value; }
            set { this.confidentialityCode.Value = value; }
        }

        /**
         * <summary>E:Route of Administration</summary>
         * 
         * <remarks><p>This is the means by which the patient is taking 
         * the medication.</p> <p>RXR.1</p><p>Route of 
         * administration</p> <p>RXR.1</p><p>Route of 
         * administration</p> <p>Ensures consistency in description of 
         * routes. Provides potential for cross-checking dosage form 
         * and route. Because this information is pre-coordinated into 
         * 'code' for SNOMED, it is marked as optional.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"routeCode"})]
        public RouteOfAdministration RouteCode {
            get { return (RouteOfAdministration) this.routeCode.Value; }
            set { this.routeCode.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subject/patient"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.Patient SubjectPatient {
            get { return this.subjectPatient; }
            set { this.subjectPatient = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"consumable/medication"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Coct_mt220110ca.DrugProduct ConsumableMedication {
            get { return this.consumableMedication; }
            set { this.consumableMedication = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"responsibleParty/assignedPerson"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Coct_mt090107ca.Provider ResponsiblePartyAssignedPerson {
            get { return this.responsiblePartyAssignedPerson; }
            set { this.responsiblePartyAssignedPerson = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"author/assignedPerson"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Coct_mt090107ca.Provider AuthorAssignedPerson {
            get { return this.authorAssignedPerson; }
            set { this.authorAssignedPerson = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"location"})]
        public Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.CreatedAt Location {
            get { return this.location; }
            set { this.location = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"component/dosageInstruction"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.AdministrationInstructions> ComponentDosageInstruction {
            get { return this.componentDosageInstruction; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf1/controlActEvent"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Merged.StatusChanges> SubjectOf1ControlActEvent {
            get { return this.subjectOf1ControlActEvent; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf2/detectedIssueIndicator"})]
        public bool? SubjectOf2DetectedIssueIndicator {
            get { return this.subjectOf2DetectedIssueIndicator.Value; }
            set { this.subjectOf2DetectedIssueIndicator.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf3/annotation"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Coct_mt120600ca.Notes> SubjectOf3Annotation {
            get { return this.subjectOf3Annotation; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf4/annotationIndicator"})]
        public bool? SubjectOf4AnnotationIndicator {
            get { return this.subjectOf4AnnotationIndicator.Value; }
            set { this.subjectOf4AnnotationIndicator.Value = value; }
        }

        [Hl7XmlMappingAttribute(new string[] {"subjectOf5/detectedIssueEvent"})]
        public IList<Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Merged.Issues> SubjectOf5DetectedIssueEvent {
            get { return this.subjectOf5DetectedIssueEvent; }
        }

    }

}