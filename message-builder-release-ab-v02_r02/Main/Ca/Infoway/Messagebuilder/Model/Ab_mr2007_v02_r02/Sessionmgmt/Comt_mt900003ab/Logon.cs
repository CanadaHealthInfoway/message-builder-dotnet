/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
namespace Ca.Infoway.Messagebuilder.Model.Ab_mr2007_v02_r02.Sessionmgmt.Comt_mt900003ab {
    using Ca.Infoway.Messagebuilder.Annotation;
    using Ca.Infoway.Messagebuilder.Datatype;
    using Ca.Infoway.Messagebuilder.Datatype.Impl;
    using Ca.Infoway.Messagebuilder.Datatype.Lang;
    using Ca.Infoway.Messagebuilder.Model;
    using System;


    /**
     * <summary>Business Name: Logon</summary>
     * 
     * <p>Represents a request to being given permission to access 
     * a system.</p> <p>Rather than relying on local PoS 
     * applications for user authentication, some jurisdictions 
     * will require direct authentication to the central EHR 
     * application. This message is used where that authentication 
     * does not occur via other standards.</p>
     */
    [Hl7PartTypeMappingAttribute(new string[] {"COMT_MT900003AB.ActPermissionRequest"})]
    public class Logon : MessagePartBean {

        private II subjectAssignedDeviceAssignedDeviceId;
        private ST performer1SignatureText;
        private II performer1AssignedEntityId;
        private ST performer2SignatureText;
        private II performer2AssignedEntityId;

        public Logon() {
            this.subjectAssignedDeviceAssignedDeviceId = new IIImpl();
            this.performer1SignatureText = new STImpl();
            this.performer1AssignedEntityId = new IIImpl();
            this.performer2SignatureText = new STImpl();
            this.performer2AssignedEntityId = new IIImpl();
        }
        /**
         * <summary>Business Name: A:Logon Application</summary>
         * 
         * <remarks>Relationship: COMT_MT900003AB.Device.id 
         * Conformance/Cardinality: MANDATORY (1) <p>Indicates the 
         * application to which the password change applies</p> <p>This 
         * is mandatory, as passwords must be associated with a 
         * particular application. Note that the application might be a 
         * &quot;logical&quot; construct providing access to numerous 
         * physical systems, or might only provide access to a part of 
         * a physical system.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"subject/assignedDevice/assignedDevice/id"})]
        public Identifier SubjectAssignedDeviceAssignedDeviceId {
            get { return this.subjectAssignedDeviceAssignedDeviceId.Value; }
            set { this.subjectAssignedDeviceAssignedDeviceId.Value = value; }
        }

        /**
         * <summary>Business Name: C: Old Password</summary>
         * 
         * <remarks>Relationship: 
         * COMT_MT900003AB.Performer.signatureText 
         * Conformance/Cardinality: MANDATORY (1) <p>This is the 
         * original password associated with the user id previously 
         * used to authenticate the user to the application.</p> 
         * <p>This element is mandatory to validate that the password 
         * is being changed by the original user.</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"performer1/signatureText"})]
        public String Performer1SignatureText {
            get { return this.performer1SignatureText.Value; }
            set { this.performer1SignatureText.Value = value; }
        }

        /**
         * <summary>Business Name: B:Logon User</summary>
         * 
         * <remarks>Relationship: COMT_MT900003AB.AssignedEntity.id 
         * Conformance/Cardinality: MANDATORY (1) <p>Indicates the 
         * userid of the person being logged on.</p> <p>This is 
         * mandatory because you can't log someone on if you don't know 
         * who they are . . .</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"performer1/assignedEntity/id"})]
        public Identifier Performer1AssignedEntityId {
            get { return this.performer1AssignedEntityId.Value; }
            set { this.performer1AssignedEntityId.Value = value; }
        }

        /**
         * <summary>Business Name: New password</summary>
         * 
         * <remarks>Relationship: 
         * COMT_MT900003AB.Performer2.signatureText 
         * Conformance/Cardinality: MANDATORY (1) <p>Indicates the 
         * value the password should be changed to</p> <p>Mandatory 
         * because a null password is not allowed</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"performer2/signatureText"})]
        public String Performer2SignatureText {
            get { return this.performer2SignatureText.Value; }
            set { this.performer2SignatureText.Value = value; }
        }

        /**
         * <summary>Business Name: B:Logon User</summary>
         * 
         * <remarks>Relationship: COMT_MT900003AB.AssignedEntity.id 
         * Conformance/Cardinality: MANDATORY (1) <p>Indicates the 
         * userid of the person being logged on.</p> <p>This is 
         * mandatory because you can't log someone on if you don't know 
         * who they are . . .</p></remarks>
         */
        [Hl7XmlMappingAttribute(new string[] {"performer2/assignedEntity/id"})]
        public Identifier Performer2AssignedEntityId {
            get { return this.performer2AssignedEntityId.Value; }
            set { this.performer2AssignedEntityId.Value = value; }
        }

    }

}